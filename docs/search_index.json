[["index.html", "Replication File and Supplemental Analyses for ‘Shared Satisfaction among Residents Living in Multiracial Neighborhoods’ 1 Set Up", " Replication File and Supplemental Analyses for ‘Shared Satisfaction among Residents Living in Multiracial Neighborhoods’ Michael Bader 2021-11-01 1 Set Up In order to replicate these analyses, you must download and save the 2000 full-count data from the Longitudinal Tract Database by John Logan and colleagues. The README.md file in the repository provides instructions for doing so. R Version. The analyses were built with R version 3.6.3 (2020-02-29). Load the libraries necessary for the analysis and presentation of data. library(Amelia) library(broom) library(ggplot2) library(ggpubr) library(foreign) library(huxtable) library(knitr) library(kableExtra) library(margins) library(mitools) library(survey) library(tidyverse) library(xtable) options(&#39;huxtable.bookdown&#39;=TRUE) Create a list to hold results that will be reported to LaTeX later. texcmds &lt;- list() "],["description-of-dc-area-multiracial-neighborhood-populations.html", "2 Description of DC-Area &amp; Multiracial Neighborhood Populations 2.1 DC-area characteristics 2.2 Multiracial neighborhood characteristics 2.3 Diverse neighborhoods excluded for having a majority race", " 2 Description of DC-Area &amp; Multiracial Neighborhood Populations The following provides information about the DC Area cited in the manuscript. It includes code that creates Table 1 that compares demographic characteristics of multracial neighborhoods in the DC Area to all neighborhoods in the DC Area. Data come from the IPUMS National Historical Geographic Information System (NHGIS).1 Set up environment for analyzing data from the Census. Note the difference between DATADIR created here and dataDIR created in Data Construction. The data files are separated by category and are stored in separate directories, whose names are stored in vartypes. DATADIR &lt;- &#39;../data/dcarea/tracts/&#39; vartypes &lt;- c( &#39;children-present&#39;, &#39;educ-attainment&#39;, &#39;foreign-born&#39;, &#39;marital-status&#39;, &#39;median-age&#39;, &#39;race-ethnicity&#39; ) ## HELPER FUNCTIONS ## Load DC Area data for category of variable dcarea.data &lt;- function(vartype) { f &lt;- paste0(DATADIR, &#39;2010/tabular/&#39;, vartype, &#39;/dataset/tracts-2010TIGER-&#39;, vartype, &#39;.csv&#39;) return(read.csv(f)) } ## Return 2-item vector containing mean and standard deviation of variable meansd &lt;- function(var) { return(c(mean=mean(var, na.rm=TRUE), sd=sd(var, na.rm=TRUE))) } Load data from the ACS 2011-2015 and the 1980 Census to analyze. ## Load and join data from different categories of variables from 2015 ACS dcarea &lt;- lapply(vartypes, dcarea.data) %&gt;% reduce(left_join, by=&#39;GISJOIN&#39;) %&gt;% select(&#39;GISJOIN&#39;, ends_with(&#39;15&#39;)) ## Load data from 1980 fname &lt;- paste(DATADIR, &#39;1980/tabular/&#39;, &#39;race-ethnicity/dataset&#39;, &#39;tracts-1980TIGER-race-ethnicity.csv&#39;, sep=&#39;/&#39;) dcarea80 &lt;- read.csv(fname) 2.1 DC-area characteristics Population of the DC area. Calculate the total population of the DC area in 1980 and 2015. totpop80 &lt;- sum(dcarea80$totpop) totpop15 &lt;- sum(dcarea$totpop15) Year Total Population 1980 2,764,079 2015 4,096,851 Racial composition in 1980. Calculate proportion of DC-area population made up each racial group in 1980. dcarea80 &lt;- sapply(dcarea80[,c(&#39;totpop&#39;, &#39;nhw&#39;,&#39;nhb&#39;,&#39;hsp&#39;,&#39;api&#39;)], sum) prace80 &lt;- round(sapply(dcarea80[2:5], function(x) x/dcarea80[1]),3)*100 kable(prace80) x nhw.totpop 63.6 nhb.totpop 29.4 hsp.totpop 3.2 api.totpop 2.7 Racial composition in 2015. Calculate proportion of DC-area population made up of each racial group in 2015. n.hsp &lt;- sum(dcarea$hsp15) n.api &lt;- sum(dcarea$api15) n.nhw &lt;- sum(dcarea$nhw15) n.nhb &lt;- sum(dcarea$nhb15) n.totpop &lt;- sum(dcarea$totpop15) p.hsp &lt;- n.hsp/n.totpop p.api &lt;- n.api/n.totpop p.nhw &lt;- n.nhw/n.totpop p.nhb &lt;- n.nhb/n.totpop dcarea.race &lt;- data.frame( race=c(&#39;Latinx&#39;,&#39;Asian&#39;,&#39;Non-Hispanic white&#39;, &#39;Non-Hispanic black&#39;), vals=round(c(p.hsp, p.api, p.nhw, p.nhb),3)*100) kable(dcarea.race) race vals Latinx 15.7 Asian 11.1 Non-Hispanic white 40.7 Non-Hispanic black 29.2 Foreign Born Calculate percentage of residents that are foreign-born in DC area in 2015 (referenced on page 8 of the manuscript). sum(dcarea$fbpop15)/sum(dcarea$totpop15) ## [1] 0.2567643 Countries of orgin. Report largest three countries of origin in the DC area. Load data and keep only tracts in the DC area. ## Analyzes foreign-born population to find top three nations of origin ## among foreign-born population in the DC area ## Source file with function to construct variables for DC area source(&#39;dcarea/dcarea_functions.R&#39;) ## Load file of 2015 ACS data on tract-level foreign-born population fname &lt;- &#39;dcarea/AC52015_foreign_born.csv&#39; fborn &lt;- read.csv(fname) ## Select only DC-area tracts dc.fborn &lt;- select.dcarea(fborn) Create list of variable names that define regions, not countries and keep variables not in the list of regions (which define countries). region.vars &lt;- c( &#39;ADU4E001&#39;, &#39;ADU4E002&#39;, &#39;ADU4E003&#39;, &#39;ADU4E004&#39;, &#39;ADU4E005&#39;, &#39;ADU4E013&#39;, &#39;ADU4E021&#39;, &#39;ADU4E028&#39;, &#39;ADU4E047&#39;, &#39;ADU4E048&#39;, &#39;ADU4E049&#39;, &#39;ADU4E056&#39;, &#39;ADU4E067&#39;, &#39;ADU4E078&#39;, &#39;ADU4E091&#39;, &#39;ADU4E092&#39;, &#39;ADU4E098&#39;, &#39;ADU4E101&#39;, &#39;ADU4E106&#39;, &#39;ADU4E109&#39;, &#39;ADU4E117&#39;, &#39;ADU4E118&#39;, &#39;ADU4E123&#39;, &#39;ADU4E124&#39;, &#39;ADU4E125&#39;, &#39;ADU4E138&#39;, &#39;ADU4E148&#39;, &#39;ADU4E160&#39; ) ## Keep only non-region variables nonregion.vars &lt;- names(dc.fborn)[!(names(dc.fborn) %in% region.vars)] dc.fborn &lt;- dc.fborn[, nonregion.vars] Sum total population across DC-area tracts by each country of origin, then rank and report the top three countries. The codes (variable names) for the countries can be found in the file analysis/dcarea/nhgis0011_ds216_20155_2015_tract_E_codebook.txt. Report the top three DC-area countries of origin (reported by variable name). country.sums &lt;- sapply(dc.fborn[, grep(&#39;^ADU4&#39;, names(dc.fborn), value=TRUE)], function(x) sum(as.numeric(x))) # Rank countries of origin by population size country.rank &lt;- sort(country.sums, decreasing=TRUE) # Report countries of origin by variable name kable(head(country.rank, 3)) x ADU4E142 139774 ADU4E059 67203 ADU4E054 50986 Educational Attainment among Foreign-Born Residents Report the percentage of U.S. and DC-area residents with BA or graduate degrees by foreign-born status. ## Source file with function to construct variables for DC area source(&#39;dcarea/dcarea_functions.R&#39;) ## Load file of 2015 ACS data on tract-level foreign-born population fname &lt;- &#39;dcarea/AC52015_educ_by_foreign_born.csv&#39; fbeduc &lt;- read.csv(fname) us.fbba &lt;- sum(fbeduc$fbba, na.rm=TRUE) / sum(fbeduc$fbtot25o, na.rm=TRUE) us.fbgr &lt;- sum(fbeduc$fbgr, na.rm=TRUE) / sum(fbeduc$fbtot25o, na.rm=TRUE) dc.fbeduc &lt;- select.dcarea(fbeduc) dc.fbba &lt;- ( sum(dc.fbeduc$fbba, na.rm=TRUE) / sum(dc.fbeduc$fbtot25o, na.rm=TRUE)) dc.fbgr &lt;- ( sum(dc.fbeduc$fbgr, na.rm=TRUE) / sum(dc.fbeduc$fbtot25o, na.rm=TRUE)) fbeduc.comp &lt;- data.frame(degree=c(&#39;BA&#39;, &#39;MA+&#39;), DC=round(c(dc.fbba, dc.fbgr),3)*100, US=round(c(us.fbba, us.fbgr),3)*100) kable(fbeduc.comp) degree DC US BA 21.1 16.5 MA+ 22.2 12.0 2.2 Multiracial neighborhood characteristics Population living in multiracial neighborhoods Report the number of people living in multiracial neighborhoods in 2015. (quadpop &lt;- sum(dcarea[dcarea$quad15==TRUE, &#39;totpop15&#39;], na.rm=TRUE)) ## [1] 584493 Comparison of multiracial to all DC-area neighborhoods. Construct table comparing characteristics of the population living in DC-area multiracial neighborhoods to the characteristics of all DC-area neighborhoods. Code creates Table 1 in the manuscript. Save the comparison table to tables/nhood_descriptives.tex. ## Construct variables for analytic table, and keep only those variables dcarea &lt;- dcarea %&gt;% mutate( ## Children present in HH pchildpres = pchpr15 * 100, ## Educational attainment peduc.lhs = plh15 * 100, peduc.hs = phs15 * 100, peduc.somecoll = (psc15 + paa15) * 100, peduc.ba = pba15 * 100, peduc.ma = pgr15 * 100, ## Foreign-born pfborn = fbpop15 / totpop15 * 100, ## Currently married pmarried = pmar15 * 100, ## Median age (no new variable necessary) ## Race-ethnicity race.papi = papi15 * 100, race.phsp = phsp15 * 100, race.pnhb = pnhb15 * 100, race.pnhw = pnhw15 * 100 ) %&gt;% select(GISJOIN, totpop15, pchildpres, pfborn, pmarried, mdage15, starts_with(&#39;peduc&#39;), starts_with(&#39;race&#39;), quad15, nhw15) ## CONSTRUCT TABLE ## Define list of variables in desired display order tablevars &lt;- c(grep(&#39;^race&#39;, names(dcarea), value=TRUE), grep(&#39;^peduc&#39;, names(dcarea), value=TRUE), &#39;pfborn&#39;, &#39;pchildpres&#39;, &#39;pmarried&#39;) ## Create table of values for multiethnic and all DC Area tracts quads &lt;- t(sapply(dcarea[dcarea$quad15==TRUE, tablevars], meansd)) tracts &lt;- t(sapply(dcarea[, tablevars], meansd)) tracttbl &lt;- data.frame(quads, tracts) ## List of variable names to be published in the table tblnames &lt;- c(&#39;\\\\emph{Racial composition}&amp;&amp;&amp;\\\\\\\\Percent Asian&#39;, &#39;Percent Hispanic&#39;, &#39;Percent non-Hispanic black&#39;, &#39;Percent non-Hispanic white&#39;, &#39;\\\\emph{Educational attainment}&amp;&amp;&amp;\\\\\\\\Percent less than high school&#39;, &#39;Percent high school&#39;, &#39;Percent some college&#39;, &#39;Percent bachelor\\&#39;s degree&#39;, &#39;Percent professional degree&#39;, &#39;\\\\emph{Other demographic characteristics}&amp;&amp;&amp;\\\\\\\\Percent foreign-born&#39;, &#39;Percent of households with children present&#39;, &#39;Percent married (not separated)&#39; ) ## Create table with formatting tbl &lt;- data.frame(tblnames, quads, blank=rep(&#39; &#39;, nrow(quads)), tracts) tbl[,c(2,3,5,6)] &lt;- lapply(tbl[,c(2,3,5,6)], function(x) sprintf(&#39;%3.1f&#39;, x)) # tbl[,c(3,6)] &lt;- lapply(tbl[,c(3,6)], function(x) paste0(&#39;(&#39;,x,&#39;)&#39;)) colnames(tbl) &lt;- c(&#39;Variable&#39;, &#39;Mean&#39;, &#39;S.D.&#39;,&#39;&#39;, &#39;Mean&#39;, &#39;S.D.&#39;) cap &lt;- paste0(&#39;Means and standard deviations of tract-level variables&#39;, &#39;in multiethnic and quadrivial neighborhoods in the DC Area&#39;) kable(tbl, caption=cap, row.names=FALSE) Table 2.1: Means and standard deviations of tract-level variablesin multiethnic and quadrivial neighborhoods in the DC Area Variable Mean S.D. Mean S.D. &amp;&amp;&amp;\\Percent Asian 18.3 7.5 10.2 9.4 Percent Hispanic 24.3 9.8 14.6 13.6 Percent non-Hispanic black 22.2 9.5 30.9 31.3 Percent non-Hispanic white 31.5 9.7 41.1 27.2 &amp;&amp;&amp;\\Percent less than high school 12.8 6.5 9.9 9.3 Percent high school 18.0 5.6 17.2 11.1 Percent some college 22.6 5.3 20.6 8.6 Percent bachelor’s degree 25.4 5.8 25.5 9.8 Percent professional degree 21.2 6.6 26.8 15.9 &amp;&amp;&amp;\\Percent foreign-born 39.7 9.1 23.9 14.7 Percent of households with children present 37.5 9.9 32.7 12.2 Percent married (not separated) 48.4 8.0 44.9 15.8 Location of multiracial neighborhoods in the DC area Rank counties by the number of multiracial neighborhoods included in their jurisdictions. Multiracial neighborhoods were those in which Asians, blacks, Latinxs, and whites all made up at least 10% of the neighborhood populaiton and no group represents a majority. Construct variables measuring multiracial neighborhoods, both those included using the criteria and those excluded for not meeting the criterion that no group be a majority. racevars &lt;- paste0(&#39;race.&#39;,c(&#39;papi&#39;,&#39;pnhb&#39;,&#39;phsp&#39;,&#39;pnhw&#39;)) dcarea$othmulti &lt;- apply(sapply(dcarea[, racevars], function(x) !is.na(x) &amp; x&gt;=10), 1, all) dcarea$exclmulti &lt;- dcarea$quad15 != dcarea$othmulti dcarea$county &lt;- factor(substr(as.character(dcarea$GISJOIN), 2, 7)) levels(dcarea$county) &lt;- c( &#39;D.C.&#39; , &#39;Montgomery county&#39; , &#39;Prince George\\&#39;s county&#39; , &#39;Arlington county&#39; , &#39;Fairfax county&#39; , &#39;Fairfax city&#39; , &#39;Falls Church city&#39; , &#39;Alexandria city&#39; ) ## Breakdown of &#39;excluded&#39; multiethnic neighborhoods by county excl_juris &lt;- table(dcarea[, c(&#39;county&#39;, &#39;exclmulti&#39;)]) N_excluded &lt;- sum(excl_juris[,2]) ## Breakdown of multiethnic neighborhoods by county multi_tbl &lt;-table(dcarea[, c(&#39;county&#39;, &#39;quad15&#39;)]) kable(sort(multi_tbl[,2], decreasing=TRUE)) x Montgomery county 53 Fairfax county 41 Prince George’s county 10 Fairfax city 4 Arlington county 2 D.C. 1 Falls Church city 0 Alexandria city 0 2.3 Diverse neighborhoods excluded for having a majority race There were 18 neighborhoods that did not meet the criterion that no racial group be a majority. Excluded for having a white majority dcarea[!is.na(dcarea$exclmulti) &amp; dcarea$exclmulti==TRUE &amp; dcarea$race.pnhw&gt;50, c(&#39;county&#39;, racevars, &#39;GISJOIN&#39;)] Table 2.2: countyrace.papirace.pnhbrace.phsprace.pnhwGISJOIN D.C.12.117.710.956&nbsp;&nbsp;G1100010005900 D.C.14.112.312.357.7G1100010010100 Montgomery county21&nbsp;&nbsp;10.811.353.2G2400310700616 Montgomery county13.511.310.261.5G2400310701004 Montgomery county13.912.710.259.9G2400310701313 Montgomery county10.318&nbsp;&nbsp;18.150.1G2400310701314 Montgomery county12.720.514.850.3G2400310703216 Arlington county20.511.513.850.3G5100130103200 Arlington county14.216.310.557&nbsp;&nbsp;G5100130103502 Fairfax county13.413.415.455.4G5100590421102 Fairfax county11.416.611.753.8G5100590422301 Fairfax county18.511.412.455.4G5100590432000 Fairfax county11.114.913.150.5G5100590432800 Fairfax county21.712.110.751.5G5100590440202 Fairfax city10.121.812.452.4G5105100200107 Excluded for having a black majority dcarea[!is.na(dcarea$exclmulti) &amp; dcarea$exclmulti==TRUE &amp; dcarea$race.pnhb&gt;50, c(&#39;county&#39;, racevars, &#39;GISJOIN&#39;)] Table 2.3: countyrace.papirace.pnhbrace.phsprace.pnhwGISJOIN Montgomery county13.458.311.610.6G2400310701423 Prince George's county12.950.120.610.4G2400330801411 Excluded for having a Latino majority: dcarea[!is.na(dcarea$exclmulti) &amp; dcarea$exclmulti==TRUE &amp; dcarea$race.phsp&gt;50, c(&#39;county&#39;, racevars, &#39;GISJOIN&#39;)] Table 2.4: countyrace.papirace.pnhbrace.phsprace.pnhwGISJOIN Montgomery county12.823.350.810.3G2400310700724 Steven Manson, Jonathan Schroeder, David Van Riper, and Steven Ruggles. IPUMS National Historical Geographic Information System: Version 13.0 [Database]. Minneapolis: University of Minnesota. 2018. http://doi.org/10.18128/D050.V13.0↩︎ "],["data-construction.html", "3 Data Construction 3.1 Respondent Selection 3.2 Variable Construction 3.3 Add Neighborhood Context onto Survey Data 3.4 Data Imputation and Weighting 3.5 Center Variables 3.6 Save Data", " 3 Data Construction Data for this manuscript come from the 2016 and 2018 DC Area Surveys. More information about the 2016 DC Area Survey can be found here and the 2018 DC Area Survey can be found here. load(&#39;../data/dcas/DCAS_2016_weighted.Rdata&#39;) dcas16 &lt;- dcas load(&#39;../data/dcas/DCAreaSurvey2018.Rdata&#39;) dcas18 &lt;- dcas rm(dcas) 3.1 Respondent Selection Respondents Living in Multiracial Neighborhoods (DCAS 2016). The DCAS 2016 data represent two populations: those living in multiracial neighborhoods and those living in disproportionately Latino neighborhoods. This manuscript only used data from the multiracial neighborhoods. I create a variable quad to represent these variables (‘quad’ comes from my previous description of stable multiracial neighborhoods as ‘quadrivial neighborhoods’). dcas16$quad &lt;- dcas16$neighborhood==&#39;Global Neighborhood&#39; table(dcas16[,c(&#39;neighborhood&#39;,&#39;quad&#39;)]) ##Check variable ## quad ## neighborhood FALSE TRUE ## Global Neighborhood 0 674 ## Latino Enclave 548 0 dcas16$sample_tract &lt;- droplevels(dcas16$sample_tract) # dcas16$quad &lt;- dcas16$neighborhood==&#39;Global Neighborhood&#39; # table(dcas16[,c(&#39;neighborhood&#39;,&#39;quad&#39;)]) # N_norace &lt;- sum(is.na(dcas$dem.race) &amp; dcas$quad==TRUE) # dcas &lt;- dcas[!is.na(dcas$dem.race) &amp; dcas$quad==TRUE,] # dcas$sample_tract &lt;- droplevels(dcas$sample_tract) # N_quad &lt;- length(dcas$studycase) # N &lt;- sum(!is.na(dcas$dem.race)) # texcmds[[&#39;N&#39;]] &lt;- N 3.2 Variable Construction 3.2.1 Dependent Variables Neighborhood Satisfaction. Create neighborhood satisfaction variable (satisfied) to represent responses of “Extremely Satisfied” or “Very Satisfied”. Check that the variable was created correctly. dcas16$satisfied &lt;- as.numeric(dcas16$nhd.satisfaction %in% c( &#39;Extremely satisfied&#39;,&#39;Very satisfied&#39;)*1) dcas16$nhdsat &lt;- gsub(&quot; satisfied&quot;, &quot;&quot;, dcas16$nhd.satisfaction) %&gt;% ordered(levels = c(&quot;Not at all&quot;, &quot;Somewhat&quot;, &quot;Very&quot;, &quot;Extremely&quot;)) table(dcas16[, c(&#39;nhd.satisfaction&#39;,&#39;satisfied&#39;)]) ##Check variable ## satisfied ## nhd.satisfaction 0 1 ## Extremely satisfied 0 231 ## Very satisfied 0 591 ## Somewhat satisfied 362 0 ## Not at all satisfied 26 0 table(dcas16[, c(&#39;nhd.satisfaction&#39;,&#39;nhdsat&#39;)]) ##Check variable ## nhdsat ## nhd.satisfaction Not at all Somewhat Very Extremely ## Extremely satisfied 0 0 0 231 ## Very satisfied 0 0 591 0 ## Somewhat satisfied 0 362 0 0 ## Not at all satisfied 26 0 0 0 dcas18$satisfied &lt;- dcas18$nhdsat %in% c(&#39;Extremely&#39;, &#39;Very&#39;)*1 table(dcas18[, c(&#39;nhdsat&#39;, &#39;satisfied&#39;)]) ##Checkvariable ## satisfied ## nhdsat 0 1 ## Not at all 22 0 ## Somewhat 214 0 ## Very 0 468 ## Extremely 0 351 Neighborhood improvement. Create variable (better) measuring whether respondent perceives that the neighborhood has improved. Include responses “Much better” and “Somewhat better”. Check that variable was created correctly. betterlabs &lt;- c(&quot;Much better&quot;, &quot;Somewhat better&quot;) changelabs &lt;- c( &quot;Much worse&quot; = &quot;Worse&quot;, &quot;Somewhat worse&quot; = &quot;Worse&quot;, &quot;About the same&quot; = &quot;Same&quot;, &quot;Somewhat better&quot; = &quot;Better&quot;, &quot;Much better&quot; = &quot;Better&quot; ) dcas16 &lt;- dcas16 %&gt;% mutate( better = ifelse( is.na(nhd.change), NA, dcas16$nhd.change %in% betterlabs), nhdchg = recode_factor(nhd.change, !!!changelabs) ) table(dcas16[, c(&quot;nhd.change&quot;, &quot;better&quot;)], useNA=&quot;always&quot;) ##Check variable ## better ## nhd.change FALSE TRUE &lt;NA&gt; ## Much better 0 155 0 ## Somewhat better 0 285 0 ## About the same 624 0 0 ## Somewhat worse 124 0 0 ## Much worse 15 0 0 ## &lt;NA&gt; 0 0 19 table(dcas16[, c(&quot;nhd.change&quot;, &quot;nhdchg&quot;)], useNA=&quot;always&quot;) ##Check variable ## nhdchg ## nhd.change Worse Same Better &lt;NA&gt; ## Much better 0 0 155 0 ## Somewhat better 0 0 285 0 ## About the same 0 624 0 0 ## Somewhat worse 124 0 0 0 ## Much worse 15 0 0 0 ## &lt;NA&gt; 0 0 0 19 dcas18 &lt;- dcas18 %&gt;% mutate( nhdchgbak = nhdchg, better = ifelse( is.na(nhdchgbak), NA, nhdchgbak %in% betterlabs), nhdchg = recode_factor(nhdchgbak, !!!changelabs) ) table(dcas18[, c(&quot;nhdchgbak&quot;, &quot;better&quot;)], useNA=&quot;always&quot;) ##Check variable ## better ## nhdchgbak FALSE TRUE &lt;NA&gt; ## Much worse 16 0 0 ## Somewhat worse 84 0 0 ## About the same 482 0 0 ## Somewhat better 0 260 0 ## Much better 0 138 0 ## &lt;NA&gt; 0 0 81 table(dcas18[, c(&quot;nhdchgbak&quot;, &quot;nhdchg&quot;)], useNA=&quot;always&quot;) ##Check variable ## nhdchg ## nhdchgbak Worse Same Better &lt;NA&gt; ## Much worse 16 0 0 0 ## Somewhat worse 84 0 0 0 ## About the same 0 482 0 0 ## Somewhat better 0 0 260 0 ## Much better 0 0 138 0 ## &lt;NA&gt; 0 0 0 81 3.2.2 Independent Variable Race. Create a race variable measuring four-category, mutually exclusive racial categories. fourraces &lt;- c(&#39;white&#39;, &#39;asian&#39;, &#39;black&#39;, &#39;latino&#39;) dcas16 &lt;- dcas16 %&gt;% mutate( raceeth = recode_factor(dem.race, api = &quot;asian&quot;), raceeth = relevel(raceeth, ref=&quot;white&quot;), raceeth_mi = is.na(raceeth), anarace = raceeth %in% fourraces ) table(dcas16[, c(&#39;dem.race&#39;, &#39;raceeth&#39;)], useNA=&#39;always&#39;) ##Check variable ## raceeth ## dem.race white asian black latino &lt;NA&gt; ## api 0 277 0 0 0 ## black 0 0 253 0 0 ## latino 0 0 0 215 0 ## white 417 0 0 0 0 ## &lt;NA&gt; 0 0 0 0 60 table(dcas16[, c(&#39;dem.race&#39;, &#39;raceeth_mi&#39;)], useNA=&quot;always&quot;) ## raceeth_mi ## dem.race FALSE TRUE &lt;NA&gt; ## api 277 0 0 ## black 253 0 0 ## latino 215 0 0 ## white 417 0 0 ## &lt;NA&gt; 0 60 0 table(dcas16[, c(&#39;dem.race&#39;, &#39;anarace&#39;)], useNA=&quot;always&quot;) ## anarace ## dem.race FALSE TRUE &lt;NA&gt; ## api 0 277 0 ## black 0 253 0 ## latino 0 215 0 ## white 0 417 0 ## &lt;NA&gt; 60 0 0 racelabs &lt;- c( &quot;White&quot; = &quot;white&quot;, &quot;Asian/Pac. Islander&quot; = &quot;asian&quot;, &quot;Black&quot; = &quot;black&quot;, &quot;Latinx&quot; = &quot;latino&quot;, &quot;Native American&quot; = &quot;other&quot;, &quot;Other&quot; = &quot;other&quot; ) dcas18 &lt;- dcas18 %&gt;% mutate( raceethbak = raceeth, raceeth = recode_factor(raceeth, !!!racelabs), raceeth = relevel(raceeth, ref=&quot;white&quot;), raceeth_mi = is.na(raceeth), anarace = raceeth %in% fourraces ) table(dcas18[, c(&#39;raceethbak&#39;, &#39;raceeth&#39;)], useNA=&quot;always&quot;) ##Check variable ## raceeth ## raceethbak white asian black latino other &lt;NA&gt; ## Asian/Pac. Islander 0 93 0 0 0 0 ## Black 0 0 308 0 0 0 ## Latinx 0 0 0 75 0 0 ## Native American 0 0 0 0 8 0 ## Other 0 0 0 0 21 0 ## White 513 0 0 0 0 0 ## &lt;NA&gt; 0 0 0 0 0 43 table(dcas18[, c(&#39;raceethbak&#39;, &#39;raceeth_mi&#39;)], useNA=&quot;always&quot;) ## raceeth_mi ## raceethbak FALSE TRUE &lt;NA&gt; ## Asian/Pac. Islander 93 0 0 ## Black 308 0 0 ## Latinx 75 0 0 ## Native American 8 0 0 ## Other 21 0 0 ## White 513 0 0 ## &lt;NA&gt; 0 43 0 table(dcas18[, c(&#39;raceethbak&#39;, &#39;anarace&#39;)], useNA=&quot;always&quot;) ## anarace ## raceethbak FALSE TRUE &lt;NA&gt; ## Asian/Pac. Islander 0 93 0 ## Black 0 308 0 ## Latinx 0 75 0 ## Native American 8 0 0 ## Other 21 0 0 ## White 0 513 0 ## &lt;NA&gt; 43 0 0 3.2.3 Control Variables 3.2.3.1 Demographic variables Create variables for demographic controls. Age. The age variable (age) was calculated by subtracting birth year from 2016. Represents age on December 31, 2016. Center age at 50. dcas16$age &lt;- dcas16$dem.age - 50 ## Center at age 50 qplot(dcas16$age, labs=c(title=&quot;2016&quot;)) ## Warning: Ignoring unknown parameters: labs ## Warning: Removed 58 rows containing non-finite values (stat_bin). dcas18$age &lt;- dcas18$age - 50 qplot(dcas18$age, labs=c(title=&quot;2018&quot;)) ## Warning: Ignoring unknown parameters: labs ## Warning: Removed 49 rows containing non-finite values (stat_bin). Foreign born. Variable (forborn) measuring whether respondent reported being born outside of the United States (reference=no). dcas16$forborn &lt;- dcas16$dem.forborn table(dcas16[, c(&quot;dem.forborn&quot;, &quot;forborn&quot;)], useNA=&#39;always&#39;) ##Check variable ## forborn ## dem.forborn FALSE TRUE &lt;NA&gt; ## FALSE 657 0 0 ## TRUE 0 530 0 ## &lt;NA&gt; 0 0 35 dcas18 &lt;- dcas18 %&gt;% mutate(forborn = ifelse(is.na(usborn), NA, usborn==&quot;Another country&quot;)) table(dcas18[, c(&quot;usborn&quot;, &quot;forborn&quot;)], useNA=&quot;always&quot;) ##Check variable ## forborn ## usborn FALSE TRUE &lt;NA&gt; ## United States 793 0 0 ## Puerto Rico 2 0 0 ## Another country 0 205 0 ## &lt;NA&gt; 0 0 61 Male. Variable measures whether the respondent reported being male. The option “other” was offered to respondents. Two respondents in 2016 and five respondents in 2018 reported other and were counted as missing on this variable. dcas16$man &lt;- dcas16$dem.gender.mf==&#39;Male&#39; table(dcas16[, c(&#39;dem.gender&#39;, &#39;man&#39;)], useNA=&#39;always&#39;) ## man ## dem.gender FALSE TRUE &lt;NA&gt; ## Male 0 553 0 ## Female 635 0 0 ## Other 0 0 2 ## &lt;NA&gt; 0 0 32 dcas18 &lt;- dcas18 %&gt;% mutate( man = if_else(gender==&#39;Male&#39;, TRUE, FALSE) ) table(dcas18[, c(&quot;gender&quot;,&quot;man&quot;)], useNA=&quot;always&quot;) ## man ## gender FALSE TRUE &lt;NA&gt; ## Male 0 456 0 ## Female 575 0 0 ## In another way 5 0 0 ## &lt;NA&gt; 0 0 25 Kids. Variable (kids) measures whether the respondent has any children under the age of 18 living at home. Recode unreasonable values to be missing. dcas16$kids &lt;- as.numeric(as.character(dcas16$q2)) &gt; 0 ## Warning: NAs introduced by coercion dcas16$kids[as.numeric(as.character(dcas16$q2)) &gt; 90] &lt;- NA ## Warning in dcas16$kids[as.numeric(as.character(dcas16$q2)) &gt; 90] &lt;- NA: NAs ## introduced by coercion table(dcas16[, c(&#39;q2&#39;, &#39;kids&#39;)], useNA=&#39;always&#39;) ## kids ## q2 FALSE TRUE &lt;NA&gt; ## 0 813 0 0 ## 1 0 172 0 ## 10 0 1 0 ## 2 0 137 0 ## 3 0 32 0 ## 4 0 13 0 ## 5 0 4 0 ## 7 0 2 0 ## 8 0 1 0 ## No Answer 0 0 45 ## 99 0 0 2 ## &lt;NA&gt; 0 0 0 dcas18$kidsbak &lt;- dcas18$kids dcas18$kids &lt;- ifelse(!is.na(dcas18$kidsbak), dcas18$kidsbak&gt;0, NA) table(dcas18[, c(&#39;kidsbak&#39;, &#39;kids&#39;)], useNA=&quot;always&quot;) ## kids ## kidsbak FALSE TRUE &lt;NA&gt; ## 0 783 0 0 ## 1 0 119 0 ## 2 0 97 0 ## 3 0 19 0 ## 4 0 8 0 ## 5 0 1 0 ## 6 0 1 0 ## 7 0 1 0 ## 10 0 1 0 ## &lt;NA&gt; 0 0 31 Married. Variable (married) measures whether respondent is married or in a married-like relationship. dcas16$married &lt;- grepl(&quot;Now married&quot;, dcas16$dem.marital.stat) table(dcas16[,c(&#39;dem.marital.stat&#39;,&#39;married&#39;)], useNA=&#39;always&#39;) ##Check recoding ## married ## dem.marital.stat FALSE TRUE &lt;NA&gt; ## Now married or in a married-style arrangement 0 714 0 ## Widowed 97 0 0 ## Divorced 130 0 0 ## Separated 25 0 0 ## Never married 235 0 0 ## &lt;NA&gt; 21 0 0 dcas18$marriedbak &lt;- dcas18$married dcas18$married &lt;- dcas18$marriedbak == &quot;Married&quot; table(dcas18[, c(&quot;marriedbak&quot;, &quot;married&quot;)], useNA=&quot;always&quot;) ##Check variable ## married ## marriedbak FALSE TRUE &lt;NA&gt; ## Married 0 540 0 ## Widowed 82 0 0 ## Divorced 149 0 0 ## Separated 21 0 0 ## Never married 239 0 0 ## &lt;NA&gt; 0 0 30 3.2.3.2 Socioeconomic Variables Educational attainment. Create variable (educ) measuring educational attainment. Check variable was created correctly. dcas16$educ &lt;- factor(dcas16$dem.educ.attain, order=FALSE) %&gt;% relevel(ref=&#39;H.S.&#39;) table(dcas16[, c(&#39;dem.educ.attain&#39;, &#39;educ&#39;)], useNA=&#39;always&#39;) ## educ ## dem.educ.attain H.S. &lt;H.S. Some college, no B.A. B.A. M.A.+ &lt;NA&gt; ## &lt;H.S. 0 79 0 0 0 0 ## H.S. 129 0 0 0 0 0 ## Some college, no B.A. 0 0 281 0 0 0 ## B.A. 0 0 0 366 0 0 ## M.A.+ 0 0 0 0 342 0 ## &lt;NA&gt; 0 0 0 0 0 25 educlabs &lt;- c( &quot;Less than HS&quot; = &quot;&lt;H.S.&quot;, &quot;Did not finish HS&quot; = &quot;&lt;H.S.&quot;, &quot;HS diploma or GED&quot; = &quot;H.S.&quot;, &quot;Some college, no degree&quot; = &quot;Some college, no B.A.&quot;, &quot;Associate\\&#39;s degree&quot; = &quot;Some college, no B.A.&quot;, &quot;Bachelor\\&#39;s degree&quot; = &quot;B.A.&quot;, &quot;Advanced degree&quot; = &quot;M.A.+&quot; ) dcas18 &lt;- dcas18 %&gt;% mutate( educbak = educ, educ = recode_factor(educbak, !!!educlabs), educ = relevel(educ, ref=&quot;H.S.&quot;) ) table(dcas18[, c(&quot;educbak&quot;, &quot;educ&quot;)], useNA=&quot;always&quot;) ## educ ## educbak H.S. &lt;H.S. Some college, no B.A. B.A. M.A.+ &lt;NA&gt; ## Less than HS 0 7 0 0 0 0 ## Did not finish HS 0 21 0 0 0 0 ## HS diploma or GED 103 0 0 0 0 0 ## Some college, no degree 0 0 147 0 0 0 ## Associate&#39;s degree 0 0 55 0 0 0 ## Bachelor&#39;s degree 0 0 0 285 0 0 ## Advanced degree 0 0 0 0 418 0 ## &lt;NA&gt; 0 0 0 0 0 25 Income. Create variable (inc) measuring income using four levels. # dcas16$inc &lt;- dcas16$dem.income.cat4 # table(dcas16$inc, useNA=&#39;always&#39;) # inc_dummies &lt;- paste0(&#39;inc&#39;,1:4) # dcas[,inc_dummies] &lt;- lapply(1:4, # function(i) {unclass(dcas$dem.income.cat4)==i}) # for(i in 1:4) { ## Check recoding # print(table(dcas[,c(&#39;dem.income.cat4&#39;,paste0(&#39;inc&#39;,i))])) # } # inc_names &lt;- sanitize(levels(dcas$dem.income.cat4)) # inc_names[1] &lt;- paste0(&quot;\\\\emph{Income}&amp;&amp;\\\\\\\\&quot;, inc_names[1]) # table(dcas18$income, useNA=&quot;always&quot;) Missingness on Socioeconomic Variables. Record how many respondents were missing educational attaiment and income data. texcmds[[&#39;miinc16&#39;]] &lt;- sum(is.na(dcas16$dem.income.cat4)) texcmds[[&#39;miedu16&#39;]] &lt;- sum(is.na(dcas16$dem.educ.attain)) texcmds[[&#39;miinc18&#39;]] &lt;- sum(is.na(dcas18$income)) texcmds[[&#39;miedu18&#39;]] &lt;- sum(is.na(dcas18$educ)) Variable Missing 2016 Missing 2018 Education 25 25 Income 109 79 Housing tenure. Create indicator for whether respondent owns their home. dcas16 &lt;- dcas16 %&gt;% mutate(own = hh.own) table(dcas16[, c(&quot;hh.own&quot;, &quot;own&quot;)], useNA=&quot;always&quot;) ## own ## hh.own FALSE TRUE &lt;NA&gt; ## FALSE 354 0 0 ## TRUE 0 859 0 ## &lt;NA&gt; 0 0 9 dcas18 &lt;- dcas18 %&gt;% mutate(own = ifelse(is.na(tenure), NA, tenure==&quot;Own&quot;)) table(dcas18[, c(&quot;tenure&quot;, &quot;own&quot;)], useNA=&quot;always&quot;) ## own ## tenure FALSE TRUE &lt;NA&gt; ## Rent 326 0 0 ## Own 0 701 0 ## Other 30 0 0 ## &lt;NA&gt; 0 0 4 3.2.3.3 Neighborhood Experience Variables Years in the neighborhood. Variable (nhdyrs) measures how long the respondent reported living in neighborhood. dcas16$nhdyrs &lt;- as.numeric(as.character(dcas16$q4)) ## Warning: NAs introduced by coercion qplot(dcas16$nhdyrs, binwidth=5) ## Warning: Removed 18 rows containing non-finite values (stat_bin). dcas18$nhdyrs &lt;- dcas18$yrsnhd qplot(dcas18$nhdyrs) ## Warning: Removed 8 rows containing non-finite values (stat_bin). Perceived size of neighborhood. Create three-category variable that measures perceived neighborhood size. Check that variable was created correctly. sizelabs &lt;- c( `1 to 4 blocks` = &quot;1-9 blocks&quot;, `5 to 9 blocks` = &quot;1-9 blocks&quot;, `10 to 25 blocks` = &quot;10-50 blocks&quot;, `25 to 50 blocks` = &quot;10-50 blocks&quot;, `More than 50 blocks` = &quot;&gt;50 blocks&quot; ) dcas16 = mutate(dcas16, nhdsize = recode_factor(nhd.size, !!!sizelabs)) table(dcas16[, c(&#39;nhd.size&#39;, &#39;nhdsize&#39;)], useNA=&quot;always&quot;) ## Check variable ## nhdsize ## nhd.size 1-9 blocks 10-50 blocks &gt;50 blocks &lt;NA&gt; ## 1 to 4 blocks 395 0 0 0 ## 5 to 9 blocks 343 0 0 0 ## 10 to 25 blocks 0 298 0 0 ## 25 to 50 blocks 0 105 0 0 ## More than 50 blocks 0 0 58 0 ## &lt;NA&gt; 0 0 0 23 names(sizelabs) &lt;- gsub(&quot; to &quot;, &quot;-&quot;, names(sizelabs)) dcas18 &lt;- dcas18 %&gt;% mutate( nhdsizebak = nhdsize, nhdsize = recode_factor(nhdsize, !!!sizelabs) ) table(dcas18[, c(&#39;nhdsizebak&#39;,&#39;nhdsize&#39;)], useNA=&quot;always&quot;) #Check variable ## nhdsize ## nhdsizebak 1-9 blocks 10-50 blocks &gt;50 blocks &lt;NA&gt; ## 1-4 blocks 267 0 0 0 ## 5-9 blocks 307 0 0 0 ## 10-25 blocks 0 254 0 0 ## 25-50 blocks 0 109 0 0 ## &gt;50 blocks 0 0 46 0 ## &lt;NA&gt; 0 0 0 78 3.3 Add Neighborhood Context onto Survey Data Create variables containing neighborhood racial composition types by Census tract. These will be used to analyze data by different racial compositions in 2015. dcarea &lt;- dcarea %&gt;% mutate( w = race.pnhw &gt;= 10, b = race.pnhb &gt;= 10, l = race.phsp &gt;= 10, a = race.papi &gt;= 10, q = quad15 == TRUE, nhdtype = &#39;&#39;, nhdtype = ifelse(w, &#39;w&#39;, nhdtype), nhdtype = ifelse(b, paste0(nhdtype,&#39;b&#39;), nhdtype), nhdtype = ifelse(l, paste0(nhdtype,&#39;l&#39;), nhdtype), nhdtype = ifelse(a, paste0(nhdtype,&#39;a&#39;), nhdtype), nhdtype = ifelse(race.pnhw &gt; 50, &#39;w&#39;, nhdtype), nhdtype = ifelse(race.pnhb &gt; 50, &#39;b&#39;, nhdtype), nhdtype = ifelse(race.phsp &gt; 50, &#39;l&#39;, nhdtype), nhdtype = ifelse(race.papi &gt; 50, &#39;a&#39;, nhdtype), nhdtype = ifelse(quad15, &#39;quad&#39;, nhdtype), wtype = ifelse(nhdtype==&#39;quad&#39;, &#39;quad&#39;, &#39;&#39;), wtype = ifelse(nhdtype==&#39;w&#39;, &#39;white&#39;, wtype), wtype = ifelse(wtype==&#39;&#39; &amp; grepl(&#39;w\\\\w{1}$&#39;, nhdtype), &#39;white-1&#39;, wtype), wtype = ifelse(wtype==&#39;&#39; &amp; grepl(&#39;w\\\\w{2}$&#39;, nhdtype), &#39;white-2&#39;, wtype), wtype = ifelse(wtype==&#39;&#39;, &#39;non-white&#39;, wtype), across(starts_with(&#39;race&#39;), ~ifelse(.==0, 0, log(./100)), .names=&#39;ln{.col}&#39;), H = (-1 * (exp(lnrace.pnhw) * lnrace.pnhw + exp(lnrace.pnhb) * lnrace.pnhb + exp(lnrace.phsp) * lnrace.phsp + exp(lnrace.papi) * lnrace.papi )), Hc= (H - mean(H, na.rm=TRUE)) / sd(H, na.rm = TRUE) ) %&gt;% select(-starts_with(&#39;lnrace&#39;)) Append the LTDB 2000 values of Census characteristics and the 2015 values of ACS characterisitcs to each of the DCAS dataframes. The code below constructs a variable, lntotchg, that equals the natural log of the change in the non-Hispanic white population from 2000 to 2015. This creates a linearly scaled variable that measures change in the white population that accounts for the size of neighborhoods. The 2018 DCAS requires an additional step of appending a list of block-groups for each respondent and then merging based on tracts of sampled respondents. ## Load LTDB 2000 and merge into DC Area neighborhood tract-level dataset ltdb &lt;- read_csv(&#39;../data/ltdb_std_2000_fullcount.csv&#39;, col_types = cols(TRTID10 = &#39;c&#39;)) %&gt;% rename_with(tolower) nhoods &lt;- dcarea %&gt;% mutate(trtid10 = sub(&#39;G(\\\\d{2})0(\\\\d{3})0(\\\\d{6})&#39;, &#39;\\\\1\\\\2\\\\3&#39;, GISJOIN)) %&gt;% left_join(select(ltdb, trtid10, nhwht00), by=&#39;trtid10&#39;) %&gt;% mutate(lntotchg = log(nhw15/nhwht00)) ## Merge combined 2000 Census/2015 ACS data into 2016 DC Area Survey data dcas16 &lt;- dcas16 %&gt;% mutate(trtid10 = sample_tract) %&gt;% left_join(nhoods, by=&#39;trtid10&#39;) dcas18 &lt;- dcas18 %&gt;% full_join(read_csv(&quot;../data/dcas/census_tract_R1049.csv&quot;, col_types = &#39;cc&#39;), by=&#39;rid&#39;) %&gt;% rename(trtid10 = tract) %&gt;% left_join(nhoods, by=&#39;trtid10&#39;) 3.4 Data Imputation and Weighting Select variables to keep that will be used in analysis. Define vectors of identification and numeric variables that will be used for imputation. vars &lt;- c( # &#39;satisfied&#39;, &#39;better&#39;, &#39;nhdsat&#39;, &#39;nhdchg&#39; , &#39;raceeth&#39; , &#39;age&#39; , &#39;forborn&#39; , &#39;man&#39; , &#39;kids&#39; , &#39;married&#39; , &#39;educ&#39; , &#39;own&#39; , &#39;nhdyrs&#39; , &#39;nhdsize&#39; # , &#39;inc&#39; ) dcas16 &lt;- dcas16 %&gt;% mutate( rid = as.character(studycase), strata = sample_strata ) dcas16$rid &lt;- as.character(dcas16$studycase) idvars16 &lt;- c(&#39;rid&#39;,&#39;weight&#39;, &#39;strata&#39;, &#39;sample_tract&#39;) nominals &lt;- vars[!(vars %in% c(&#39;age&#39;, &#39;nhdyrs&#39;))] dcas18$rid &lt;- as.character(dcas18$rid) idvars18 &lt;- c(&quot;rid&quot;, &quot;weight&quot;, &quot;strata&quot;) Re-level the tract identification number used for fixed effects to the reference tract is that which has the median level of satisfaction. satmu &lt;- dcas16 %&gt;% select(sample_tract, satisfied) %&gt;% group_by(sample_tract) %&gt;% summarize(meansat = mean(satisfied, na.rm=TRUE)) %&gt;% arrange(meansat) medsatid &lt;- satmu$sample_tract[round(nrow(satmu)/2)] %&gt;% as.character() dcas16$sample_tract &lt;- relevel(dcas16$sample_tract, ref=medsatid) # levels(dcas16$sample_tract) ## Not run: Check referencing Prepare data to be imputed based on different datasets. set.seed(214518) idvars &lt;- c(&#39;satisfied&#39;, &#39;better&#39;, &#39;anarace&#39;) nhoodvars &lt;- c(&#39;nhwht00&#39;, &#39;lntotchg&#39;, &#39;nhdtype&#39;, &#39;wtype&#39;, &#39;H&#39;, &#39;Hc&#39;, &#39;race.pnhw&#39;) nivars &lt;- c(idvars, nhoodvars) Create five imputation datasets of survey-weighted data and assign to object dcas&lt;YR&gt;svy. For the DCAS 2016 data, include only respondents who live in multiracial neighborhoods in the multiple imputation. Create vectors of variable names for different types of variables to be used as parameters for multiple imputation. dcas16q &lt;- subset(dcas16, neighborhood==&quot;Global Neighborhood&quot;) %&gt;% mutate(sample_tract=factor(sample_tract)) dcas16mi &lt;- amelia(dcas16q[dcas16q$neighborhood==&quot;Global Neighborhood&quot;, unique(c(vars, nominals, nivars, idvars16))], m=5, noms=nominals, emburn=c(500, 500), p2s=FALSE, idvars=c(nivars, idvars16)) dcas16svy &lt;- svydesign(id=~rid, strata=~strata, weights=~weight, data=imputationList(dcas16mi$imputations)) dcas18mi &lt;- amelia(dcas18[, unique(c(vars, nominals, nivars, idvars18))], m=5, noms=nominals, emburn=c(500,500), p2s=FALSE, idvars=c(nivars, idvars18)) dcas18svy &lt;- svydesign(id=~rid, strata=~strata, weights=~weight, data=imputationList(dcas18mi$imputations)) 3.5 Center Variables Center all variables on their DC-area-wide values (estimated using the DCAS 2018 data) in order to create comparable regression values across the two data sets, Subtract the mean of the weighted DCAS 2018 variables from the corresponding variables in both the DCAS 2016 (multiracial neighborhoods) and DCAS 2018 (DC-area) data. This sets the intercept across the two data sets at a corresponding value that represents a white resident with DC-area-wide mean values on all other measures. vars &lt;- c(&quot;age&quot;, &quot;forborn&quot;, &quot;man&quot;, &quot;kids&quot;, &quot;married&quot;, &quot;own&quot;, &quot;nhdyrs&quot;) mu18 &lt;- lapply(vars, function(var){ fm &lt;- as.formula(paste(&quot;~&quot;, var)) mu &lt;- coef(MIcombine(with(dcas18svy, svymean(fm, na.rm=TRUE)))) if(length(mu)==1) return(mu[[1]]) return(mu[[grep(&quot;TRUE$&quot;, names(mu))]]) }) names(mu18) &lt;- vars educ &lt;- coef(MIcombine(with(dcas18svy, svymean(~educ, na.rm=TRUE)))) mu18[paste0(&quot;educ&quot;, 1:5)] &lt;- educ nhdsize &lt;- coef(MIcombine(with(dcas18svy, svymean(~nhdsize, na.rm=TRUE)))) mu18[paste0(&quot;nhdsize&quot;, 1:3)] &lt;- nhdsize svy.center &lt;- function(df) { df %&gt;% update( agec = age - mu18[[&quot;age&quot;]], forbornc = as.integer(forborn) - mu18[[&quot;forborn&quot;]], manc = as.integer(man) - mu18[[&quot;man&quot;]], kidsc = as.integer(kids) - mu18[[&quot;kids&quot;]], marriedc = as.integer(married) - mu18[[&quot;married&quot;]], educall = model.matrix(~educ), educ1c = educall[, 2] - mu18[[&quot;educ1&quot;]], educ3c = educall[, 3] - mu18[[&quot;educ3&quot;]], educ4c = educall[, 4] - mu18[[&quot;educ4&quot;]], educ5c = educall[, 5] - mu18[[&quot;educ5&quot;]], educall = 1, ownc = as.integer(own) - mu18[[&quot;own&quot;]], nhdyrsc = nhdyrs - mu18[[&quot;nhdyrs&quot;]], nhdsizeall = model.matrix(~nhdsize), nhdsize2c = nhdsizeall[, 2] - mu18[[&quot;nhdsize2&quot;]], nhdsize3c = nhdsizeall[, 3] - mu18[[&quot;nhdsize3&quot;]], nhdsizeall = 1 ) } dcas16svy &lt;- svy.center(dcas16svy) dcas18svy &lt;- svy.center(dcas18svy) 3.6 Save Data Save R object containing the multiply-imputed survey-weighted data (dcassvy), variable names (vars), imputation list upon which survey data were created (dcasmi), a string representing the diretory containing data (dataDIR), and the list of values to export to LaTeX (texcmds). # save(vars, texcmds, dcarea, # dcas16svy, dcas16, dcas16mi, # dcas18svy, dcas18, dcas18mi, # file = &#39;../data/dcassvy.Rdata&#39;) "],["sample-descriptive-statistics.html", "4 Sample Descriptive Statistics 4.1 Assign labels to be used throughout analyses", " 4 Sample Descriptive Statistics Setup data &amp; environment to analyze.2 # rm(list=ls()) load(&#39;../data/dcassvy.Rdata&#39;) texcmds[[&#39;Rversion&#39;]] &lt;- paste(R.version$major, R.version$minor, sep=&#39;.&#39;) ## Helper functions for analyzing and reporting results source(&#39;R/broom_mi.R&#39;) source(&#39;R/report_descriptives.R&#39;) source(&#39;R/report_models.R&#39;) source(&#39;R/make_predictions.R&#39;) source(&#39;R/marginal_effects.R&#39;) Include only rows in which respondent is one of four mutually exclusive racial groups. fourraces &lt;- c(&#39;white&#39;, &#39;asian&#39;, &#39;black&#39;, &#39;latino&#39;) dcas16svy &lt;- subset(dcas16svy, anarace==TRUE) %&gt;% update(raceeth = factor(raceeth, levels=fourraces)) dcas18svy &lt;- subset(dcas18svy, anarace==TRUE) %&gt;% update(raceeth = factor(raceeth, levels=fourraces)) Create tables with descriptive results of both DCAS samples, overall and by race. The tables are constructed using two helper functions saved in report_descriptives.R: desc Returns the summary of the multiply-imputed survey mean make.desc Returns the table of descriptive statistics Results are saved in tables/descriptives_dcas16.tex and tables/descriptives_dcas18.tex. Make table of overall descriptive statistics and by race for DCAS 2016 and DCAS 2018. Missingness of education and income in 2016 and 2018. mi16 &lt;- apply(sapply(dcas16[, c(&quot;educ&quot;, &quot;dem.income.cat4&quot;)], is.na), 2, sum) mi18 &lt;- apply(sapply(dcas18[, c(&quot;educ&quot;, &quot;income&quot;)], is.na), 2, sum) tibble( year = c(&quot;2016&quot;, &quot;2018&quot;), educ_mi = c(mi16[1], mi18[1]), educ_pct = round(c(mi16[1]/nrow(dcas16), mi18[1]/nrow(dcas18))*100, 1), inc_mi = c(mi16[2], mi18[2]), inc_pct = round(c(mi16[2]/nrow(dcas16), mi18[2]/nrow(dcas18))*100, 1) ) (#tab:surveys-missing) yeareduc_mieduc_pctinc_miinc_pct 2016252&nbsp;&nbsp;1098.9 2018252.4797.4 ## Number of respondents by race Table 4.2 shows the number of respondents in 2016 and 2018. racecnt18 &lt;- dcas18svy$designs[[1]]$variables %&gt;% group_by(raceeth) %&gt;% count() %&gt;% rename(`2018` = n) dcas16svy$designs[[1]]$variables %&gt;% group_by(raceeth) %&gt;% count() %&gt;% rename(`2016` = n) %&gt;% full_join(racecnt18, by = &quot;raceeth&quot;) %&gt;% as_huxtable() %&gt;% set_caption( &quot;Number of respondents by race in DCAS 2016 and DCAS 2018 surveys&quot; ) %&gt;% set_label(&quot;tab:racecount&quot;) Table 4.2: Number of respondents by race in DCAS 2016 and DCAS 2018 surveys raceeth20162018 white266513 asian18693 black105308 latino8475 4.1 Assign labels to be used throughout analyses ## Race labels and variable levels racelabs &lt;- c(&quot;Asian&quot;, &quot;Black&quot;, &quot;Latino&quot;, &quot;White&quot;) racelevs &lt;- c(&quot;all&quot;, &quot;asian&quot;, &quot;black&quot;, &quot;latino&quot;, &quot;white&quot;) ## Labels for regression tables regression_labels &lt;- c(&#39;Asian&#39;,&#39;Black&#39;,&#39;Latinx&#39;, &#39;Age&#39;,&#39;Foreign Born&#39;,&#39;Male&#39;, &#39;Children Present&#39;, &#39;Married&#39;, levels(dcas16$dem.educ.attain)[c(1,3:5)], # levels(dcas$dem.income.cat4)[c(1,3:4)], &#39;Home owner&#39;, &#39;Years in neighborhood&#39;, &#39;10-50 blocks&#39;, &#39;&gt;50 blocks&#39;) The data loaded here were created in the file analysis/01-variable-data-construction.Rmd. Due to the stochasticity of the multiple imputations, new data generated by sourcing that file will result in minor differences in the final output.↩︎ "],["satisfaction-within-multiracial-neighborhoods.html", "5 Satisfaction Within Multiracial Neighborhoods 5.1 Distribution of respondents across neighborhoods 5.2 Descriptive analysis of neighborhood satisfaction 5.3 Regression anaysis of neighborhood satisfaction 5.4 Marginal Effect of Race on Neighborhood Satisfaction 5.5 Partial Predicted Probabilities 5.6 Wald Statistics of Model Fit", " 5 Satisfaction Within Multiracial Neighborhoods 5.1 Distribution of respondents across neighborhoods 5.1.1 Median satisfaction level in tracts To prevent large values on intercepts, I changed the reference value of the sample_tract variable to the tract with the median level of satisfaction among neighborhoods. When calculating the median, include only those tracts with at least two respondents. mutrtall &lt;- dcas16 %&gt;% filter(neighborhood==&quot;Global Neighborhood&quot;) %&gt;% group_by(sample_tract) %&gt;% summarize( N = n(), tractsat = mean(satisfied) ) %&gt;% ungroup() mutrt &lt;- mutrtall %&gt;% filter(N&gt;1) %&gt;% arrange(tractsat) medtrt &lt;- mutrt$sample_tract[round(nrow(mutrt)/2)] %&gt;% as.character() medtrtval &lt;- mutrt$tractsat[mutrt$sample_tract==medtrt]*100 dcas16svy &lt;- update( dcas16svy, sample_tract = relevel(sample_tract, ref=medtrt) ) ## Add following to allow MIpredict to predict values at intercept dcas16$sample_tract &lt;- relevel(dcas16$sample_tract, ref=medtrt) onlyone &lt;- nrow(mutrtall) - nrow(mutrt) onlyonelist &lt;- mutrtall$sample_tract[mutrtall$N==1] dcas16svy &lt;- subset(dcas16svy, !(sample_tract %in% onlyonelist)) dcas16svy &lt;- update( dcas16svy, sample_tract = relevel(factor(sample_tract), ref=medtrt)) The reference level for sample_tract was set to tract 24031700817, in which 75% of residents reported being satisfied. 5.1.2 Count of respondents across neighborhoods Plot the distribution of respondents per tract. There are 9 tracts in the sample with a single respondent. There are 6.5 respondents per tract on average (median=5) with a maximum of 20 respondents per tract. The sample size for the multiracial neighborhood resident sample used for analysis is 632. 5.1.3 Distribution of respondents by race The analyses below consider the distribution of respondents by race across neighborhoods. Since the data include respondents, I do not need imputed values. I pull the data from the first imputed dataset. From that dataset, I calculate the percentage and sum of respondents for each race across neighborhoods. ## Summarize respondents across neighborhoods wndta &lt;- dcas16svy$designs[[1]]$variables wncnt &lt;- wndta %&gt;% group_by(sample_tract, raceeth) %&gt;% count() %&gt;% group_by(sample_tract) %&gt;% mutate( pct = n / sum(n), N = sum(n) ) %&gt;% ungroup() %&gt;% pivot_wider( id_cols = c(sample_tract, N), names_from = raceeth, values_from = pct ) %&gt;% mutate(across(-1, ~replace_na(., 0))) %&gt;% select(sample_tract, N, asian, black, latino, white) %&gt;% filter(N &gt; 1) ## Count number of neighborhoods with respondents of all four racial groups all_pres &lt;- wncnt %&gt;% mutate(allpres = if_all(-1:-2, ~ . &gt; 0)) %&gt;% summarise(allpres = sum(allpres)) %&gt;% pull() There of the 103 neighborhoods with two or more respondents, 26 neighborhoods (25.2 percent) contain respondents who identify across all four racial groups. Table 5.1 contains descriptive statistics of the distribution of the racial identities of respondents across neighborhoods and Table 5.2 contains the number of respondents who live in neighborhoods where all other respondents share the same racial identity. ## Respondent distribution across neighborhoods bind_cols( tibble(Statistic = c(&quot;Minimum&quot;, &quot;First Quart.&quot;, &quot;Median&quot;, &quot;Mean&quot;, &quot;Third Quart.&quot;, &quot;Maximum&quot;, &quot;All of race&quot;, &quot;None of race&quot;) ), bind_rows( sapply(wncnt[, -1:-2], summary) %&gt;% as_tibble() %&gt;% setNames(racelabs), ## Number of neighborhoods with all of each race sapply(wncnt[, -1:-2], function(x) sum(x == 1)) %&gt;% setNames(racelabs), ## Number of neighborhoods with none of each race sapply(wncnt[, -1:-2], function(x) sum(x == 0)) %&gt;% setNames(racelabs) ) ) %&gt;% as_huxtable() %&gt;% set_bold(1, everywhere, TRUE) %&gt;% set_number_format(2:7, -1, &quot;%.2f&quot;) %&gt;% set_align(everywhere, -1, &quot;right&quot;) %&gt;% set_caption(paste(&quot;Descriptive statistics of distribution of respondents&quot;, &quot;across neighborhoods by race&quot;)) %&gt;% set_label(&quot;tab:nhood-desc&quot;) Table 5.1: Descriptive statistics of distribution of respondents across neighborhoods by race StatisticAsianBlackLatinoWhite Minimum0.000.000.000.00 First Quart.0.050.000.000.25 Median0.290.000.100.39 Mean0.290.140.160.41 Third Quart.0.460.250.250.56 Maximum1.000.750.751.00 All of race3005 None of race26524214 ## Count of respondents living in neighborhood with only same-race neighbors wndta %&gt;% left_join(wncnt, by = &quot;sample_tract&quot;) %&gt;% filter(if_any(c(asian, black, latino, white), ~ . == 1)) %&gt;% summarize(across(c(asian, black, latino, white), sum)) %&gt;% rename_with(~sub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, ., perl = TRUE)) %&gt;% as_huxtable() %&gt;% set_caption(paste( &quot;Number of respondents living in neighborhood with same-race&quot;, &quot;neighbors, by race&quot; )) %&gt;% set_label(&quot;tab:nhood-only&quot;) Table 5.2: Number of respondents living in neighborhood with same-race neighbors, by race AsianBlackLatinoWhite 80016 5.2 Descriptive analysis of neighborhood satisfaction Calculate the unconditional percentage of respondents who are satisfied in their neighborhood by race. racedfs &lt;- list( dcas16svy, subset(dcas16svy, raceeth==&quot;asian&quot;), subset(dcas16svy, raceeth==&quot;black&quot;), subset(dcas16svy, raceeth==&quot;latino&quot;), subset(dcas16svy, raceeth==&quot;white&quot;) ) descwn &lt;- lapply(racedfs, function(df){ res &lt;- with(df, svymean(~satisfied)) %&gt;% MIcombine() n &lt;- nrow(df$designs$imp1) list(mean16=coef(res)*100, se16=sqrt(vcov(res)[1,1])*100, n16 = n) }) %&gt;% bind_rows() %&gt;% mutate(race = racelevs) Create a 4x4 matrix where each cell represents the difference in satisfaction percentages between the racial group listed in the column and the racial group listed in the row. No values are entered for the bottom triangle or the diagonal. ## Create matrix of differences diffmat &lt;- matrix(rep(NA_real_, 16), nrow=4) musat &lt;- descwn$mean16[1] muraces &lt;- descwn$mean16[-1] for(i in 1:3) { start &lt;- i+1 for(j in start:4) { diffmat[i, j] &lt;- muraces[j] - muraces[i] } } colnames(diffmat) &lt;- racelevs[-1] Add an additional row to the top of the matrix that contains the percent of each group that reports being satisfied in their neighborhoods. Add an additional column to the left that contains a) the overall percent of residents who are satisfied living in multiracial neighborhoods and b) the difference between the percent of the racial group listed in the row and the overall mean. This table is saved to tables/within_descriptives.tex. descwn_tbl &lt;- bind_rows( descwn$mean16[-1] %&gt;% set_names(racelevs[-1]), ## Percent satisfied in group as_tibble(diffmat) ## Diff. matrix ) %&gt;% add_column(all = c(musat, muraces - musat), .before = 1) names(descwn_tbl) &lt;- c(&quot;All&quot;, &quot;Asian&quot;, &quot;Black&quot;, &quot;Latino&quot;, &quot;White&quot;) descwn_tbl&lt;- descwn_tbl %&gt;% mutate_all(round, 1) %&gt;% huxtable() %&gt;% # insert_row(c(&quot;All&quot;, &quot;Asian&quot;, &quot;Black&quot;, &quot;Latino&quot;, &quot;White&quot;)) %&gt;% insert_row(rep(NA, 5), after=2) %&gt;% insert_column(c(&quot;Group&quot;, &quot;Percent satisfied&quot;, &quot;Difference&quot;, &quot;Asian&quot;, &quot;Black&quot;, &quot;Latino&quot;, &quot;White&quot;)) %&gt;% set_number_format(everywhere, everywhere, &quot;%5.1f&quot;) descwn_tbl Table 5.3: GroupAllAsianBlackLatinoWhite Percent satisfied 71.3 71.7 68.8 75.0 70.0 Difference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Asian 0.4&nbsp;&nbsp; -3.0 3.2 -1.8 Black -2.5&nbsp;&nbsp;&nbsp;&nbsp; 6.2 1.2 Latino 3.7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -5.0 White -1.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5.3 Regression anaysis of neighborhood satisfaction Follow a similar process of model development as in the separate multiracial neighborhood and complete DC-area datasets. Add a fourth model that removes race from the model to examine whether removing the race variables improves the model fit. Include a neighborhood fixed effect in all models so that the coefficients represent the difference for residents living in the same neighborhood. Race and neighborhood fixed effects Race, individual demographic characteristics (age, foreign-born, gender, children present, marital status, and education), and neighborhood fixed effects Race, individual demographic characteristics, neighborhood experience (home ownership, years in the neighborhood, and perceived neighborhood size), and neighborhood fixed effects No race, only individual demographic characteristics, neighborhood experience, and neighborhood fixed effects m1 &lt;- &quot;raceeth + sample_tract&quot; m2 &lt;- paste(m1, &quot;+ agec + forbornc + manc + kidsc + marriedc&quot;, &quot; + educ1c + educ3c + educ4c + educ5c&quot;) m3 &lt;- paste(m2, &quot;+ ownc + nhdyrsc + nhdsize2c + nhdsize3c&quot;) m4 &lt;- sub(&quot;raceeth \\\\+ &quot;, &quot;&quot;, m3) Estimate model parameters for each of the four models. Record the parameter estimates and standard errors in a table stored in file tables/within.tex. ## Note: &quot;non-integer #successes&quot; warnings suppressed m1wn &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m1)), family=binomial) ) m2wn &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m2)), family=binomial) ) m3wn &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3)), family=binomial) ) m4wn &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m4)), family=binomial) ) wn_tbl &lt;- report_models( MIcombine_aic(m1wn), MIcombine_aic(m3wn), MIcombine_aic(m4wn), caption = paste( &quot;Logistic regression coefficients and standard errors predicted&quot;, &quot;from models estimating neighborhood satisfaction among residents&quot;, &quot;of mulitracial neighborhoods&quot; ), label = &quot;tab:within&quot;, reglabels = regression_labels, use.headers = TRUE ) statrow &lt;- nrow(wn_tbl)-3 wn_tbl &lt;- insert_row( wn_tbl, c(&quot;Tract fixed effects&quot;, rep(&quot;X&quot;, 3)),after=statrow) %&gt;% set_top_border(statrow+1, everywhere, TRUE) %&gt;% set_top_border(statrow+2, everywhere, FALSE) %&gt;% set_top_padding(0) %&gt;% set_bottom_padding(0) cat( sub(&quot;\\\\(\\\\\\\\#(tab:.+?)\\\\)&quot;, &quot;\\\\\\\\label{\\\\1\\\\}&quot;, to_latex(wn_tbl)), file=&quot;tables/within.tex&quot; ) wn_tbl Table 5.4: Logistic regression coefficients and standard errors predicted from models estimating neighborhood satisfaction among residents of mulitracial neighborhoods (1)(2)(3) (Intercept)0.533&nbsp;0.512&nbsp;&nbsp;&nbsp;0.838&nbsp;&nbsp;&nbsp; (1.051)(1.089)&nbsp;&nbsp;(1.144)&nbsp;&nbsp; Race&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Asian-0.050&nbsp;0.041&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.384)(0.487)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Black0.364&nbsp;0.450&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.400)(0.450)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Latinx0.207&nbsp;0.507&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.424)(0.539)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Demographics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.003&nbsp;&nbsp;&nbsp;0.003&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.012)&nbsp;&nbsp;(0.012)&nbsp;&nbsp; Foreign Born&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.106&nbsp;&nbsp;&nbsp;-0.057&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.446)&nbsp;&nbsp;(0.348)&nbsp;&nbsp; Male&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.219&nbsp;&nbsp;&nbsp;0.190&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.297)&nbsp;&nbsp;(0.298)&nbsp;&nbsp; Children Present&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.659&nbsp;&nbsp;&nbsp;-0.568&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.376)&nbsp;&nbsp;(0.370)&nbsp;&nbsp; Married&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.415&nbsp;&nbsp;&nbsp;0.326&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.315)&nbsp;&nbsp;(0.308)&nbsp;&nbsp; Socioeconomic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;H.S.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.824 *&nbsp;-1.802 *&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.863)&nbsp;&nbsp;(0.881)&nbsp;&nbsp; Some college, no B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.031&nbsp;&nbsp;&nbsp;-1.030&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.635)&nbsp;&nbsp;(0.632)&nbsp;&nbsp; B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.976&nbsp;&nbsp;&nbsp;-1.050&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.608)&nbsp;&nbsp;(0.603)&nbsp;&nbsp; M.A.+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.362 *&nbsp;-1.434 *&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.587)&nbsp;&nbsp;(0.578)&nbsp;&nbsp; Neighborhood perceptions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Home owner&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.734&nbsp;&nbsp;&nbsp;0.719&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.396)&nbsp;&nbsp;(0.398)&nbsp;&nbsp; Years in neighborhood&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.019&nbsp;&nbsp;&nbsp;-0.020&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.017)&nbsp;&nbsp;(0.017)&nbsp;&nbsp; 10-50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.030 **1.070 ** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.377)&nbsp;&nbsp;(0.358)&nbsp;&nbsp; &gt;50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.320&nbsp;&nbsp;&nbsp;0.457&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.603)&nbsp;&nbsp;(0.580)&nbsp;&nbsp; Tract fixed effectsX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC663.145&nbsp;647.778&nbsp;&nbsp;&nbsp;642.032&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. 5.4 Marginal Effect of Race on Neighborhood Satisfaction Calculate the marginal effect of race on neighborhood satisfaction using white residents as the reference group. The function MImargins() is defined in the file marginal_effects.R. The function combines the standard errors of marginal effects from the multiply imputed datasets using Rubin’s rules (following this algorithm). ## Calculate partial effects of race m1wn_mfx &lt;- MImargins(m1wn, param=&quot;margins&quot;) m3wn_mfx &lt;- MImargins(m3wn, param=&quot;margins&quot;) ## Record marginal effects and standard errors in table and report mfxwn &lt;- inner_join(m1wn_mfx, m3wn_mfx, by=&quot;raceeth&quot;, suffix=c(&quot;.Unadjusted&quot;, &quot;.Adjusted&quot;)) mfxwn_tbl &lt;- mfxwn %&gt;% mutate_at(vars(starts_with(&quot;val&quot;)), ~paste0(&quot; &quot;, round(.,3), &quot; &quot;)) %&gt;% mutate_at(vars(starts_with(&quot;SE&quot;)), ~paste0(&quot;(&quot;, round(.,3), &quot;)&quot;)) kable(mfxwn_tbl, digits=3) raceeth val.Unadjusted SE.Unadjusted val.Adjusted SE.Adjusted asian -0.008 (0.059) 0.006 (0.068) black 0.053 (0.058) 0.06 (0.059) latino 0.031 (0.063) 0.067 (0.069) ## Plot marginal effects and standard errors mfxwn_long &lt;- bind_rows(m1wn_mfx, m3wn_mfx) %&gt;% mutate( model=relevel(factor(rep(c(&quot;Unadjusted&quot;, &quot;Adjusted&quot;), each=3)), ref=&quot;Unadjusted&quot;), raceeth = sub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, raceeth, perl = TRUE) ) dodge_wd &lt;- 0.25 wn_mfx_plt &lt;- ggplot(mfxwn_long, aes(x=raceeth, y=val, ymin=val-1.96*SE, ymax=val+1.96*SE, group=model, color=model, shape=model)) + geom_point(position=position_dodge(width=dodge_wd), size=2.15) + geom_linerange(size=.5, position=position_dodge(dodge_wd)) + geom_hline(yintercept=0, color=&quot;#666666&quot;) + scale_color_manual(values = c(&quot;#888888&quot;, &quot;#222222&quot;)) + scale_x_discrete( labels=gsub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, mfxwn_long$raceeth, perl=TRUE) ) + scale_y_continuous(limits=c(-.21, .21)) + # scale_shape_discrete(labels=c(&quot;No controls&quot;, &quot;With controls&quot;)) + labs( x = NULL, y = &quot;Marginal effect&quot;, shape = NULL, color = NULL ) + theme_minimal() + theme( legend.position = &quot;bottom&quot;, panel.grid.major.x = element_blank() ) wn_mfx_plt_cap &lt;- paste( &quot;Marginal effects of race on being satisfied in multiracial&quot;, &quot;neighborhoods compared to white residents of multiracial neighborhoods&quot; ) Figure 5.1: Marginal effects of race on being satisfied in multiracial neighborhoods compared to white residents of multiracial neighborhoods 5.5 Partial Predicted Probabilities m3wn_prd &lt;- MImargins(m3wn, param=&quot;predicted&quot;) kable(m3wn_prd) raceeth val SE white 0.6832765 0.0365181 asian 0.6889261 0.0477260 black 0.7434700 0.0424701 latino 0.7505796 0.0509451 5.6 Wald Statistics of Model Fit Report the value of Wald tests measuring the change in model fit for the full model (Model 3) compared to a model without race covariates (Model 4). racewn_wald &lt;- lapply(m3wn, regTermTest, test.terms=~raceeth, df=NULL) racewn_wald_tbl &lt;- tibble( val = c( sapply(racewn_wald, function(x) x$Ftest), sapply(racewn_wald, function(x) x$p) ), stat = rep(c(&quot;F test&quot;, &quot;p&quot;), each=5), i = rep(1:5,2) ) %&gt;% pivot_wider(id_cols = &quot;stat&quot;, values_from=&quot;val&quot;, names_from=&quot;i&quot;, names_prefix=&quot;imp&quot;) racewn_wald_tbl$mean &lt;- apply(racewn_wald_tbl[, 2:6], 1, mean) racewn_wald_tbl$min &lt;- apply(racewn_wald_tbl[, 2:6], 1, min) racewn_wald_tbl$max &lt;- apply(racewn_wald_tbl[, 2:6], 1, max) kable(racewn_wald_tbl, digits=3) stat imp1 imp2 imp3 imp4 imp5 mean min max F test 0.633 0.622 0.563 0.631 0.588 0.607 0.563 0.633 p 0.594 0.601 0.640 0.595 0.623 0.611 0.594 0.640 "],["satisfaction-comparison-between-multiethnic-neighborhoods-and-dc-area-population.html", "6 Satisfaction Comparison Between Multiethnic Neighborhoods and DC-Area Population 6.1 Descriptive analysis of satisfaction by race 6.2 Multivariable influence of race on neighborhood satisfaction", " 6 Satisfaction Comparison Between Multiethnic Neighborhoods and DC-Area Population 6.1 Descriptive analysis of satisfaction by race Summarize percent of residents satisfied living in their neighborhoods for a) respondents of the DCAS 2016 that live in multiracial neighborhoods, and b) respondents of the DCAS 2018 that live throughout the DC area. racedfs &lt;- list( dcas16svy, subset(dcas16svy, raceeth==&quot;asian&quot;), subset(dcas16svy, raceeth==&quot;black&quot;), subset(dcas16svy, raceeth==&quot;latino&quot;), subset(dcas16svy, raceeth==&quot;white&quot;) ) desc16 &lt;- lapply(racedfs, function(df){ res &lt;- with(df, svymean(~satisfied)) %&gt;% MIcombine() n &lt;- nrow(df$designs$imp1) list(mean16=coef(res)*100, se16=sqrt(vcov(res)[1,1])*100, n16 = n) }) %&gt;% bind_rows() %&gt;% mutate(race = racelevs) racedfs &lt;- list( dcas18svy, subset(dcas18svy, raceeth==&quot;asian&quot;), subset(dcas18svy, raceeth==&quot;black&quot;), subset(dcas18svy, raceeth==&quot;latino&quot;), subset(dcas18svy, raceeth==&quot;white&quot;) ) desc18 &lt;- lapply(racedfs, function(df){ res &lt;- with(df, svymean(~satisfied)) %&gt;% MIcombine() n &lt;- nrow(df$designs$imp1) list(mean18=coef(res)*100, se18=sqrt(vcov(res)[1,1])*100, n18 = n) }) %&gt;% bind_rows() %&gt;% mutate(race = racelevs) Calculate the differences in the percent of residents satisfied in multiracial neighborhoods and the percent of all DC-area satisfied with their neighborhoods, both overall and by race. Calculate the standard error for the difference and the p-value for differences by race. The formatted results are saved in the file tables/between_descriptives.tex. desc_cap &lt;- paste( &quot;Unconditional mean level of satisfaction among residents of&quot;, &quot;multiracial neighborhoods compared to residents in entire DC area,&quot;, &quot;by race&quot; ) desc_tbl &lt;- desc16 %&gt;% inner_join(desc18, by=&quot;race&quot;) %&gt;% select(race, mean16, se16, n16, mean18, se18, n18) %&gt;% mutate( diff = mean16 - mean18, sediff = sqrt(se16^2 + se18^2), df = (se16^2 + se18^2) / ( ((se16^2)/(n16-1)) + ((se18^2)/(n18-1)) ), p = pt(abs(diff/sediff), df=df, lower.tail = FALSE)*2, star = ifelse(p&lt;0.001, &quot;***&quot;, ifelse(p&lt;0.01, &quot;** &quot;, ifelse(p&lt;0.05,&quot;* &quot;, &quot; &quot;))) ) kable(desc_tbl, &quot;html&quot;, caption = desc_cap, digits = c(1,1,1,0,1,1,0,1,1,0,4,1)) %&gt;% scroll_box(width = &quot;100%&quot;) Table 6.1: Unconditional mean level of satisfaction among residents of multiracial neighborhoods compared to residents in entire DC area, by race race mean16 se16 n16 mean18 se18 n18 diff sediff df p star all 71.3 2.5 632 78.3 2.2 989 -7.0 3.3 746 0.0356 asian 71.7 5.0 183 81.1 5.4 93 -9.4 7.3 119 0.2013 black 68.8 5.8 104 68.9 4.6 308 -0.1 7.4 139 0.9883 latino 75.0 5.7 82 75.4 7.4 75 -0.4 9.4 76 0.9620 white 70.0 3.9 263 85.1 2.3 513 -15.1 4.6 300 0.0011 ** 6.2 Multivariable influence of race on neighborhood satisfaction Developed the model for each DCAS in a series of three steps to understand what is occurring in the data. The three are: Race-only Race and individual demographic characteristics (age, foreign-born, gender, children present, marital status, and education) Race, individual demographic characteristics, and neighborhood experience (home ownership, years in the neighborhood, and perceived neighborhood size) m1bn &lt;- &quot;raceeth&quot; m2bn &lt;- paste(m1bn, &quot;+ agec + forbornc + manc + kidsc + marriedc&quot; ,&quot;+ educ1c + educ3c + educ4c + educ5c&quot; ) m3bn &lt;- paste(m2bn, &quot;+ ownc + nhdyrsc + nhdsize2c + nhdsize3c&quot;) 6.2.1 Combining DCAS 2016 and DCAS 2018 data for analysis I obtained combined sampling weights for the 2016 and 2018 waves of the DCAS. Having these data allowed me to directly assess the influence of being sampled in a multiracial neighborhood on neighborhood satisfaction. This addresses a reviewer comment that combining the data offers the best way to compare residents of multiracial neighborhoods with residents elsewhere in the DC area. I first combined the data and then multiply imputed the combined data to create a multiple imputation object, dcasCsvy, containing five multiply imputed samples. wgts &lt;- foreign::read.spss( &#39;../data/dcas/DCAS_combined_weights.sav&#39; ) %&gt;% as_tibble() %&gt;% mutate(across(everything(), ~trimws(.x))) %&gt;% mutate( wave = if_else(study==&quot;O1087&quot;, &quot;dcas16&quot;, &quot;dcas18&quot;), rid = if_else(wave==&quot;dcas16&quot;, trimws(studycase), trimws(RID)), totwgt = as.numeric(TOTALWEIGHT), totwgt18 = as.numeric(TOTAL2018WEIGHT) ) idvarsC &lt;- c(&#39;rid&#39;, &#39;strata&#39;) dcasC &lt;- bind_rows( select(dcas16, c(!!!vars, !!!nominals, !!!nivars, &#39;rid&#39;, &#39;strata&#39;)), select(dcas18, c(!!!vars, !!!nominals, !!!nivars, &#39;rid&#39;, &#39;strata&#39;)), ) %&gt;% left_join(select(wgts, rid, totwgt)) %&gt;% mutate( nhdsmp = if_else(grepl(&quot;^Global&quot;, strata), &quot;quad&quot;, if_else(grepl(&quot;^Latino&quot;, strata), &quot;latino&quot;, &quot;all&quot;)), nhdsmp = ordered(nhdsmp, levels=c(&quot;all&quot;, &quot;quad&quot;, &quot;latino&quot;)) ) %&gt;% subset( raceeth != &#39;other&#39; ) %&gt;% mutate( raceeth = factor(raceeth) ) contrasts(dcasC$nhdsmp) &lt;- contr.treatment(3) idvarsC &lt;- c(idvarsC, &#39;totwgt&#39;, &#39;nhdsmp&#39;) set.seed(214518) dcasCmi &lt;- amelia(dcasC[, unique(c(vars, nominals, nivars, idvarsC))], m=5, noms=nominals, emburn=c(500,500), p2s=FALSE, idvars=c(nivars, idvarsC)) dcasCsvy &lt;- svydesign( id=~rid, weights=~totwgt, data=imputationList(dcasCmi$imputations) ) %&gt;% svy.center() 6.2.2 Estimate model of satisfaction using combined DCAS 2016 and DCAS 2018 data I use the same variables as the within-neighborhood analysis but include an interaction between respondent race and the sampled neighborhood type (all neighborhoods, global neighborhood, or disproportionately Latinx neighborhood). The coefficients for the interactions indicate the difference in the log-odds of satisfaction for the racial group in the DC area versus those in global or disproportionately Latino neighborhoods. m1bnC &lt;- &quot;nhdsmp * raceeth&quot; m2bnC &lt;- paste(m1bnC, &quot;+ agec + forbornc + manc + kidsc + marriedc&quot; ,&quot;+ educ1c + educ3c + educ4c + educ5c&quot; ) m3bnC &lt;- paste(m2bnC, &quot;+ ownc + nhdyrsc + nhdsize2c + nhdsize3c&quot;) ## Warnings suppressed: non-integer #successes in a binomial glm m1C &lt;- with(dcasCsvy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m1bnC)), family=binomial, contrasts = list(nhdsmp = &quot;contr.treatment&quot;)) ) m2C &lt;- with(dcasCsvy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m2bnC)), family=binomial, contrasts = list(nhdsmp = &quot;contr.treatment&quot;)) ) m3C &lt;- with(dcasCsvy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3bnC)), family=binomial, contrasts = list(nhdsmp = &quot;contr.treatment&quot;)) ) The parameter estimates and standard errors can be found in Table 6.2, below, and are saved to the file tables/combined.tex. regression_labelsC &lt;- c(racelabs[1:3], &quot;Multiracial neighborhoods&quot;, paste(&quot;~x &quot;, racelabs[1:3]), &quot;Predom. Latinx neighborhoods&quot;, paste(&quot;~x &quot;, racelabs[1:3]), regression_labels[-1:-3]) coef_names &lt;- c(&quot;(Intercept)&quot;, paste0(&quot;raceeth&quot;, racelevs[2:4]), paste0(&quot;nhdsmpquad&quot;, c(&quot;&quot;, paste0(&quot;:raceeth&quot;, racelevs[2:4]))), paste0(&quot;nhdsmplatino&quot;, c(&quot;&quot;, paste0(&quot;:raceeth&quot;, racelevs[2:4]))), &quot;agec&quot;, &quot;forbornc&quot;, &quot;manc&quot;, &quot;kidsc&quot;, &quot;marriedc&quot;, paste0(&quot;educ&quot;, c(1, 3:5), &quot;c&quot;), &quot;ownc&quot;, &quot;nhdyrsc&quot;, paste0(&quot;nhdsize&quot;, c(2, 3), &quot;c&quot;)) cmb_tbl_cap &lt;- paste( &quot;Logistic regression coefficients and standard errors predicted&quot;, &quot;from models estimating neighborhood satisfaction among residents&quot;, &quot;combining DCAS 2016 and DCAS 2018 data&quot; ) cmb_tbl &lt;- report_models( MIcombine_aic(m1C), MIcombine_aic(m2C), MIcombine_aic(m3C), reglabels = regression_labelsC, use.headers = TRUE, coefs=coef_names ) %&gt;% set_top_padding(0) %&gt;% set_bottom_padding(0) %&gt;% set_bottom_border(1, everything(), TRUE) %&gt;% set_caption(cmb_tbl_cap) %&gt;% set_label(&quot;tab:combined&quot;) cmb_tbl Table 6.2: Logistic regression coefficients and standard errors predicted from models estimating neighborhood satisfaction among residents combining DCAS 2016 and DCAS 2018 data (1)(2)(3) (Intercept)1.998 ***1.964 ***1.950 *** (0.196)&nbsp;&nbsp;&nbsp;(0.230)&nbsp;&nbsp;&nbsp;(0.232)&nbsp;&nbsp;&nbsp; Race&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Asian-0.024&nbsp;&nbsp;&nbsp;&nbsp;-0.138&nbsp;&nbsp;&nbsp;&nbsp;-0.095&nbsp;&nbsp;&nbsp;&nbsp; (0.389)&nbsp;&nbsp;&nbsp;(0.469)&nbsp;&nbsp;&nbsp;(0.475)&nbsp;&nbsp;&nbsp; Black-1.033 ***-0.897 **&nbsp;-0.826 **&nbsp; (0.283)&nbsp;&nbsp;&nbsp;(0.284)&nbsp;&nbsp;&nbsp;(0.288)&nbsp;&nbsp;&nbsp; Latino-0.975&nbsp;&nbsp;&nbsp;&nbsp;-0.901&nbsp;&nbsp;&nbsp;&nbsp;-0.857&nbsp;&nbsp;&nbsp;&nbsp; (0.511)&nbsp;&nbsp;&nbsp;(0.536)&nbsp;&nbsp;&nbsp;(0.544)&nbsp;&nbsp;&nbsp; Multiracial neighborhoods-1.186 ***-1.093 **&nbsp;-1.063 **&nbsp; (0.306)&nbsp;&nbsp;&nbsp;(0.345)&nbsp;&nbsp;&nbsp;(0.338)&nbsp;&nbsp;&nbsp; ~x Asian0.092&nbsp;&nbsp;&nbsp;&nbsp;0.109&nbsp;&nbsp;&nbsp;&nbsp;0.041&nbsp;&nbsp;&nbsp;&nbsp; (0.641)&nbsp;&nbsp;&nbsp;(0.618)&nbsp;&nbsp;&nbsp;(0.616)&nbsp;&nbsp;&nbsp; ~x Black1.320 *&nbsp;&nbsp;1.240 *&nbsp;&nbsp;1.113 *&nbsp;&nbsp; (0.531)&nbsp;&nbsp;&nbsp;(0.596)&nbsp;&nbsp;&nbsp;(0.546)&nbsp;&nbsp;&nbsp; ~x Latino1.066&nbsp;&nbsp;&nbsp;&nbsp;0.990&nbsp;&nbsp;&nbsp;&nbsp;0.948&nbsp;&nbsp;&nbsp;&nbsp; (0.717)&nbsp;&nbsp;&nbsp;(0.704)&nbsp;&nbsp;&nbsp;(0.714)&nbsp;&nbsp;&nbsp; Predom. Latinx neighborhoods-1.516 **&nbsp;-1.505 **&nbsp;-1.426 *** (0.471)&nbsp;&nbsp;&nbsp;(0.460)&nbsp;&nbsp;&nbsp;(0.413)&nbsp;&nbsp;&nbsp; ~x Asian-0.216&nbsp;&nbsp;&nbsp;&nbsp;-0.127&nbsp;&nbsp;&nbsp;&nbsp;-0.288&nbsp;&nbsp;&nbsp;&nbsp; (0.702)&nbsp;&nbsp;&nbsp;(0.708)&nbsp;&nbsp;&nbsp;(0.673)&nbsp;&nbsp;&nbsp; ~x Black1.394 *&nbsp;&nbsp;1.369 *&nbsp;&nbsp;1.268 *&nbsp;&nbsp; (0.613)&nbsp;&nbsp;&nbsp;(0.604)&nbsp;&nbsp;&nbsp;(0.562)&nbsp;&nbsp;&nbsp; ~x Latino1.200&nbsp;&nbsp;&nbsp;&nbsp;1.144&nbsp;&nbsp;&nbsp;&nbsp;1.063&nbsp;&nbsp;&nbsp;&nbsp; (0.726)&nbsp;&nbsp;&nbsp;(0.689)&nbsp;&nbsp;&nbsp;(0.666)&nbsp;&nbsp;&nbsp; Demographics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.004&nbsp;&nbsp;&nbsp;&nbsp;0.001&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.006)&nbsp;&nbsp;&nbsp;(0.007)&nbsp;&nbsp;&nbsp; Foreign Born&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.162&nbsp;&nbsp;&nbsp;&nbsp;0.189&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.287)&nbsp;&nbsp;&nbsp;(0.296)&nbsp;&nbsp;&nbsp; Male&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.243&nbsp;&nbsp;&nbsp;&nbsp;-0.262&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.197)&nbsp;&nbsp;&nbsp;(0.198)&nbsp;&nbsp;&nbsp; Children Present&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.176&nbsp;&nbsp;&nbsp;&nbsp;-0.193&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.224)&nbsp;&nbsp;&nbsp;(0.223)&nbsp;&nbsp;&nbsp; Married&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.446 *&nbsp;&nbsp;0.364&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.216)&nbsp;&nbsp;&nbsp;(0.217)&nbsp;&nbsp;&nbsp; Socioeconomic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;H.S.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.031&nbsp;&nbsp;&nbsp;&nbsp;0.101&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.379)&nbsp;&nbsp;&nbsp;(0.381)&nbsp;&nbsp;&nbsp; Some college, no B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.104&nbsp;&nbsp;&nbsp;&nbsp;-0.087&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.322)&nbsp;&nbsp;&nbsp;(0.324)&nbsp;&nbsp;&nbsp; B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.125&nbsp;&nbsp;&nbsp;&nbsp;0.140&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.321)&nbsp;&nbsp;&nbsp;(0.322)&nbsp;&nbsp;&nbsp; M.A.+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.130&nbsp;&nbsp;&nbsp;&nbsp;0.109&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.313)&nbsp;&nbsp;&nbsp;(0.321)&nbsp;&nbsp;&nbsp; Neighborhood perceptions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Home owner&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.456 *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.217)&nbsp;&nbsp;&nbsp; Years in neighborhood&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.001&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.009)&nbsp;&nbsp;&nbsp; 10-50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.300&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.210)&nbsp;&nbsp;&nbsp; &gt;50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.580&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.427)&nbsp;&nbsp;&nbsp; N2151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC1984.405&nbsp;&nbsp;&nbsp;&nbsp;1978.436&nbsp;&nbsp;&nbsp;&nbsp;1959.919&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. 6.2.3 Calculate predicted probabilities and marginal effects from between-data comparison Calculate the predicted probabilities and standard errors at the intercept of control variables based on the third model in Table 6.2. To provide a conservative estimate, the standard errors represent the maximum standard error across the estimates from the five imputed datasets. The predicted values are plotted in Figure 6.1 and saved in the file images/between-prediction.pdf. ## Get list of control variables from formula (without sample &amp; race) ctrlvarnames &lt;- strsplit(m3bnC, &quot; \\\\+ &quot;)[[1]][-1] ## Record display names for neighborhood types sampnames &lt;- c( all = &quot;DC area&quot;, quad = &quot;Multiracial neighborhoods&quot;, latino = &quot;latino&quot; ) ## Create data with predictions of model of combined sample bnC_pred &lt;- tibble( raceeth = relevel(factor(rep(racelevs[-1], 3)), ref = &quot;white&quot;), nhdsmp = factor(rep(c(&quot;all&quot;, &quot;quad&quot;, &quot;latino&quot;), each = 4)), ## Create matrix containing zeros on all control variables !!!matrix(rep(0, 12 * length(ctrlvarnames)), nrow = 12) %&gt;% as_tibble(.name_repair = ~ctrlvarnames), ) %&gt;% mutate( ## Predict across all five imputations !!!lapply(m3C, prediction, data = ., type = &quot;link&quot;) %&gt;% ## Keep only the predictions and standard errors lapply(select, fitted, se.fitted) %&gt;% ## Combine the five separate data frames of predictions bind_cols( .name_repair = ~paste0( rep(c(&quot;fitted&quot;, &quot;se&quot;), 5), rep(1:5, each = 2) ) ) %&gt;% ## Summarize across rows of predictions (mean) and SEs (max) mutate( yhat = rowMeans(across(.cols = seq(1, 9, 2))), se = apply(.[, seq(2, 10, 2)], 1, max) ) %&gt;% select(yhat, se), ## Calculate predicted value in response scale and standard errors p = plogis(yhat), uci = plogis(yhat + 1.96 * se), lci = plogis(yhat - 1.96 * se), race = ordered(raceeth, levels=racelevs[-1]), samp = recode_factor( nhdsmp, !!!c( all = &quot;DC area&quot;, quad = &quot;Multiracial neighborhoods&quot; ) ) ) %&gt;% select(raceeth, race, samp, yhat, se, p, uci, lci) ## Plot values bnC_pred_plt &lt;- ggplot( filter(bnC_pred, samp !=&quot;latino&quot;), aes( x = race, y = p, ymin = lci, ymax = uci, group = samp, color = samp, shape = samp ) ) + geom_point(position = position_dodge(dodge_wd)) + geom_linerange(position = position_dodge(dodge_wd)) + scale_color_manual(values = c(&quot;#888888&quot;, &quot;#222222&quot;)) + scale_x_discrete( labels=gsub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, racelevs, perl=TRUE) ) + scale_y_continuous( limits=c(.45, 1), breaks=seq(.5, 1.0, .1) ) + labs( x = NULL, y = &quot;Probability&quot;, shape = NULL, color = NULL ) + theme_minimal() + theme( legend.position = &quot;bottom&quot;, panel.grid.major.x = element_blank() ) cap = paste( &quot;Predicted probability of neighborhood satisfaction among residents of&quot;, &quot;multiracial neighborhoods and the DC area based on model using combined&quot;, &quot;data from the DCAS 2016 and DCAS 2018&quot; ) ggsave(&quot;images/between-prediction.pdf&quot;, plot = bnC_pred_plt, width=6.75, units=&#39;in&#39;) Figure 6.1: Predicted probability of neighborhood satisfaction among residents of multiracial neighborhoods and the DC area based on model using combined data from the DCAS 2016 and DCAS 2018 Table 6.3 reports the predicted percentages of residents satisfied with their neighborhoods in all DC-area neighborhoods and in multiracial neighborhoods, as well as the difference between the two probabilities. bn_pred_tbl &lt;- bnC_pred %&gt;% select(race, samp, p) %&gt;% filter(samp != &quot;latino&quot;) %&gt;% pivot_wider(id_cols = race, names_from = samp, values_from = p) %&gt;% mutate( across(2:3, ~. * 100), race = sub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, race, perl = TRUE), Difference = `DC area` - `Multiracial neighborhoods` ) %&gt;% as_huxtable(digits = 1) %&gt;% set_caption(paste( &quot;Predicted percentage of residents satisfied with their neighborhood&quot;, &quot;by race and DCAS sample estimated from model with combined samples&quot; )) %&gt;% set_label(&quot;tab:bnC&quot;) bn_pred_tbl Table 6.3: Predicted percentage of residents satisfied with their neighborhood by race and DCAS sample estimated from model with combined samples raceDC areaMultiracial neighborhoodsDifference Asian86.569.716.8&nbsp;&nbsp; Black75.576.4-0.912 Latino74.972.72.23&nbsp; White87.570.816.7&nbsp;&nbsp; From the third model in Table 6.2, I estimated the marginal effects of living in a multiracial neighborhood compared to living in the DC area generally by race. I plotted the mean of the average marginal effects across the five imputations and then the maximum absolute values of the lower and upper confidence levels in Figure 6.2. ## Calculate and combine marginal effects across imputations # Warning that contrasts are dropped from factor nhdsmp suppressed mfxC &lt;- lapply( m3C, margins, variables = &quot;nhdsmp&quot;, at = list(raceeth = racelevs[-1]), design = dcasCsvy$designs[[1]] #Weights are the same across imputations ) mfxC_all &lt;- mfxC %&gt;% lapply(summary) %&gt;% bind_rows() %&gt;% as_tibble() %&gt;% filter(!grepl(&quot;latino$&quot;, factor)) %&gt;% mutate( imp = rep(1:5, each = 4), raceeth = sub(&quot;^(\\\\w)&quot;, &quot;\\\\U\\\\1&quot;, raceeth, perl = TRUE) ) ## Plot marginal effects mfxC_sum &lt;- mfxC_all %&gt;% group_by(raceeth) %&gt;% mutate( lower = sign(lower) * max(abs(lower)), upper = sign(upper) * max(abs(upper)) ) %&gt;% summarize( across(c(AME, lower, upper), mean) ) %&gt;% ungroup() mfxC_plt &lt;- ggplot(mfxC_sum, aes(x = raceeth, y = AME, ymin = lower, ymax = upper)) + geom_hline(yintercept = 0, color = &quot;#cccccc&quot;, size = 1) + geom_point() + geom_linerange() + scale_y_continuous( breaks = round(seq(-0.3, 0.3, 0.1), 1), limits = c(-0.35, 0.35) ) + labs( x = NULL, y = &quot;Average marginal effect&quot; ) + theme_minimal() + theme( panel.grid.major.x = element_blank() ) cap = paste(&quot;Average marginal effects on satisfaction of living in multiracial&quot;, &quot;neighborhoods compared to all DC-area residents of the same race&quot;) mfxC_plt Figure 6.2: Average marginal effects on satisfaction of living in multiracial neighborhoods compared to all DC-area residents of the same race ggsave(&quot;images/between.pdf&quot;, plot = mfxC_plt, width=6.75, units=&#39;in&#39;) "],["perceptions-of-neighborhood-change.html", "7 Perceptions of Neighborhood Change 7.1 Descriptive analysis of percieved neighborhood change 7.2 Regression analyses of perceived neighborhood change", " 7 Perceptions of Neighborhood Change 7.1 Descriptive analysis of percieved neighborhood change Calculate overall percentages of repondents who reported that their neighborhood had gotten better, worse, and stayed the same. chgmeans &lt;- with(dcas16svy, svymean(~nhdchg, na.rm=TRUE)) %&gt;% MIcombine() %&gt;% summary() %&gt;% mutate_at(1:4, ~.*100) ## Multiple imputation results: ## with(dcas16svy, svymean(~nhdchg, na.rm = TRUE)) ## MIcombine.default(.) ## results se (lower upper) missInfo ## nhdchgWorse 0.1150047 0.01813348 0.07941268 0.1505968 7 % ## nhdchgSame 0.5397289 0.02811966 0.48461540 0.5948425 0 % ## nhdchgBetter 0.3452663 0.02788291 0.29060297 0.3999297 3 % kable(chgmeans, digits=1) results se (lower upper) missInfo nhdchgWorse 11.5 1.8 7.9 15.1 7 % nhdchgSame 54.0 2.8 48.5 59.5 0 % nhdchgBetter 34.5 2.8 29.1 40.0 3 % Plot values measuring the percentage of respondents who reported that their neighborhood had gotten better, worse, and stayed the same. chglevs &lt;- c(&quot;Worse&quot;, &quot;Same&quot;, &quot;Better&quot;) chgmeans_tbl &lt;- with(dcas16svy, svyby(~nhdchg, ~raceeth, svymean, na.rm=TRUE)) %&gt;% MIcombine()%&gt;% summary() %&gt;% as_tibble() %&gt;% mutate_at(1:4, ~.*100) %&gt;% mutate( raceeth = relevel(factor( rep(c(&quot;White&quot;, &quot;Asian&quot;, &quot;Black&quot;, &quot;Latino&quot;), 3)), ref=&quot;White&quot;), nhdchg = ordered(rep(chglevs, each=4), levels=chglevs) ) ## Multiple imputation results: ## with(dcas16svy, svyby(~nhdchg, ~raceeth, svymean, na.rm = TRUE)) ## MIcombine.default(.) ## results se (lower upper) missInfo ## white:nhdchgWorse 0.12711767 0.02571501 0.07671714 0.17751819 0 % ## asian:nhdchgWorse 0.04495074 0.01474747 0.01603964 0.07386184 3 % ## black:nhdchgWorse 0.12078048 0.03693358 0.04838487 0.19317608 2 % ## latino:nhdchgWorse 0.15650986 0.05397658 0.05047685 0.26254287 9 % ## white:nhdchgSame 0.60396643 0.04272662 0.52022377 0.68770909 0 % ## asian:nhdchgSame 0.57690831 0.05564277 0.46785037 0.68596625 0 % ## black:nhdchgSame 0.51067739 0.06306491 0.38707244 0.63428233 0 % ## latino:nhdchgSame 0.44898441 0.06505625 0.32147650 0.57649233 0 % ## white:nhdchgBetter 0.26891591 0.04016808 0.19018792 0.34764390 0 % ## asian:nhdchgBetter 0.37814095 0.05554821 0.26926834 0.48701357 0 % ## black:nhdchgBetter 0.36854214 0.06307183 0.24492219 0.49216209 1 % ## latino:nhdchgBetter 0.39450573 0.06631893 0.26439332 0.52461814 6 % names(chgmeans_tbl) &lt;- c(&quot;mean&quot;, &quot;se&quot;, &quot;lci&quot;, &quot;uci&quot;, &quot;missinfo&quot;, &quot;raceeth&quot;, &quot;nhdchg&quot;) dodge_wd &lt;- .25 chg_plt &lt;- ggplot(chgmeans_tbl, aes(x=nhdchg, y=mean, color=raceeth, shape=raceeth)) + geom_point(position=position_dodge(width=dodge_wd), size=2.25) + geom_linerange(aes(ymin=lci, ymax=uci), position=position_dodge(dodge_wd)) + scale_color_grey(start=0.4, end=.7) + scale_shape_manual(values=c(15:18)) + labs( x = NULL, y = &quot;Percent&quot;, color = NULL, shape = NULL ) + theme_minimal() + theme( legend.position = &quot;bottom&quot;, panel.grid.major.x = element_blank() ) chg_plt_cap &lt;- paste( &quot;Percent of respondents who report how neighborhood has changed in&quot;, &quot;past five years by race&quot; ) Figure 7.1: Percent of respondents who report how neighborhood has changed in past five years by race 7.2 Regression analyses of perceived neighborhood change Follow the same process of model development as with the models of within-neighborhood satisfaction. Report the results of all four models. To ease the interpretation of the results, report only models 1 &amp; 3 in the paper. ## Note: &quot;non-integer #successes&quot; warnings suppressed m1ch &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;better ~&#39;, m1)), family=binomial) ) m2ch &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;better ~&#39;, m2)), family=binomial) ) m3ch &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;better ~&#39;, m3)), family=binomial) ) m4ch &lt;- with(dcas16svy, svyglm( as.formula(paste(&#39;better ~&#39;, m4)), family=binomial) ) ch_tbl &lt;- report_models( MIcombine_aic(m1ch), MIcombine_aic(m2ch), MIcombine_aic(m3ch), MIcombine_aic(m4ch), caption = paste( &quot;Logistic regression coefficients and standard errors predicted&quot;, &quot;for models estimating neighborhood improvement among residents&quot;, &quot;of mulitracial neighborhoods&quot; ), label = &quot;tab:change&quot;, reglabels = regression_labels, use.headers = TRUE ) statrow &lt;- nrow(ch_tbl)-3 ch_tbl &lt;- insert_row( ch_tbl, c(&quot;Tract fixed effects&quot;, rep(&quot;X&quot;, 4)),after=statrow) %&gt;% set_top_border(statrow+1, everywhere, TRUE) %&gt;% set_top_border(statrow+2, everywhere, FALSE) %&gt;% set_top_padding(0) %&gt;% set_bottom_padding(0) cat( sub(&quot;\\\\(\\\\\\\\#(tab:.+?)\\\\)&quot;, &quot;\\\\\\\\label{\\\\1\\\\}&quot;, to_latex(ch_tbl)), file=&quot;tables/change.tex&quot; ) ch_tbl Table 7.1: Logistic regression coefficients and standard errors predicted for models estimating neighborhood improvement among residents of mulitracial neighborhoods (1)(2)(3)(4) (Intercept)1.167&nbsp;&nbsp;&nbsp;&nbsp;1.547&nbsp;&nbsp;&nbsp;1.669&nbsp;&nbsp;&nbsp;&nbsp;2.742 *&nbsp;&nbsp; (1.047)&nbsp;&nbsp;&nbsp;(1.123)&nbsp;&nbsp;(1.220)&nbsp;&nbsp;&nbsp;(1.261)&nbsp;&nbsp;&nbsp; Race&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Asian1.344 **&nbsp;0.905&nbsp;&nbsp;&nbsp;0.936&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.426)&nbsp;&nbsp;&nbsp;(0.522)&nbsp;&nbsp;(0.511)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Black1.436 **&nbsp;1.383 **1.205 *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.456)&nbsp;&nbsp;&nbsp;(0.473)&nbsp;&nbsp;(0.498)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Latinx1.650 ***1.284 *&nbsp;1.253 *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.466)&nbsp;&nbsp;&nbsp;(0.516)&nbsp;&nbsp;(0.538)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Demographics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.002&nbsp;&nbsp;&nbsp;0.030 *&nbsp;&nbsp;0.031 *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.011)&nbsp;&nbsp;(0.013)&nbsp;&nbsp;&nbsp;(0.013)&nbsp;&nbsp;&nbsp; Foreign Born&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.593&nbsp;&nbsp;&nbsp;0.546&nbsp;&nbsp;&nbsp;&nbsp;0.954 **&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.411)&nbsp;&nbsp;(0.416)&nbsp;&nbsp;&nbsp;(0.343)&nbsp;&nbsp;&nbsp; Male&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.180&nbsp;&nbsp;&nbsp;0.222&nbsp;&nbsp;&nbsp;&nbsp;0.253&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.316)&nbsp;&nbsp;(0.319)&nbsp;&nbsp;&nbsp;(0.306)&nbsp;&nbsp;&nbsp; Children Present&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.082&nbsp;&nbsp;&nbsp;0.022&nbsp;&nbsp;&nbsp;&nbsp;0.119&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.331)&nbsp;&nbsp;(0.345)&nbsp;&nbsp;&nbsp;(0.345)&nbsp;&nbsp;&nbsp; Married&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.317&nbsp;&nbsp;&nbsp;-0.129&nbsp;&nbsp;&nbsp;&nbsp;-0.350&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.330)&nbsp;&nbsp;(0.338)&nbsp;&nbsp;&nbsp;(0.333)&nbsp;&nbsp;&nbsp; Socioeconomic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;H.S.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.545&nbsp;&nbsp;&nbsp;0.685&nbsp;&nbsp;&nbsp;&nbsp;0.946&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1.003)&nbsp;&nbsp;(1.018)&nbsp;&nbsp;&nbsp;(0.969)&nbsp;&nbsp;&nbsp; Some college, no B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.629&nbsp;&nbsp;&nbsp;-0.606&nbsp;&nbsp;&nbsp;&nbsp;-0.573&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.528)&nbsp;&nbsp;(0.513)&nbsp;&nbsp;&nbsp;(0.495)&nbsp;&nbsp;&nbsp; B.A.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.895&nbsp;&nbsp;&nbsp;-1.093 *&nbsp;&nbsp;-1.000&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.542)&nbsp;&nbsp;(0.536)&nbsp;&nbsp;&nbsp;(0.517)&nbsp;&nbsp;&nbsp; M.A.+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.880&nbsp;&nbsp;&nbsp;-1.082 *&nbsp;&nbsp;-1.011 *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.499)&nbsp;&nbsp;(0.476)&nbsp;&nbsp;&nbsp;(0.474)&nbsp;&nbsp;&nbsp; Neighborhood perceptions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Home owner&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.643&nbsp;&nbsp;&nbsp;&nbsp;0.459&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.414)&nbsp;&nbsp;&nbsp;(0.415)&nbsp;&nbsp;&nbsp; Years in neighborhood&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.107 ***-0.104 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.021)&nbsp;&nbsp;&nbsp;(0.020)&nbsp;&nbsp;&nbsp; 10-50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.728 *&nbsp;&nbsp;0.838 *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.363)&nbsp;&nbsp;&nbsp;(0.358)&nbsp;&nbsp;&nbsp; &gt;50 blocks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.599&nbsp;&nbsp;&nbsp;&nbsp;0.753&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.662)&nbsp;&nbsp;&nbsp;(0.613)&nbsp;&nbsp;&nbsp; Tract fixed effectsX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC651.992&nbsp;&nbsp;&nbsp;&nbsp;654.594&nbsp;&nbsp;&nbsp;615.867&nbsp;&nbsp;&nbsp;&nbsp;622.708&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Calculate average marginal effects of race on neighborhood change based on results of model 3. m3ch_mfx &lt;- MImargins(m3ch, param=&quot;margins&quot;) %&gt;% mutate_at(vars(val, SE), ~.*100) %&gt;% mutate(p = pnorm(abs(val/SE), lower.tail=FALSE)) kable(m3ch_mfx, digits=c(0,1,1,3)) raceeth val SE p asian 10.5 5.7 0.033 black 13.8 5.5 0.006 latino 14.4 6.2 0.010 "],["supplement.html", "8 Supplement 8.1 Data Construction 8.2 Within Neighborhood Robustness Analysis 8.3 Between Neighborhood Robustness Analysis 8.4 Neighborhood Change Robustness Analysis", " 8 Supplement 8.1 Data Construction The following plot shows the high degree of correlation between respondent educational attainment and income in the DCAS 2016 sample. The high level of correlation and the larger share of missingness on income led me to use educational attainment to measure socioeconomic status rather than using income or both educational attainment and income. ggplot(dcas16, aes(x=dem.income.cat4,y=dem.educ.attain)) + geom_jitter(size=.9) + labs( title = &quot;Correlation of respondent education and income&quot;, x = &quot;Income&quot;, y = &quot;Educational attainment&quot; ) + theme_minimal() 8.2 Within Neighborhood Robustness Analysis The data from the DCAS 2016 raise the issue that I, by construction, only received responses from residents selected on two types of behaviors: residents who chose not to move out of multiracial neighborhoods and residents who selected to move into multiracial neighborhoods. Residents may have exhibited one or both of these behaviors. These residents might exhibit different levels of satisfaction that either those who left or chose not to move into multiracial neighborhoods. Given the importance of selection effects, and the importance of selection of whites in particular based on the predictions of existing theories, I conducted analyses to mitigate concerns about selection effects among whites. The first analyses examine levels of satisfaction among whites by duration of residence and the second examine interracial differences by the size of white population change in neighborhoods. 8.2.1 Influence of length of residence on satisfaction The first robustness analysis considers length of residence in neighborhoods by race. One element of selection would exist if whites were so disinterested in moving to multiracial neighborhoods that no new whites moved in. If this were true, then multiracial integration would be the exclusive result of incumbents remaining in integrated neighborhoods. Figure 8.1: Distribution of years lived in current neighborhood by race Figure 8.1 shows evidence against the dynamic of total white avoidance. Figure 8.1 plots the distribution of years lived in their current neighborhood by the race of the respondent. While it is true that whites exclusively account for residents who have lived in neighborhoods longer than 40 years, about half of white respondents moved into multiracial neighborhoods in the past 10 years. The mixture of long-term and short-term white residents does not suggest that neighborhoods have become anathema to whites as they have become more integrated. Of DCAS 2016 respondents who had moved into their neighborhoods in the previous 10 years, 29 were white (in fact, approximately equal shares of newcomers identified by each race: 23 were Asian, 26 were Black, and 22 were Latinx). Previous theories and evidence suggest that the white residents who have stayed in multiracial neighborhoods will be some mixture of: white residents who have been satisfied living in integrated neighborhoods and chose not to leave (satisfied stayers), and white residents who have been stuck in the neighborhood without the means to move out of the neighborhood despite being dissatisified (dissatisfied stayers). The latter subgroup, the “dissatisfied stayers” would perceive neighbohroods similarly to those who were dissatisfied and able to leave. Meanwhile, previous theories and evidence do not provide a strong reason that the former subgroup, the “satisfied stayers,” would have higher levels of satisfaction than new white entrants who selected multiracial neighborhoods above other neighborhood types. Without a reason to suspect that stayers would, on average, be more satisfied than the average new entrant, and stayers comprise both those satisfied and those dissatisfied with integration, then evidence of lower satisfaction among longer-term residents would provide some evidence that selection by satisfaction level has been occurring. Figure ?? shows the (unweighted) smoothed percent of white residents satisified by length of residence in their neighborhoods. Given the importance of white residents to the theories, and the fact that the neighborhoods in the sample were almost all predominantly white neighborhoods that integrated over time, I focus on white respondents. Just under 70 percent of whites who lived in the neighborhood fewer than 40 years reported being satisfied, with a possible modest increase among those who lived in the neighborhood from 10 to 20 years. A consistent downward trend existed among the five percent of white residents who lived in the neighborhood for at least 40 years (but even then, more of those residents were satisfied than dissatisfied). Figure 8.2: Satisfaction by length of residence among whites in multiracial neighborhoods The descriptive plot above does not, however, account for other factors that might correlate with satisfaction and length of residents, especially age, which mechanically correlates with length of residence. I created models that include a categorical variable for how long respondents have lived in multiracial neighborhoods and estimated parameters based only among white respondents. ## Warnings are suppressed ## Subset data to include only white respondents dcas16nhw &lt;- subset(dcas16svy, raceeth==&#39;white&#39;) ## Estimate model with fixed effects m3yrs &lt;- sub(&#39;nhdyrsc&#39;, &#39;nhdyrscat&#39;, m3) m3yrs &lt;- sub(&#39;raceeth \\\\+&#39;, &#39;&#39;, m3yrs) m3nhwyrs &lt;- with(dcas16nhw, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3yrs)), family=binomial) ) m3yrs_wo &lt;- sub(&#39;nhdyrscat \\\\+&#39;, &#39;&#39;, m3yrs) m3nhwyrs_wo &lt;- with(dcas16nhw, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3yrs_wo)), family=binomial) ) ## Estimate model without fixed effects m3yrs_nofe &lt;- sub(&#39;sample_tract +&#39;, &#39;&#39;, m3yrs) m3nhwyrs_nofe &lt;- with(dcas16nhw, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3yrs_nofe)), family=binomial) ) m3yrs_nofe_wo &lt;- sub(&#39;nhdyrscat \\\\+&#39;, &#39;&#39;, m3yrs_nofe) m3nhwyrs_nofe_wo &lt;- with(dcas16nhw, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3yrs_nofe_wo)), family=binomial) ) The results of these models are reported below. The first two columns report estimates of models with neighborhood fixed effects, meaning the models statistically compare white residents living in the same neighborhood. The first column shows that length of residence does not predict satisfaction among whites. The coefficients for residents who lived longer in their neighborhoods were negative, but the standard errors were double the estimated point estimates for two of three cases and as large as the point estimate for the third. What is more, the data fit the model without length of residence better than the model that included length of residence, evidence of which can be seen in the smaller AIC in the second column compared to the first. Table 8.1: Table 8.2: Logistic regression coefficients and standard errors predicted of models estimating neighborhood satisfaction among white residents of multiracial neighborhoods (1)(2)(1)(2) (Intercept)-3.040&nbsp;&nbsp;&nbsp;-2.970&nbsp;&nbsp;&nbsp;0.959 *0.991 ** (1.794)&nbsp;&nbsp;(1.738)&nbsp;&nbsp;(0.422)&nbsp;(0.360)&nbsp;&nbsp; Demographics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age0.001&nbsp;&nbsp;&nbsp;-0.010&nbsp;&nbsp;&nbsp;0.003&nbsp;&nbsp;0.002&nbsp;&nbsp;&nbsp; (0.024)&nbsp;&nbsp;(0.020)&nbsp;&nbsp;(0.014)&nbsp;(0.013)&nbsp;&nbsp; Foreign Born3.243 **3.225 **0.502&nbsp;&nbsp;0.528&nbsp;&nbsp;&nbsp; (1.242)&nbsp;&nbsp;(1.212)&nbsp;&nbsp;(0.660)&nbsp;(0.652)&nbsp;&nbsp; Male0.164&nbsp;&nbsp;&nbsp;0.020&nbsp;&nbsp;&nbsp;-0.103&nbsp;&nbsp;-0.098&nbsp;&nbsp;&nbsp; (0.708)&nbsp;&nbsp;(0.597)&nbsp;&nbsp;(0.388)&nbsp;(0.382)&nbsp;&nbsp; Children Present-1.108&nbsp;&nbsp;&nbsp;-0.896&nbsp;&nbsp;&nbsp;0.113&nbsp;&nbsp;0.187&nbsp;&nbsp;&nbsp; (0.779)&nbsp;&nbsp;(0.712)&nbsp;&nbsp;(0.444)&nbsp;(0.443)&nbsp;&nbsp; Married0.987&nbsp;&nbsp;&nbsp;0.982&nbsp;&nbsp;&nbsp;0.023&nbsp;&nbsp;-0.034&nbsp;&nbsp;&nbsp; (0.725)&nbsp;&nbsp;(0.674)&nbsp;&nbsp;(0.473)&nbsp;(0.457)&nbsp;&nbsp; Education&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;H.S.0.396&nbsp;&nbsp;&nbsp;-0.058&nbsp;&nbsp;&nbsp;0.382&nbsp;&nbsp;0.190&nbsp;&nbsp;&nbsp; (6.876)&nbsp;&nbsp;(5.976)&nbsp;&nbsp;(2.115)&nbsp;(1.916)&nbsp;&nbsp; Some college, no B.A.0.840&nbsp;&nbsp;&nbsp;0.854&nbsp;&nbsp;&nbsp;-0.030&nbsp;&nbsp;-0.055&nbsp;&nbsp;&nbsp; (1.036)&nbsp;&nbsp;(1.095)&nbsp;&nbsp;(0.843)&nbsp;(0.865)&nbsp;&nbsp; B.A.0.243&nbsp;&nbsp;&nbsp;0.468&nbsp;&nbsp;&nbsp;-0.042&nbsp;&nbsp;-0.083&nbsp;&nbsp;&nbsp; (0.921)&nbsp;&nbsp;(0.964)&nbsp;&nbsp;(0.830)&nbsp;(0.832)&nbsp;&nbsp; M.A.+-0.681&nbsp;&nbsp;&nbsp;-0.429&nbsp;&nbsp;&nbsp;-0.504&nbsp;&nbsp;-0.573&nbsp;&nbsp;&nbsp; (1.003)&nbsp;&nbsp;(0.999)&nbsp;&nbsp;(0.842)&nbsp;(0.820)&nbsp;&nbsp; Neighborhood perceptions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Home owner0.536&nbsp;&nbsp;&nbsp;0.534&nbsp;&nbsp;&nbsp;0.697&nbsp;&nbsp;0.753&nbsp;&nbsp;&nbsp; (0.627)&nbsp;&nbsp;(0.652)&nbsp;&nbsp;(0.462)&nbsp;(0.441)&nbsp;&nbsp; 11-20 years in neighborhood0.464&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.275&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.821)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.500)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 21-30 years in neighborhood-0.930&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.343&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.917)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.536)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 31-40 years in neighborhood-0.771&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.241&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1.291)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.762)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;40 years in neighborhood-0.394&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.367&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1.719)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1.095)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10-50 blocks0.441&nbsp;&nbsp;&nbsp;0.301&nbsp;&nbsp;&nbsp;0.747 *0.701&nbsp;&nbsp;&nbsp; (0.631)&nbsp;&nbsp;(0.596)&nbsp;&nbsp;(0.355)&nbsp;(0.360)&nbsp;&nbsp; &gt;50 blocks-7.770 *&nbsp;-8.037 *&nbsp;-1.397&nbsp;&nbsp;-1.401&nbsp;&nbsp;&nbsp; (3.892)&nbsp;&nbsp;(3.689)&nbsp;&nbsp;(1.161)&nbsp;(1.286)&nbsp;&nbsp; Neighborhood Fixed EffectsX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N 263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 263&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC320.360&nbsp;&nbsp;&nbsp;310.724&nbsp;&nbsp;&nbsp;308.395&nbsp;&nbsp;300.433&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. The third and fourth columns report analogous models without fixed effects. Removing the fixed effects and not including any neighborhood covariates allowed me to examine whether the duration of residence between any two white residents randomly drawn from any multiracial neighborhood in the DC Area differ from one another. Not accounting for different neighborhood conditions allowed any trends in satisfaction between newcomers and incumbents to be observed, even if those conditions were the result of neighborhood conditions. Accordingly, it provided a conservative estimate regarding the association between duration and neighborhoods and satisfaction. As with the first two models, none of the coefficients can be distinguished from a null association and the data fit the model without length of residence better than the model with length of residence. Given existing the existing theories regarding neighborhood selection, these results provide evidence that mitigate concerns that selection effects undermine the share of satisfied white residents living in multiracial neighborhoods. 8.2.2 Influence of white population change The second analysis examined whether white residents were systematically less likely than other racial to be satisfied in neighborhoods that tended to lose more whites. The loss of whites could signal dissatisfaction as whites “vote with their feet” and move out of the neighborhood. In addition, the loss of white neighbors could lead white residents who remain to feel less satisfied with their neighborhoods. Existing theories would predict that whites would be more sensitive to the loss of white residents than other racial groups, so we would expect to see larger interracial disparities in neighborhoods that lost more whites. To address the possibility that white losses affect satisfaction differently for whites than other groups, I stratified the data by the white population change that occurred in the neighborhood from 2000 to 2015 (the latter being based on the 2011-2015 Five-year American Community Survey estimates). To account for different neighborhood sizes, I calculated the ratio of whites living in the neighborhood in 2015 to the number of whites who lived in the neighborhood in 2000; I then took the natural log of this value (i.e., \\(\\ln(\\text{POP}_{2015}/\\text{POP}_{2000})\\)) to obtain a linear variable to include in models. sampled_nhoods &lt;- dcas16q %&gt;% group_by(sample_tract) %&gt;% slice(1L) %&gt;% ungroup() chgsum &lt;- summary(sampled_nhoods$lntotchg) chgtertiles &lt;- quantile(sampled_nhoods$lntotchg, probs = seq(0, 1, 1/3)) gainnhw &lt;- nrow(filter(sampled_nhoods, lntotchg&gt;0)) / nrow(sampled_nhoods) I calculated tertiles of change based on the distribution of white population change in neighborhoods.3 The average neighborhood kept 80 out of every 100 of its white residents (median = 78 out of 100). The bands for the white population ratio in each tertile reported in Table 8.3 and are depicted in orange in Figure 8.3. Table 8.3: Values of white population change ratio ranges by tertiles Tertile Range of change ratio First 0.21-0.71 Second 0.71-0.88 Third 0.88-3.42 Table 8.3 and 8.3 show considerable variation in how much white population change occurred in multiracial neighborhoods. Some neighborhoods lost a large number of whites, but even in the tertile representing the largest white losses, the upper limit of neighborhoods kept 71 percent of white residents. This value is consistent with average annual mobility rates among whites, which in 2010 were TK. Although multiracial neighborhoods in the data lost whites, there were still 20 percent of neighborhoods that gained white residents over 15 years. The data used in the manuscript, therefore, reflect neighborhoods with a large distribution of white population losses and gains. These descriptive analysies show that the data used in the manuscript, therefore, reflect neighborhoods with a large distribution of white population losses and gains. Figure 8.3: Distribution of neighborhood white population change To examine whether interracial differences in satisfaction were consistent across this distribution of white neighborhood change, I stratified the DCAS 2016 by tertiles, report the unconditional means of satisfaction by race, and re-estimated Models 2 and 3 from Table 6 of the manuscript. Before doing so, I investigate the distribution of DCAS 2016 sample respondents across the three tertiles. Figure 8.4 shows the smoothed percentage of white respondents who were satisfied in their neighborhoods by the logged white population change ratio. ## Create variable measuring tertiles of white population change in ## DCAS 2016 data dcas16svy &lt;- dcas16svy %&gt;% update( chgtert = factor( cut(lntotchg, breaks = chgtertiles, include.lowest = TRUE), labels = as.character(1:3) ) ) nhwsat &lt;- filter(dcas16svy$designs$imp1$variables, raceeth==&#39;white&#39;) chgsat_smth &lt;- ggplot(nhwsat, aes(x=lntotchg, y=satisfied)) + geom_smooth(color=&#39;#333333&#39;) + geom_vline(xintercept = chgtertiles[2:3], color=&#39;orange&#39;) + scale_x_continuous(breaks = seq(-1.5, 2.75, 0.5)) + scale_y_continuous(breaks = seq(0.1,1.0,0.2)) + labs( title = paste( &quot;Satisfaction by change in white population among whites in&quot;, &quot;multiracial neighborhoods&quot; ), subtitle = paste( &quot;Unweighted percent of white residents living in multiracial&quot;, &quot;neighborhoods&quot; ), y = &quot;Percent satisfied&quot;, x = NULL ) + theme_minimal() + theme( axis.text.x = element_blank() ) chgsat_hst &lt;- ggplot(nhwsat, aes(x = lntotchg)) + geom_histogram(bins = 41) + geom_vline(xintercept = chgtertiles[2:3], color=&#39;orange&#39;) + scale_x_continuous(breaks = seq(-1.5, 2.75, 0.5)) + labs( y = &quot;Count&quot;, x = &quot;White population change ratio (logged)&quot;, caption = &quot;Note: Orange vertical lines demarcate tertiles&quot; ) + theme_minimal() chgsat_plt &lt;- ggarrange(chgsat_smth, chgsat_hst, ncol = 1, heights = c(.65, .35)) ggsave(&quot;images/supp-chgsat.pdf&quot;, plot = mfxC_plt, width=6.75, units=&#39;in&#39;) chgsat_plt Figure 8.4: Share of white respondents satisfied in neighborhood by logged white population change ratio Table 8.4 shows the number of respondents by race and tertile of white change. racedisp &lt;- racelabs names(racedisp) = racelevs[-1] tertcount &lt;- dcas16svy$designs$imp1$variables %&gt;% group_by(chgtert, raceeth) %&gt;% count() %&gt;% ungroup() %&gt;% pivot_wider(id_cols = raceeth, names_from = chgtert, values_from = n) %&gt;% mutate( Race = recode_factor(raceeth, !!!racedisp, ordered = !!!racedisp) ) tertcount_tbl &lt;- tertcount %&gt;% select(Race, `1`, `2`, `3`) %&gt;% as_huxtable() %&gt;% insert_row(c(&quot;&quot;, &quot;Tertile of White Change&quot;, &quot;&quot; ,&quot;&quot;)) %&gt;% set_align(1, everywhere, &quot;center&quot;) %&gt;% merge_across(1, 2:4) %&gt;% set_bold(1:2, everywhere, TRUE) %&gt;% set_bottom_border(c(2, nrow(.)), everywhere, TRUE) %&gt;% set_caption(paste( &quot;Number of sample respondents by race and tertile of white&quot;, &quot;population change&quot;)) %&gt;% set_label(&quot;tab:tertcount&quot;) tertcount_tbl Table 8.4: Number of sample respondents by race and tertile of white population change Tertile of White Change Race123 White9073100 Asian666156 Black453029 Latino263026 gsub(&quot;```(.+\\\\n)?&quot;, &quot;&quot;, to_latex(tertcount_tbl), perl=TRUE) %&gt;% cat(file=&quot;tables/supp-tertcount.tex&quot;) ## Create variable measuring tertiles of white population change in ## DCAS 2016 data dcas16svy &lt;- dcas16svy %&gt;% update( chgtert = factor( cut(lntotchg, breaks = chgtertiles, include.lowest = TRUE), labels = as.character(1:3) ) ) racedfs &lt;- list( # dcas16svy, subset(dcas16svy, raceeth==&quot;asian&quot;), subset(dcas16svy, raceeth==&quot;black&quot;), subset(dcas16svy, raceeth==&quot;latino&quot;), subset(dcas16svy, raceeth==&quot;white&quot;) ) desctert &lt;- lapply(racedfs, function(df){ res &lt;- with(df, svyby(~satisfied, ~raceeth + chgtert, svymean)) %&gt;% MIcombine() n &lt;- nrow(df$designs$imp1) list(Percent=coef(res)*100) }) %&gt;% bind_rows() %&gt;% mutate( Race = rep(racelabs, each = 3), tertile = rep(1:3, 4) ) desctert_tbl &lt;- desctert %&gt;% pivot_wider(id_cols = &quot;Race&quot;, names_from = &quot;tertile&quot;, values_from = &quot;Percent&quot;) %&gt;% as_huxtable() %&gt;% insert_row(c(&quot;&quot;, &quot;Tertile of White Change&quot;, &quot;&quot; ,&quot;&quot;)) %&gt;% set_align(1, everywhere, &quot;center&quot;) %&gt;% merge_across(1, 2:4) %&gt;% set_bold(1:2, everywhere, TRUE) %&gt;% set_bottom_border(c(2, nrow(.)), everywhere, TRUE) %&gt;% set_caption(paste( &quot;Mean percent of residents satisfied by race in each tertile of&quot;, &quot;white population change&quot;)) %&gt;% set_label(&quot;tab:desctert&quot;) desctert_tbl Table 8.5: Mean percent of residents satisfied by race in each tertile of white population change Tertile of White Change Race123 Asian68.973.372.9 Black62.565.378&nbsp;&nbsp; Latino71.871.582.6 White61.674.971.6 gsub(&quot;```(.+\\\\n)?&quot;, &quot;&quot;, to_latex(desctert_tbl), perl=TRUE) %&gt;% cat(file=&quot;tables/supp-desctert.tex&quot;) ## Warnings are suppressed ## Subset DCAS 2016 data by tertile svytert &lt;- lapply(as.character(1:3), function(t){ svy &lt;- subset(dcas16svy, chgtert==t) %&gt;% update(sample_tract = factor(as.character(sample_tract))) contr_N &lt;- length(unique(svy$designs$imp1$variables$sample_tract)) for(d in svy$designs) { contrasts(d$variables$sample_tract) &lt;- contr.sum(contr_N) } return(svy) }) ## Estimate parameters of full model tert_model &lt;- function(svy, vars) { with(svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, vars)), family=binomial )) } m3tert &lt;- lapply(svytert, tert_model, m3) # Full model m4tert &lt;- lapply(svytert, tert_model, m4) # Without race The parameter estimates, standard errors, and AIC values for the models re-estimating Models 2 and 3 from Table 6 of the manuscript are reported in Table 8.2. Model 2 in each of the tertiles includes race as a predictor of satisfaction. No effect exists that can be statistically distinguished from the null in any of the three models. In the two lowest tertiles, the data fit Model 3, which does not include race, than they fit Model 2. The data for the highest tertile fit the model that includes race better than the model that does not, but none of the race coefficients approach statistical significance. Table 8.6: Table 8.2: Logistic regression coefficients and standard errors predicted from models estimating neighborhood satisfaction among residents of mulitracial neighborhoods by tertile of white population change FirstSecondThird (2)(3)(2)(3)(2)(3) (Intercept)18.889 ***19.287 ***-3.104&nbsp;&nbsp;&nbsp;-3.491 *&nbsp;1.921&nbsp;&nbsp;2.505 * (0.959)&nbsp;&nbsp;&nbsp;(0.745)&nbsp;&nbsp;&nbsp;(1.890)&nbsp;&nbsp;(1.624)&nbsp;&nbsp;(1.337)&nbsp;(1.241)&nbsp; Race&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Asian1.229&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.405&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.449&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.827)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1.005)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.857)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Black0.756&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.358&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.594)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.800)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.919)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Latinx0.819&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.562&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.465&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0.825)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1.048)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.879)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Demographics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Age-0.002&nbsp;&nbsp;&nbsp;&nbsp;-0.006&nbsp;&nbsp;&nbsp;&nbsp;0.022&nbsp;&nbsp;&nbsp;0.021&nbsp;&nbsp;&nbsp;0.000&nbsp;&nbsp;-0.002&nbsp;&nbsp; (0.020)&nbsp;&nbsp;&nbsp;(0.018)&nbsp;&nbsp;&nbsp;(0.024)&nbsp;&nbsp;(0.025)&nbsp;&nbsp;(0.024)&nbsp;(0.024)&nbsp; Foreign Born-0.704&nbsp;&nbsp;&nbsp;&nbsp;-0.151&nbsp;&nbsp;&nbsp;&nbsp;0.403&nbsp;&nbsp;&nbsp;0.358&nbsp;&nbsp;&nbsp;0.165&nbsp;&nbsp;0.132&nbsp;&nbsp; (0.852)&nbsp;&nbsp;&nbsp;(0.588)&nbsp;&nbsp;&nbsp;(0.752)&nbsp;&nbsp;(0.629)&nbsp;&nbsp;(0.717)&nbsp;(0.577)&nbsp; Male0.227&nbsp;&nbsp;&nbsp;&nbsp;0.191&nbsp;&nbsp;&nbsp;&nbsp;0.441&nbsp;&nbsp;&nbsp;0.352&nbsp;&nbsp;&nbsp;0.481&nbsp;&nbsp;0.340&nbsp;&nbsp; (0.495)&nbsp;&nbsp;&nbsp;(0.488)&nbsp;&nbsp;&nbsp;(0.565)&nbsp;&nbsp;(0.557)&nbsp;&nbsp;(0.584)&nbsp;(0.546)&nbsp; Children Present-0.166&nbsp;&nbsp;&nbsp;&nbsp;-0.160&nbsp;&nbsp;&nbsp;&nbsp;-0.370&nbsp;&nbsp;&nbsp;-0.405&nbsp;&nbsp;&nbsp;-1.762 *-1.491 * (0.686)&nbsp;&nbsp;&nbsp;(0.649)&nbsp;&nbsp;&nbsp;(0.618)&nbsp;&nbsp;(0.603)&nbsp;&nbsp;(0.686)&nbsp;(0.616)&nbsp; Married0.297&nbsp;&nbsp;&nbsp;&nbsp;0.228&nbsp;&nbsp;&nbsp;&nbsp;0.708&nbsp;&nbsp;&nbsp;0.852&nbsp;&nbsp;&nbsp;0.833&nbsp;&nbsp;0.494&nbsp;&nbsp; (0.535)&nbsp;&nbsp;&nbsp;(0.506)&nbsp;&nbsp;&nbsp;(0.676)&nbsp;&nbsp;(0.636)&nbsp;&nbsp;(0.581)&nbsp;(0.607)&nbsp; Socioeconomic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;H.S.-0.137&nbsp;&nbsp;&nbsp;&nbsp;-0.284&nbsp;&nbsp;&nbsp;&nbsp;-5.135 **-4.388 **-0.850&nbsp;&nbsp;-0.553&nbsp;&nbsp; (1.878)&nbsp;&nbsp;&nbsp;(1.710)&nbsp;&nbsp;&nbsp;(1.952)&nbsp;&nbsp;(1.616)&nbsp;&nbsp;(1.669)&nbsp;(1.489)&nbsp; Some college, no B.A.-2.514 **&nbsp;-2.451 **&nbsp;-0.987&nbsp;&nbsp;&nbsp;-0.730&nbsp;&nbsp;&nbsp;1.453&nbsp;&nbsp;1.422&nbsp;&nbsp; (0.868)&nbsp;&nbsp;&nbsp;(0.846)&nbsp;&nbsp;&nbsp;(1.390)&nbsp;&nbsp;(1.434)&nbsp;&nbsp;(1.202)&nbsp;(1.224)&nbsp; B.A.-1.881 *&nbsp;&nbsp;-1.825 *&nbsp;&nbsp;-1.000&nbsp;&nbsp;&nbsp;-0.835&nbsp;&nbsp;&nbsp;0.395&nbsp;&nbsp;0.196&nbsp;&nbsp; (0.927)&nbsp;&nbsp;&nbsp;(0.867)&nbsp;&nbsp;&nbsp;(1.289)&nbsp;&nbsp;(1.201)&nbsp;&nbsp;(1.083)&nbsp;(0.957)&nbsp; M.A.+-3.035 ***-2.955 ***-1.459&nbsp;&nbsp;&nbsp;-1.237&nbsp;&nbsp;&nbsp;0.433&nbsp;&nbsp;0.432&nbsp;&nbsp; (0.867)&nbsp;&nbsp;&nbsp;(0.818)&nbsp;&nbsp;&nbsp;(1.165)&nbsp;&nbsp;(1.098)&nbsp;&nbsp;(1.035)&nbsp;(0.909)&nbsp; Neighborhood perceptions&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Home owner0.349&nbsp;&nbsp;&nbsp;&nbsp;0.357&nbsp;&nbsp;&nbsp;&nbsp;-0.527&nbsp;&nbsp;&nbsp;-0.361&nbsp;&nbsp;&nbsp;1.147&nbsp;&nbsp;0.968&nbsp;&nbsp; (0.670)&nbsp;&nbsp;&nbsp;(0.655)&nbsp;&nbsp;&nbsp;(0.817)&nbsp;&nbsp;(0.756)&nbsp;&nbsp;(0.707)&nbsp;(0.700)&nbsp; Years in neighborhood0.004&nbsp;&nbsp;&nbsp;&nbsp;0.004&nbsp;&nbsp;&nbsp;&nbsp;-0.047&nbsp;&nbsp;&nbsp;-0.045&nbsp;&nbsp;&nbsp;-0.026&nbsp;&nbsp;-0.025&nbsp;&nbsp; (0.029)&nbsp;&nbsp;&nbsp;(0.028)&nbsp;&nbsp;&nbsp;(0.031)&nbsp;&nbsp;(0.031)&nbsp;&nbsp;(0.034)&nbsp;(0.034)&nbsp; 10-50 blocks0.765&nbsp;&nbsp;&nbsp;&nbsp;0.778&nbsp;&nbsp;&nbsp;&nbsp;1.653 *&nbsp;1.505 *&nbsp;1.368 *1.403 * (0.653)&nbsp;&nbsp;&nbsp;(0.602)&nbsp;&nbsp;&nbsp;(0.672)&nbsp;&nbsp;(0.641)&nbsp;&nbsp;(0.693)&nbsp;(0.611)&nbsp; &gt;50 blocks1.365&nbsp;&nbsp;&nbsp;&nbsp;1.493&nbsp;&nbsp;&nbsp;&nbsp;0.168&nbsp;&nbsp;&nbsp;-0.061&nbsp;&nbsp;&nbsp;-1.376&nbsp;&nbsp;-1.424&nbsp;&nbsp; (1.167)&nbsp;&nbsp;&nbsp;(1.178)&nbsp;&nbsp;&nbsp;(1.012)&nbsp;&nbsp;(1.065)&nbsp;&nbsp;(1.932)&nbsp;(1.903)&nbsp; Tract fixed effectsX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N 227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 227&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC243.238&nbsp;&nbsp;&nbsp;&nbsp;239.493&nbsp;&nbsp;&nbsp;&nbsp;204.225&nbsp;&nbsp;&nbsp;200.868&nbsp;&nbsp;&nbsp;225.520&nbsp;&nbsp;227.064&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. The disparate intercepts across tertiles in Table 8.2 cause concern about the potential for satisfaction to vary substantially by white population change. The large intercepts are not caused by the race of the respondent, but by respondent education. Table 8.7 shows that 90.5 percent of residents with high school degrees were satisfied living in neighborhoods with the largest white declines. Satisfaction was substantially higher among high school graduates than all other groups (range 14.5-37.3 percentage points). Since high school graduates represented the reference category, the intercept in the parameter estimates with data from the first tertile of racial change was extremely high. ## Warnings issued because of missingness on educational attainment leads ## subsets to be different across tertiles educdfs &lt;- list( subset(dcas16svy, educ==&quot;H.S.&quot;), subset(dcas16svy, educ==&quot;&lt;H.S.&quot;), subset(dcas16svy, educ==&quot;Some college, no B.A.&quot;), subset(dcas16svy, educ==&quot;B.A.&quot;), subset(dcas16svy, educ==&quot;M.A.+&quot;) ) ## Warning in subset.svyimputationList(dcas16svy, educ == &quot;H.S.&quot;): subset differed ## between imputations ## Warning in subset.svyimputationList(dcas16svy, educ == &quot;Some college, no B.A.&quot;): ## subset differed between imputations ## Warning in subset.svyimputationList(dcas16svy, educ == &quot;B.A.&quot;): subset differed ## between imputations ## Warning in subset.svyimputationList(dcas16svy, educ == &quot;M.A.+&quot;): subset differed ## between imputations eductert &lt;- lapply(educdfs, function(df){ res &lt;- with(df, svyby(~satisfied, ~educ + chgtert, svymean)) %&gt;% MIcombine() n &lt;- nrow(df$designs$imp1) list(Percent=coef(res)*100) }) %&gt;% bind_rows() %&gt;% mutate( Education = rep(levels(dcas16$educ), each = 3), tertile = rep(1:3, 5) ) eductert_tbl &lt;- eductert %&gt;% pivot_wider(id_cols = &quot;Education&quot;, names_from = &quot;tertile&quot;, values_from = &quot;Percent&quot;) %&gt;% as_huxtable() %&gt;% insert_row(c(&quot;&quot;, &quot;Tertile of White Change&quot;, &quot;&quot; ,&quot;&quot;)) %&gt;% set_align(1, everywhere, &quot;center&quot;) %&gt;% merge_across(1, 2:4) %&gt;% set_bold(1:2, everywhere, TRUE) %&gt;% set_bottom_border(c(2, nrow(.)), everywhere, TRUE) %&gt;% set_caption(paste( &quot;Mean percent of residents satisfied by educational attainment&quot;, &quot;in each tertile of white population change&quot;)) %&gt;% set_label(&quot;tab:eductert&quot;) eductert_tbl Table 8.7: Mean percent of residents satisfied by educational attainment in each tertile of white population change Tertile of White Change Education123 H.S.85.685.954.4 &lt;H.S.96.742.749.3 Some college, no B.A.56.477.387.7 B.A.76.876.176.2 M.A.+52.465.674.8 8.2.3 Summary of within-neighborhood robustness analyses While the analyses above cannot definitively reject selection effects, they mitigate concerns that selection effects are responsible for finding shared satisfaction among residents in multiracial neighborhoods. Among whites—the group that previous research suggests would be the most likely to be affected by integration—the inclusion of the variable measuring length of residence did not improve the fit of the model. About half of white residents moved into multiracial neighborhoods in the past 10 years. They were not more satisfied than whites who moved into multiracial neighborhoods 20, 30, or 40 years prior. Although the data cannot disprove the exit of dissatisfied white residents, the results provide evidence that the share of satisfied long-term white residents are similar to white newcomers. Evidence against selection effects was further bolstered by the fact that interracial differences in satifaction were not systematically related to white losses in multiracial neighborhoods. Whites were not less likely than other groups to be satisfied in neighborhoods that lost more whites. Together, these findings provide some assurance that selection effects are not solely responsible for shared satisfaction. Further data that measures satisfaction among people over time would, of course, provide data to answer the question. Even without these data, however, these results provide evidence of shared satisfaction among current residents, regardless of how they ended up living in multiracial neighborhoods. 8.3 Between Neighborhood Robustness Analysis I also conducted two supplemental analyses to confirm the plausibility of the findings in the comparative analysis. The comparative analysis examined satisfaction levels, by race, between residents of multiracial neighborhoods and residents of DC-area neighborhoods generally. The findings reported in the article showed that a larger proportion of whites were satisfied living in the DC area neighborhoods relative to whites living in multiracial nieghborhoods while satisfaction levels were similar for non-white racial groups. I first analyzed whether neighborhood racial diversity predicted satisfaction among the DCAS 2018 sample and what effect a changing white population had on residents in both samples. 8.3.1 Satisfaction in DC area by neighborhood entropy A different way to approach the between-neighborhood analysis reported in Figure 3 of the manuscript is to analyze the influence of racial composition on the sample that represents all DC-area residents using the DCAS 2018 data. The DCAS 2018 data, which represented residents in the entire DC area, offered an opportunity to assess the influence of multiracial diversity on satisfaction across the DC area. The between neighborhood analysis showed: satisfaction among white residents of multiracial neighborhoods is lower than satisfaction among white residents in general; and satisfaction does not differ between residents of multiracial and other neighborhoods among Black, Latinx, and Asian residents in the DC area. I use entropy to measure racial integration. Entropy reaches its maximum when each group makes up an equal share of residents in a neighborhood. Entropy offers a useful measure of multiracial diversity, however it does not account for differences between racial compositions at the same level of entropy (an all-white and all-Black neighborhood would, for example, both have entropy scores of zero). An alternative would be to categorize neighborhoods by presence of racial groups. Unfortunately sample sizes within different categories of racial composition do not allow me to meaningfully compare neighborhoods by composition. In addition to approaching the comparitive satisfaction differently, the analysis allowed me to ascertain the validity of the internal satisfaction associations found in the manuscript (i.e., Tables 5 &amp; 6 and Figure 2 in the manuscript). ## Warnings are suppressed ## Recenter entropy at mean level in DCAS 2016 neighborhoods dcas16_mean_H &lt;- mean(sampled_nhoods$H, na.rm=TRUE) dcarea_sigma_H &lt;- sd(dcarea$H, na.rm=TRUE) dcas18svy &lt;- dcas18svy %&gt;% update(Hc = (H - dcas16_mean_H)/dcarea_sigma_H) ## Define models and estimate parameters m5bn &lt;- paste(m3bn, &quot;+ Hc&quot;) m5bn_ixn &lt;- paste(m3bn, &quot;+ Hc*raceeth&quot;) m518 &lt;- with(dcas18svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m5bn)), family=binomial) ) m518_ixn &lt;- with(dcas18svy, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m5bn_ixn)), family=binomial) ) I centered entropy around the mean value of neighborhood entropy among DCAS 2016 respondents (H=1.27 out of a maximum of 1.39) and rescaled the variable so that values equal standard deviations based on all DC-area neighborhoods. Centering around the mean neighborhood included in the DCAS 2016 value allowed the intercept of the model to equal the average exposure used to predict values in Figure 3. I estimated two models, one that included entropy as an independent variable and a second that included interactions between entropy and respondent race. ## Calculate average entropy exposure among whites in DC area dcarea &lt;- dcarea %&gt;% mutate(nhwwgt = nhw15/sum(nhw15)) nhwH &lt;- sum(dcarea$H * dcarea$nhwwgt, na.rm=TRUE) nhwHc &lt;- nhwH - dcas16_mean_H nhwHsd &lt;- nhwHc / dcarea_sigma_H ## Calculate total influence of entropy on satisfaction for non-white groups m518_ixnc &lt;- MIcombine_aic(m518_ixn) entropy_satisfaction &lt;- function( r, desmat = NULL, coefs = NULL ) { if(is.null(coefs)) coefs &lt;- c(&#39;Hc&#39;, paste0(&#39;raceeth&#39;, r, &#39;:Hc&#39;)) if(is.null(desmat)) desmat &lt;- desmat &lt;- rep(1, length(coefs)) beta_r &lt;- coef(m518_ixnc)[coefs] yhat_r &lt;- t(desmat) %*% beta_r se_r &lt;- sqrt(t(desmat %*% vcov(m518_ixnc)[coefs, coefs] %*% desmat)) p_r &lt;- pt(yhat_r / se_r, df = m518[[1]]$df.residual) ci_r &lt;- c(yhat_r - 1.96*se_r, yhat_r + 1.96*se_r) %&gt;% sapply(plogis) return(list(yhat=yhat_r, se=se_r, pval = p_r, ci=ci_r)) } nhw_quad &lt;- entropy_satisfaction(&#39;white&#39;, coefs=c(1), desmat = c(1)) nhw_avg &lt;- entropy_satisfaction(&#39;white&#39;, coefs=c(&#39;(Intercept)&#39;, &#39;Hc&#39;), desmat = c(1, nhwHsd)) entfx &lt;- sapply(racelevs[2:4], entropy_satisfaction, desmat = c(-1, -1)) The estimated values of both models can be found in Table 8.9. The model that includes the interaction between the race of resident with neighborhood entropy is consistent with the findings reported in Figure 3. At the mean level of entropy in multiracial neighborhoods, Model (2) predicts that 82 percent of white residents would be satisfied (95% confidence interval: [70, 90]), while 88 percent of white residents with the average white exposure in the DC area would be satisfied (95% confidence interval: [82, 92]). The respective corresponding values of white satisfaction reported in Figure 3 were 70 and 86 percent. The association of entropy on satisfaction among whites did not have an association statistically distinguishable from the null, despite the point estimate being relatively large. Table 8.8: Table 8.9: Logistic regression coefficients and standard errors predicted of models estimating neighborhood satisfaction among DC-area residents including entropy index (1)(2) (Intercept)1.984 ***1.506 *** (0.275)&nbsp;&nbsp;&nbsp;(0.340)&nbsp;&nbsp;&nbsp; Asian-0.588&nbsp;&nbsp;&nbsp;&nbsp;-0.586&nbsp;&nbsp;&nbsp;&nbsp; (0.498)&nbsp;&nbsp;&nbsp;(0.644)&nbsp;&nbsp;&nbsp; Black-0.876 **&nbsp;-0.095&nbsp;&nbsp;&nbsp;&nbsp; (0.302)&nbsp;&nbsp;&nbsp;(0.473)&nbsp;&nbsp;&nbsp; Latinx-0.761&nbsp;&nbsp;&nbsp;&nbsp;-0.031&nbsp;&nbsp;&nbsp;&nbsp; (0.475)&nbsp;&nbsp;&nbsp;(0.608)&nbsp;&nbsp;&nbsp; Age0.003&nbsp;&nbsp;&nbsp;&nbsp;0.004&nbsp;&nbsp;&nbsp;&nbsp; (0.009)&nbsp;&nbsp;&nbsp;(0.009)&nbsp;&nbsp;&nbsp; Foreign Born0.182&nbsp;&nbsp;&nbsp;&nbsp;0.053&nbsp;&nbsp;&nbsp;&nbsp; (0.375)&nbsp;&nbsp;&nbsp;(0.387)&nbsp;&nbsp;&nbsp; Male-0.303&nbsp;&nbsp;&nbsp;&nbsp;-0.291&nbsp;&nbsp;&nbsp;&nbsp; (0.254)&nbsp;&nbsp;&nbsp;(0.250)&nbsp;&nbsp;&nbsp; Children Present0.059&nbsp;&nbsp;&nbsp;&nbsp;0.066&nbsp;&nbsp;&nbsp;&nbsp; (0.310)&nbsp;&nbsp;&nbsp;(0.306)&nbsp;&nbsp;&nbsp; Married0.586 *&nbsp;&nbsp;0.590 *&nbsp;&nbsp; (0.291)&nbsp;&nbsp;&nbsp;(0.291)&nbsp;&nbsp;&nbsp; &lt;H.S.0.732&nbsp;&nbsp;&nbsp;&nbsp;0.752&nbsp;&nbsp;&nbsp;&nbsp; (0.633)&nbsp;&nbsp;&nbsp;(0.636)&nbsp;&nbsp;&nbsp; Some college, no B.A.-0.038&nbsp;&nbsp;&nbsp;&nbsp;-0.047&nbsp;&nbsp;&nbsp;&nbsp; (0.408)&nbsp;&nbsp;&nbsp;(0.393)&nbsp;&nbsp;&nbsp; B.A.0.079&nbsp;&nbsp;&nbsp;&nbsp;0.074&nbsp;&nbsp;&nbsp;&nbsp; (0.418)&nbsp;&nbsp;&nbsp;(0.390)&nbsp;&nbsp;&nbsp; M.A.+0.233&nbsp;&nbsp;&nbsp;&nbsp;0.258&nbsp;&nbsp;&nbsp;&nbsp; (0.394)&nbsp;&nbsp;&nbsp;(0.393)&nbsp;&nbsp;&nbsp; Home owner0.481&nbsp;&nbsp;&nbsp;&nbsp;0.375&nbsp;&nbsp;&nbsp;&nbsp; (0.284)&nbsp;&nbsp;&nbsp;(0.273)&nbsp;&nbsp;&nbsp; Years in neighborhood-0.002&nbsp;&nbsp;&nbsp;&nbsp;-0.001&nbsp;&nbsp;&nbsp;&nbsp; (0.012)&nbsp;&nbsp;&nbsp;(0.012)&nbsp;&nbsp;&nbsp; 10-50 blocks-0.076&nbsp;&nbsp;&nbsp;&nbsp;-0.132&nbsp;&nbsp;&nbsp;&nbsp; (0.278)&nbsp;&nbsp;&nbsp;(0.278)&nbsp;&nbsp;&nbsp; &gt;50 blocks-1.185 *&nbsp;&nbsp;-1.268 *&nbsp;&nbsp; (0.591)&nbsp;&nbsp;&nbsp;(0.571)&nbsp;&nbsp;&nbsp; Entropy 0.050&nbsp;&nbsp;&nbsp;&nbsp;-0.488&nbsp;&nbsp;&nbsp;&nbsp; (0.133)&nbsp;&nbsp;&nbsp;(0.323)&nbsp;&nbsp;&nbsp; Entropy x Asian&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.348&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.667)&nbsp;&nbsp;&nbsp; Entropy x Black&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.725 *&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.364)&nbsp;&nbsp;&nbsp; Entropy x Latinx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.887&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.535)&nbsp;&nbsp;&nbsp; N 989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 989&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC904.407&nbsp;&nbsp;&nbsp;&nbsp;894.090&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Entropy had almost no influence on the satisfaction expressed by Blacks and Latinos. A one standard deviation decrease in entropy only reduced the odds of satisfaction among Black residents 0.79 (p\\(\\approx\\) 0.07) times and among Latinx residents 0.67 (p\\(\\approx\\) 0.17) times. Asian residents appeared to be more satisfied in less diverse neighborhoods; the odds of an Asian resident being satisfied were 2.31 times higher for each standard deviation decrease in entropy and were marginally significant (p\\(\\approx\\) 0.92). Finally, Model (1) shows that white DC-area residents were more likely to be satisfied living in their neighborhoods than Asian, Black, and Latinx residents. The coefficients for Asian, Black, and Latinx respondents were negative in the model, though the difference from white residents was only statistically significant for Black residents despite relatively large coefficients for Asian and Latinx residents. Controlling for the interaction of race by entropy almost eliminated differences between whites and both Black and Latinx residents when entropy equaled the mean level found in multiracial neighborhoods. In summary, this supplemental analysis shows: that whites and Asians are less satisfied in multiracial neighborhoods with some possibility that the difference reflects a statistical artifact (roughly consistent with Figure 3), and that satisfaction did not differ by level of neighborhood diversity among Black and Latino residents (consistent with Figure 3). 8.3.2 Differences in white population change between multiracial and other neighborhoods Figure 8.5: Distribution of logged ratio of white population, 2015 to 2000 A second analysis assessed the influence of changing white population on satisfaction among residents of the DC area. Using the same measure that I used above (the logged ratio of the white populations in 2015 to those in 2000), I examined the distribution of changes respondents in the DCAS 2016 experienced compared to those that the DCAS 2018 experienced. Figure 8.5 plots these two distributions and Table 8.10 reports descriptive statistics of the changes. Table 8.10: Descriptive statistics of logged white change, 2016 and 2018 DCAS respondents Year Min. 1st Qu. Median Mean 3rd Qu. Max. 2016 -1.547431 -0.4682503 -0.249756349 -0.1220045 0.04029554 2.534387 2018 -2.738309 -0.3209064 -0.005275868 0.1461065 0.28826356 6.917830 One can see from both Figure 8.5 and Table 8.10 that respondents to the DCAS 2018 live in neighborhoods that experienced a much larger distribution of change than the respondents to the DCAS 2016. Ignoring the one outlying neighborhood where the logged change ratio equaled almost seven, the standard deviation of logged white change among DCAS 2018 respondents was 0.82 while the standard deviation among DCAS 2016 residents was 0.64.4 ## Warnings are suppressed ## Create datasets that remove impossible values of lntotchg dcas16svyln &lt;- subset(dcas16svy, !is.infinite(lntotchg), lntotchg &lt; 6) dcas18svyln &lt;- subset(dcas18svy, !is.infinite(lntotchg), lntotchg &lt; 6) mean16 &lt;- with(dcas16svyln, svymean(~lntotchg)) %&gt;% MIcombine() %&gt;% coef() var16 &lt;- with(dcas16svyln, svyvar(~lntotchg)) %&gt;% MIcombine() %&gt;% coef() dcas16svyln &lt;- update(dcas16svyln, whiterat = (lntotchg - mean16)/sqrt(var16)) dcas18svyln &lt;- update(dcas18svyln, whiterat = (lntotchg - mean16)/sqrt(var16)) ## Estimate models of satisfaction with interactions by white change m6bn &lt;- paste(m3bn, &quot;+ race.pnhw + whiterat&quot;) m7bn &lt;- paste(m3bn, &quot;+ race.pnhw + whiterat*raceeth&quot;) m616 &lt;- with(dcas16svyln, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m3bn)), family=binomial) ) m716 &lt;- with(dcas16svyln, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m7bn)), family=binomial) ) m618 &lt;- with(dcas18svyln, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m6bn)), family=binomial) ) m718 &lt;- with(dcas18svyln, svyglm( as.formula(paste(&#39;satisfied ~&#39;, m7bn)), family=binomial) ) ## Calculate predicted satisfaction at -1 s.d. of white change sat1sig &lt;- plogis( diff(coef(MIcombine(m616))[c(&#39;whiterat&#39;, &#39;(Intercept)&#39;)])) ## Calculate exposure to white loss among whites in DCAS 2018 mean18nhw &lt;- with(subset(dcas18svyln, raceeth==&quot;white&quot;), svymean(~lntotchg)) %&gt;% MIcombine() %&gt;% coef() var18nhw &lt;- with(subset(dcas18svyln, raceeth==&quot;white&quot;), svyvar(~lntotchg)) %&gt;% MIcombine() %&gt;% coef() I examined whether the white population change from 2000 to 2015 affected the results reported in Figure 3. I added the logged change ratio to models for both respondents representing residents of multiracial neighborhoods (DCAS 2016 respondents) and those representing residents of the entire DC area (DCAS 2018 respondents). I centered the variable around the mean change experienced by DCAS 2018 respondents and scaled the variable by the standard deviation of the DCAS 2018 respondents. I estimated two models for each set of data, one each with and without interactions with race. The interactions would account for the different sensitivity white residents have to the loss of white neighbors. The parameter estimates and standard errors are reported in Table 8.12. The first two columns of Table 8.12 report parameter estimates using data representing residents of multiracial neighborhoods. The results in the first column show that residents were more satisfied in neighborhoods that gained more whites—or, inversely, lost fewer whites. The odds of being satisfied among residents of multiracial neighborhoods where white change was one standard deviation above the DC-area mean were NA times higher than residents of multiracial neighborhoods that matched the DC-area-wide mean. Consistent with the findings reported in Table 8.2 above showing no racial differences across tertiles of white population change, I found that the data fit the model with an interaction worse than the model without. The results imply that white growth (or the absence of white loss) increases satisfaction, but it does so equally across all racial groups. Table 8.11: Table 8.12: Logistic regression coefficients and standard errors predicted of models estimating neighborhood satisfaction among residents of multiracial neighborhoods and the DC-area, including logged change ratio of white population MultiracialDC area (1)(2)(1)(2) (Intercept)0.829 ***0.401&nbsp;&nbsp;&nbsp;&nbsp;0.425&nbsp;&nbsp;&nbsp;&nbsp;0.473&nbsp;&nbsp;&nbsp;&nbsp; (0.227)&nbsp;&nbsp;&nbsp;(0.576)&nbsp;&nbsp;&nbsp;(0.355)&nbsp;&nbsp;&nbsp;(0.372)&nbsp;&nbsp;&nbsp; Asian-0.014&nbsp;&nbsp;&nbsp;&nbsp;0.061&nbsp;&nbsp;&nbsp;&nbsp;-0.338&nbsp;&nbsp;&nbsp;&nbsp;-0.489&nbsp;&nbsp;&nbsp;&nbsp; (0.390)&nbsp;&nbsp;&nbsp;(0.392)&nbsp;&nbsp;&nbsp;(0.526)&nbsp;&nbsp;&nbsp;(0.540)&nbsp;&nbsp;&nbsp; Black-0.100&nbsp;&nbsp;&nbsp;&nbsp;0.099&nbsp;&nbsp;&nbsp;&nbsp;0.127&nbsp;&nbsp;&nbsp;&nbsp;0.099&nbsp;&nbsp;&nbsp;&nbsp; (0.371)&nbsp;&nbsp;&nbsp;(0.410)&nbsp;&nbsp;&nbsp;(0.367)&nbsp;&nbsp;&nbsp;(0.385)&nbsp;&nbsp;&nbsp; Latinx0.143&nbsp;&nbsp;&nbsp;&nbsp;0.236&nbsp;&nbsp;&nbsp;&nbsp;-0.223&nbsp;&nbsp;&nbsp;&nbsp;-0.250&nbsp;&nbsp;&nbsp;&nbsp; (0.403)&nbsp;&nbsp;&nbsp;(0.403)&nbsp;&nbsp;&nbsp;(0.493)&nbsp;&nbsp;&nbsp;(0.500)&nbsp;&nbsp;&nbsp; Age0.002&nbsp;&nbsp;&nbsp;&nbsp;0.001&nbsp;&nbsp;&nbsp;&nbsp;-0.003&nbsp;&nbsp;&nbsp;&nbsp;-0.005&nbsp;&nbsp;&nbsp;&nbsp; (0.009)&nbsp;&nbsp;&nbsp;(0.009)&nbsp;&nbsp;&nbsp;(0.009)&nbsp;&nbsp;&nbsp;(0.009)&nbsp;&nbsp;&nbsp; Foreign Born0.046&nbsp;&nbsp;&nbsp;&nbsp;0.045&nbsp;&nbsp;&nbsp;&nbsp;-0.065&nbsp;&nbsp;&nbsp;&nbsp;-0.117&nbsp;&nbsp;&nbsp;&nbsp; (0.335)&nbsp;&nbsp;&nbsp;(0.337)&nbsp;&nbsp;&nbsp;(0.402)&nbsp;&nbsp;&nbsp;(0.393)&nbsp;&nbsp;&nbsp; Male0.006&nbsp;&nbsp;&nbsp;&nbsp;0.037&nbsp;&nbsp;&nbsp;&nbsp;-0.207&nbsp;&nbsp;&nbsp;&nbsp;-0.102&nbsp;&nbsp;&nbsp;&nbsp; (0.260)&nbsp;&nbsp;&nbsp;(0.259)&nbsp;&nbsp;&nbsp;(0.270)&nbsp;&nbsp;&nbsp;(0.270)&nbsp;&nbsp;&nbsp; Children Present-0.338&nbsp;&nbsp;&nbsp;&nbsp;-0.392&nbsp;&nbsp;&nbsp;&nbsp;0.241&nbsp;&nbsp;&nbsp;&nbsp;0.252&nbsp;&nbsp;&nbsp;&nbsp; (0.281)&nbsp;&nbsp;&nbsp;(0.287)&nbsp;&nbsp;&nbsp;(0.343)&nbsp;&nbsp;&nbsp;(0.345)&nbsp;&nbsp;&nbsp; Married0.158&nbsp;&nbsp;&nbsp;&nbsp;0.158&nbsp;&nbsp;&nbsp;&nbsp;0.553&nbsp;&nbsp;&nbsp;&nbsp;0.542&nbsp;&nbsp;&nbsp;&nbsp; (0.273)&nbsp;&nbsp;&nbsp;(0.279)&nbsp;&nbsp;&nbsp;(0.305)&nbsp;&nbsp;&nbsp;(0.301)&nbsp;&nbsp;&nbsp; &lt;H.S.-0.815&nbsp;&nbsp;&nbsp;&nbsp;-0.870&nbsp;&nbsp;&nbsp;&nbsp;0.957&nbsp;&nbsp;&nbsp;&nbsp;1.049&nbsp;&nbsp;&nbsp;&nbsp; (0.686)&nbsp;&nbsp;&nbsp;(0.736)&nbsp;&nbsp;&nbsp;(0.651)&nbsp;&nbsp;&nbsp;(0.680)&nbsp;&nbsp;&nbsp; Some college, no B.A.-0.328&nbsp;&nbsp;&nbsp;&nbsp;-0.321&nbsp;&nbsp;&nbsp;&nbsp;-0.136&nbsp;&nbsp;&nbsp;&nbsp;-0.210&nbsp;&nbsp;&nbsp;&nbsp; (0.518)&nbsp;&nbsp;&nbsp;(0.572)&nbsp;&nbsp;&nbsp;(0.427)&nbsp;&nbsp;&nbsp;(0.450)&nbsp;&nbsp;&nbsp; B.A.-0.174&nbsp;&nbsp;&nbsp;&nbsp;-0.260&nbsp;&nbsp;&nbsp;&nbsp;-0.161&nbsp;&nbsp;&nbsp;&nbsp;-0.180&nbsp;&nbsp;&nbsp;&nbsp; (0.503)&nbsp;&nbsp;&nbsp;(0.573)&nbsp;&nbsp;&nbsp;(0.429)&nbsp;&nbsp;&nbsp;(0.435)&nbsp;&nbsp;&nbsp; M.A.+-0.721&nbsp;&nbsp;&nbsp;&nbsp;-0.807&nbsp;&nbsp;&nbsp;&nbsp;0.027&nbsp;&nbsp;&nbsp;&nbsp;-0.068&nbsp;&nbsp;&nbsp;&nbsp; (0.502)&nbsp;&nbsp;&nbsp;(0.562)&nbsp;&nbsp;&nbsp;(0.429)&nbsp;&nbsp;&nbsp;(0.448)&nbsp;&nbsp;&nbsp; Home owner0.449&nbsp;&nbsp;&nbsp;&nbsp;0.496&nbsp;&nbsp;&nbsp;&nbsp;0.407&nbsp;&nbsp;&nbsp;&nbsp;0.430&nbsp;&nbsp;&nbsp;&nbsp; (0.325)&nbsp;&nbsp;&nbsp;(0.334)&nbsp;&nbsp;&nbsp;(0.292)&nbsp;&nbsp;&nbsp;(0.299)&nbsp;&nbsp;&nbsp; Years in neighborhood-0.009&nbsp;&nbsp;&nbsp;&nbsp;-0.004&nbsp;&nbsp;&nbsp;&nbsp;0.005&nbsp;&nbsp;&nbsp;&nbsp;0.008&nbsp;&nbsp;&nbsp;&nbsp; (0.013)&nbsp;&nbsp;&nbsp;(0.014)&nbsp;&nbsp;&nbsp;(0.013)&nbsp;&nbsp;&nbsp;(0.012)&nbsp;&nbsp;&nbsp; 10-50 blocks0.983 ***1.021 ***-0.221&nbsp;&nbsp;&nbsp;&nbsp;-0.205&nbsp;&nbsp;&nbsp;&nbsp; (0.294)&nbsp;&nbsp;&nbsp;(0.301)&nbsp;&nbsp;&nbsp;(0.292)&nbsp;&nbsp;&nbsp;(0.298)&nbsp;&nbsp;&nbsp; &gt;50 blocks0.928&nbsp;&nbsp;&nbsp;&nbsp;0.962&nbsp;&nbsp;&nbsp;&nbsp;-1.613 **&nbsp;-1.708 **&nbsp; (0.556)&nbsp;&nbsp;&nbsp;(0.565)&nbsp;&nbsp;&nbsp;(0.597)&nbsp;&nbsp;&nbsp;(0.611)&nbsp;&nbsp;&nbsp; Percent white (2015)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.011&nbsp;&nbsp;&nbsp;&nbsp;0.032 ***0.032 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.014)&nbsp;&nbsp;&nbsp;(0.006)&nbsp;&nbsp;&nbsp;(0.006)&nbsp;&nbsp;&nbsp; Logged white change &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.417&nbsp;&nbsp;&nbsp;&nbsp;-0.009&nbsp;&nbsp;&nbsp;&nbsp;-0.019&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.221)&nbsp;&nbsp;&nbsp;(0.054)&nbsp;&nbsp;&nbsp;(0.066)&nbsp;&nbsp;&nbsp; Logged white change x Asian&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.309&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.479&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.272)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.503)&nbsp;&nbsp;&nbsp; Logged white change x Black&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.027&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.060&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.368)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.105)&nbsp;&nbsp;&nbsp; Logged white change x Latinx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.315&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.323)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.164)&nbsp;&nbsp;&nbsp; N 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 632&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 978&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 978&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AIC673.559&nbsp;&nbsp;&nbsp;&nbsp;671.342&nbsp;&nbsp;&nbsp;&nbsp;834.610&nbsp;&nbsp;&nbsp;&nbsp;828.047&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. The second two columns of Table 8.12 report parameter estimates using data representing all DC-area residents. The amount of what change that occurred in the neighborhood had little influence on satisfaction of residents, though in the case of residents from the entire DC-area the data fit the model with an interaction better. The fourth column shows that the influence of white population growth was higher for Asian and Latinx residents was higher than the influence on whites, though only the the association for Latinx residents could be distingushed from the null. 8.3.3 Summary of between-neighborhood robustness analysis The analyses of entropy among only DCAS 2018 respondents showed that satisfaction among White residents correlates with the racial diversity of neighborhoods. Satisfaction among other racial groups appeared be insensitive or less senstive than whites to the racial diversity of neighborhood residents. These results comport with the findings reported in Figure 3 that compared the results of the two surveys. The influence of white population change were different in multiracial neighborhoods than DC-area neighborhoods generall. Residents of multiracial neighborhoods, regardless of race, were more likely to be satisfied in neighborhoods where white populations had increased. This finding supports the notion of shared satisfaction across racial groups living in multiracial neighborhoods. Among neighborhoods in the DC area generally, Asian and Latinx were more likely satisfied than white and Black residents. The satisfaction of White and Black residents seemed unassociated with white population change. The differences between groups among neighborhoods in general do not contradict any of the conclusions of this paper, but do shed light on an area for further research. 8.4 Neighborhood Change Robustness Analysis 8.4.1 Multinomial Logistic Regression of Neighborhood Change Questions library(svrepmisc) dcas16svy &lt;- dcas16svy %&gt;% update( nhdchg = relevel(nhdchg, ref = &#39;Same&#39;) ) des &lt;- as.svrepdesign(dcas16svy$designs[[1]], type=&quot;bootstrap&quot; , replicates=1000) m3m_bet &lt;- svymultinom(as.formula(paste(&#39;nhdchg ~&#39;, m3)), design = des) ## # weights: 360 (238 variable) ## initial value 602.023714 ## iter 10 value 413.381031 ## iter 20 value 282.901179 ## iter 30 value 271.267348 ## iter 40 value 266.539374 ## iter 50 value 265.106679 ## iter 60 value 265.085714 ## iter 70 value 265.059265 ## iter 80 value 265.051431 ## iter 90 value 265.051017 ## final value 265.051008 ## converged ## # weights: 360 (238 variable) ## initial value 615.312199 ## iter 10 value 404.822860 ## iter 20 value 231.153994 ## iter 30 value 211.143723 ## iter 40 value 205.030800 ## iter 50 value 203.802135 ## iter 60 value 203.631196 ## iter 70 value 203.539442 ## iter 80 value 203.520448 ## iter 90 value 203.515537 ## iter 100 value 203.514236 ## final value 203.514236 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.403603 ## iter 10 value 377.470128 ## iter 20 value 198.647077 ## iter 30 value 182.021725 ## iter 40 value 179.997569 ## iter 50 value 179.548572 ## iter 60 value 179.246949 ## iter 70 value 179.199903 ## iter 80 value 179.197102 ## iter 90 value 179.188419 ## iter 100 value 179.183362 ## final value 179.183362 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.479298 ## iter 10 value 368.665897 ## iter 20 value 218.529086 ## iter 30 value 203.856971 ## iter 40 value 198.681605 ## iter 50 value 197.909703 ## iter 60 value 197.888254 ## iter 70 value 197.862456 ## iter 80 value 197.838385 ## iter 90 value 197.837454 ## final value 197.837410 ## converged ## # weights: 360 (238 variable) ## initial value 617.773200 ## iter 10 value 372.534598 ## iter 20 value 210.948308 ## iter 30 value 193.758946 ## iter 40 value 190.529547 ## iter 50 value 189.896275 ## iter 60 value 189.796187 ## iter 70 value 189.780060 ## iter 80 value 189.774566 ## iter 90 value 189.766253 ## iter 100 value 189.761963 ## final value 189.761963 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.788618 ## iter 10 value 351.400438 ## iter 20 value 194.887613 ## iter 30 value 180.145874 ## iter 40 value 176.695740 ## iter 50 value 176.254047 ## iter 60 value 176.169565 ## iter 70 value 176.125577 ## iter 80 value 176.123760 ## iter 90 value 176.123577 ## iter 90 value 176.123576 ## iter 90 value 176.123576 ## final value 176.123576 ## converged ## # weights: 360 (238 variable) ## initial value 619.167998 ## iter 10 value 372.491233 ## iter 20 value 199.774999 ## iter 30 value 183.646903 ## iter 40 value 181.341791 ## iter 50 value 180.558549 ## iter 60 value 180.365219 ## iter 70 value 180.317099 ## iter 80 value 180.313029 ## iter 90 value 180.309548 ## iter 100 value 180.309110 ## final value 180.309110 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 561.935462 ## iter 10 value 335.034676 ## iter 20 value 197.969634 ## iter 30 value 181.635505 ## iter 40 value 176.622693 ## iter 50 value 175.212803 ## iter 60 value 175.120643 ## iter 70 value 175.042888 ## iter 80 value 175.033656 ## iter 90 value 175.032929 ## final value 175.032853 ## converged ## # weights: 360 (238 variable) ## initial value 607.551382 ## iter 10 value 374.462131 ## iter 20 value 223.142481 ## iter 30 value 198.743476 ## iter 40 value 188.313849 ## iter 50 value 187.815595 ## iter 60 value 187.765941 ## iter 70 value 187.715715 ## iter 80 value 187.707801 ## iter 90 value 187.707184 ## final value 187.707094 ## converged ## # weights: 360 (238 variable) ## initial value 564.415469 ## iter 10 value 296.075305 ## iter 20 value 168.382247 ## iter 30 value 154.007071 ## iter 40 value 147.630299 ## iter 50 value 146.360435 ## iter 60 value 146.239426 ## iter 70 value 146.178433 ## iter 80 value 146.165265 ## iter 90 value 146.157149 ## iter 100 value 146.152756 ## final value 146.152756 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.729781 ## iter 10 value 416.016216 ## iter 20 value 222.234531 ## iter 30 value 205.848469 ## iter 40 value 198.848179 ## iter 50 value 197.305797 ## iter 60 value 197.241586 ## iter 70 value 197.208457 ## iter 80 value 197.191275 ## iter 90 value 197.190512 ## final value 197.190414 ## converged ## # weights: 360 (238 variable) ## initial value 579.870088 ## iter 10 value 290.334883 ## iter 20 value 175.934715 ## iter 30 value 161.134566 ## iter 40 value 156.673396 ## iter 50 value 155.949701 ## iter 60 value 155.890752 ## iter 70 value 155.845183 ## iter 80 value 155.829768 ## iter 90 value 155.827492 ## iter 100 value 155.827147 ## final value 155.827147 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 573.076818 ## iter 10 value 376.939662 ## iter 20 value 211.622997 ## iter 30 value 199.608821 ## iter 40 value 195.338033 ## iter 50 value 194.569309 ## iter 60 value 194.505766 ## iter 70 value 194.493573 ## iter 80 value 194.479494 ## iter 90 value 194.478116 ## iter 100 value 194.478029 ## final value 194.478029 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.406832 ## iter 10 value 327.982626 ## iter 20 value 199.221175 ## iter 30 value 182.742164 ## iter 40 value 177.244269 ## iter 50 value 175.939109 ## iter 60 value 175.879495 ## iter 70 value 175.832008 ## iter 80 value 175.822169 ## iter 90 value 175.821459 ## iter 100 value 175.821359 ## final value 175.821359 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 647.358280 ## iter 10 value 363.126180 ## iter 20 value 227.604315 ## iter 30 value 212.309479 ## iter 40 value 206.115311 ## iter 50 value 205.095870 ## iter 60 value 204.999999 ## iter 70 value 204.950013 ## iter 80 value 204.945407 ## iter 90 value 204.945148 ## final value 204.945133 ## converged ## # weights: 360 (238 variable) ## initial value 583.926604 ## iter 10 value 319.788019 ## iter 20 value 213.455537 ## iter 30 value 199.277518 ## iter 40 value 195.609036 ## iter 50 value 193.793668 ## iter 60 value 193.756955 ## iter 70 value 193.743792 ## iter 80 value 193.731439 ## iter 90 value 193.729916 ## final value 193.729806 ## converged ## # weights: 360 (238 variable) ## initial value 587.322085 ## iter 10 value 361.072587 ## iter 20 value 213.265844 ## iter 30 value 200.953260 ## iter 40 value 198.663809 ## iter 50 value 198.262293 ## iter 60 value 198.152983 ## iter 70 value 198.142363 ## iter 80 value 198.142236 ## iter 90 value 198.141564 ## final value 198.141527 ## converged ## # weights: 360 (238 variable) ## initial value 586.332784 ## iter 10 value 361.500506 ## iter 20 value 219.403865 ## iter 30 value 199.357504 ## iter 40 value 192.707508 ## iter 50 value 191.361406 ## iter 60 value 191.246475 ## iter 70 value 191.210175 ## iter 80 value 191.177591 ## iter 90 value 191.165921 ## iter 100 value 191.163577 ## final value 191.163577 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 573.371137 ## iter 10 value 372.974231 ## iter 20 value 188.226172 ## iter 30 value 174.297180 ## iter 40 value 171.378836 ## iter 50 value 170.463246 ## iter 60 value 170.408301 ## iter 70 value 170.350737 ## iter 80 value 170.341444 ## iter 90 value 170.340891 ## final value 170.340844 ## converged ## # weights: 360 (238 variable) ## initial value 597.524897 ## iter 10 value 414.836023 ## iter 20 value 241.694157 ## iter 30 value 229.488960 ## iter 40 value 226.462604 ## iter 50 value 224.819455 ## iter 60 value 224.757179 ## iter 70 value 224.722546 ## iter 80 value 224.711905 ## iter 90 value 224.711056 ## iter 100 value 224.710940 ## final value 224.710940 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.023945 ## iter 10 value 343.258727 ## iter 20 value 203.337745 ## iter 30 value 190.165278 ## iter 40 value 187.647656 ## iter 50 value 186.142336 ## iter 60 value 185.939104 ## iter 70 value 185.934938 ## iter 80 value 185.923844 ## iter 90 value 185.922055 ## iter 100 value 185.921926 ## final value 185.921926 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.197902 ## iter 10 value 343.189003 ## iter 20 value 211.314148 ## iter 30 value 196.967553 ## iter 40 value 190.636666 ## iter 50 value 188.979536 ## iter 60 value 188.809626 ## iter 70 value 188.740228 ## iter 80 value 188.705566 ## iter 90 value 188.702334 ## iter 100 value 188.701941 ## final value 188.701941 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 569.005691 ## iter 10 value 367.730630 ## iter 20 value 217.997913 ## iter 30 value 201.710358 ## iter 40 value 197.205184 ## iter 50 value 196.153925 ## iter 60 value 196.007488 ## iter 70 value 195.936763 ## iter 80 value 195.906761 ## iter 90 value 195.900301 ## iter 100 value 195.899128 ## final value 195.899128 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.228366 ## iter 10 value 402.058576 ## iter 20 value 215.844785 ## iter 30 value 199.066817 ## iter 40 value 191.425900 ## iter 50 value 188.107915 ## iter 60 value 187.967381 ## iter 70 value 187.891451 ## iter 80 value 187.859739 ## iter 90 value 187.858175 ## final value 187.858049 ## converged ## # weights: 360 (238 variable) ## initial value 623.187931 ## iter 10 value 373.550933 ## iter 20 value 218.378379 ## iter 30 value 198.411030 ## iter 40 value 189.190084 ## iter 50 value 187.363811 ## iter 60 value 187.259515 ## iter 70 value 187.233177 ## iter 80 value 187.229404 ## iter 90 value 187.229015 ## final value 187.228980 ## converged ## # weights: 360 (238 variable) ## initial value 588.303255 ## iter 10 value 386.921553 ## iter 20 value 212.572341 ## iter 30 value 196.386784 ## iter 40 value 189.943453 ## iter 50 value 189.156206 ## iter 60 value 189.037942 ## iter 70 value 188.973084 ## iter 80 value 188.960359 ## iter 90 value 188.959348 ## iter 100 value 188.959199 ## final value 188.959199 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.239368 ## iter 10 value 377.788062 ## iter 20 value 191.984774 ## iter 30 value 175.186483 ## iter 40 value 172.718725 ## iter 50 value 172.197024 ## iter 60 value 172.060306 ## iter 70 value 171.986241 ## iter 80 value 171.983523 ## final value 171.983518 ## converged ## # weights: 360 (238 variable) ## initial value 600.898955 ## iter 10 value 356.869909 ## iter 20 value 199.121444 ## iter 30 value 183.268684 ## iter 40 value 180.588907 ## iter 50 value 178.091441 ## iter 60 value 177.111586 ## iter 70 value 177.040825 ## iter 80 value 177.035265 ## iter 90 value 177.033080 ## iter 100 value 177.032137 ## final value 177.032137 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.163085 ## iter 10 value 393.803803 ## iter 20 value 229.944143 ## iter 30 value 211.413496 ## iter 40 value 208.005911 ## iter 50 value 207.697520 ## iter 60 value 207.672443 ## iter 70 value 207.640046 ## iter 80 value 207.622905 ## iter 90 value 207.621454 ## final value 207.621348 ## converged ## # weights: 360 (238 variable) ## initial value 609.192489 ## iter 10 value 339.956617 ## iter 20 value 201.493532 ## iter 30 value 184.674385 ## iter 40 value 179.054165 ## iter 50 value 176.703416 ## iter 60 value 176.452962 ## iter 70 value 176.391925 ## iter 80 value 176.370567 ## iter 90 value 176.352371 ## iter 100 value 176.348375 ## final value 176.348375 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.960861 ## iter 10 value 362.757264 ## iter 20 value 206.521110 ## iter 30 value 188.646876 ## iter 40 value 183.326935 ## iter 50 value 182.098810 ## iter 60 value 181.946961 ## iter 70 value 181.871292 ## iter 80 value 181.844805 ## iter 90 value 181.840653 ## iter 100 value 181.840193 ## final value 181.840193 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 629.203822 ## iter 10 value 366.765468 ## iter 20 value 209.605414 ## iter 30 value 194.891559 ## iter 40 value 191.205050 ## iter 50 value 190.425896 ## iter 60 value 190.352278 ## iter 70 value 190.337799 ## iter 80 value 190.303573 ## iter 90 value 190.298551 ## iter 100 value 190.297715 ## final value 190.297715 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.961321 ## iter 10 value 376.598634 ## iter 20 value 223.398156 ## iter 30 value 209.760294 ## iter 40 value 205.419179 ## iter 50 value 203.106639 ## iter 60 value 203.029186 ## iter 70 value 202.970146 ## iter 80 value 202.961363 ## iter 90 value 202.960959 ## final value 202.960904 ## converged ## # weights: 360 (238 variable) ## initial value 623.144755 ## iter 10 value 368.616789 ## iter 20 value 209.633019 ## iter 30 value 193.508789 ## iter 40 value 190.992019 ## iter 50 value 189.966351 ## iter 60 value 189.929339 ## iter 70 value 189.895923 ## iter 80 value 189.888016 ## iter 90 value 189.881384 ## iter 100 value 189.880630 ## final value 189.880630 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.736483 ## iter 10 value 335.270501 ## iter 20 value 215.204778 ## iter 30 value 202.953300 ## iter 40 value 198.063494 ## iter 50 value 197.241398 ## iter 60 value 197.139029 ## iter 70 value 197.072686 ## iter 80 value 197.064660 ## iter 90 value 197.064190 ## final value 197.064139 ## converged ## # weights: 360 (238 variable) ## initial value 585.408741 ## iter 10 value 360.679168 ## iter 20 value 212.524331 ## iter 30 value 200.835928 ## iter 40 value 195.872961 ## iter 50 value 195.104659 ## iter 60 value 195.048779 ## iter 70 value 194.999891 ## iter 80 value 194.989503 ## iter 90 value 194.988761 ## iter 100 value 194.988638 ## final value 194.988638 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 565.695133 ## iter 10 value 336.626102 ## iter 20 value 198.594058 ## iter 30 value 180.214198 ## iter 40 value 174.781198 ## iter 50 value 174.061969 ## iter 60 value 173.913312 ## iter 70 value 173.854980 ## iter 80 value 173.842160 ## iter 90 value 173.840925 ## iter 100 value 173.840818 ## final value 173.840818 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.583761 ## iter 10 value 426.167445 ## iter 20 value 245.581608 ## iter 30 value 223.683800 ## iter 40 value 215.879050 ## iter 50 value 215.013959 ## iter 60 value 214.891774 ## iter 70 value 214.823881 ## iter 80 value 214.811945 ## iter 90 value 214.808375 ## iter 100 value 214.802215 ## final value 214.802215 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.196298 ## iter 10 value 343.735569 ## iter 20 value 203.556336 ## iter 30 value 191.325760 ## iter 40 value 188.906102 ## iter 50 value 187.962168 ## iter 60 value 187.698650 ## iter 70 value 187.686890 ## iter 80 value 187.679930 ## iter 90 value 187.671047 ## iter 100 value 187.670639 ## final value 187.670639 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.023970 ## iter 10 value 374.365849 ## iter 20 value 198.424829 ## iter 30 value 184.054721 ## iter 40 value 179.904654 ## iter 50 value 177.398154 ## iter 60 value 177.221222 ## iter 70 value 177.171091 ## iter 80 value 177.143187 ## iter 90 value 177.139945 ## iter 100 value 177.139716 ## final value 177.139716 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.293079 ## iter 10 value 355.898269 ## iter 20 value 207.264655 ## iter 30 value 190.138165 ## iter 40 value 182.511738 ## iter 50 value 181.574583 ## iter 60 value 181.487068 ## iter 70 value 181.449687 ## iter 80 value 181.427032 ## iter 90 value 181.424717 ## iter 100 value 181.424475 ## final value 181.424475 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.049611 ## iter 10 value 383.446319 ## iter 20 value 217.362520 ## iter 30 value 197.384290 ## iter 40 value 191.793811 ## iter 50 value 190.900017 ## iter 60 value 190.814710 ## iter 70 value 190.761916 ## iter 80 value 190.759793 ## iter 90 value 190.759555 ## final value 190.759540 ## converged ## # weights: 360 (238 variable) ## initial value 594.766721 ## iter 10 value 335.946395 ## iter 20 value 193.867253 ## iter 30 value 181.806965 ## iter 40 value 179.312664 ## iter 50 value 178.018983 ## iter 60 value 177.847618 ## iter 70 value 177.833975 ## iter 80 value 177.817269 ## iter 90 value 177.815371 ## iter 100 value 177.815240 ## final value 177.815240 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.353022 ## iter 10 value 394.991573 ## iter 20 value 231.936555 ## iter 30 value 216.854786 ## iter 40 value 211.497894 ## iter 50 value 209.838057 ## iter 60 value 209.766538 ## iter 70 value 209.720770 ## iter 80 value 209.718581 ## final value 209.718434 ## converged ## # weights: 360 (238 variable) ## initial value 629.361363 ## iter 10 value 401.462363 ## iter 20 value 223.275369 ## iter 30 value 206.072771 ## iter 40 value 199.468924 ## iter 50 value 198.018383 ## iter 60 value 197.868075 ## iter 70 value 197.780585 ## iter 80 value 197.758375 ## iter 90 value 197.754735 ## iter 100 value 197.754363 ## final value 197.754363 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.814554 ## iter 10 value 378.157347 ## iter 20 value 204.291754 ## iter 30 value 191.730565 ## iter 40 value 186.605560 ## iter 50 value 184.861848 ## iter 60 value 184.710226 ## iter 70 value 184.651930 ## iter 80 value 184.617059 ## iter 90 value 184.615418 ## iter 100 value 184.615233 ## final value 184.615233 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.132819 ## iter 10 value 374.411287 ## iter 20 value 223.995626 ## iter 30 value 207.347774 ## iter 40 value 197.973193 ## iter 50 value 196.505004 ## iter 60 value 196.436330 ## iter 70 value 196.386421 ## iter 80 value 196.381276 ## iter 90 value 196.380789 ## final value 196.380732 ## converged ## # weights: 360 (238 variable) ## initial value 588.791259 ## iter 10 value 347.681909 ## iter 20 value 199.902834 ## iter 30 value 184.080162 ## iter 40 value 181.601043 ## iter 50 value 180.343403 ## iter 60 value 179.634358 ## iter 70 value 179.594539 ## iter 80 value 179.590232 ## iter 90 value 179.588261 ## iter 100 value 179.587973 ## final value 179.587973 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.160326 ## iter 10 value 338.841018 ## iter 20 value 201.251168 ## iter 30 value 181.995717 ## iter 40 value 174.870706 ## iter 50 value 173.270190 ## iter 60 value 173.105928 ## iter 70 value 173.034916 ## iter 80 value 173.032365 ## iter 90 value 173.030837 ## iter 100 value 173.030160 ## final value 173.030160 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.360592 ## iter 10 value 450.705704 ## iter 20 value 227.858893 ## iter 30 value 214.910291 ## iter 40 value 209.502498 ## iter 50 value 208.506102 ## iter 60 value 208.487745 ## iter 70 value 208.456703 ## iter 80 value 208.454481 ## final value 208.454340 ## converged ## # weights: 360 (238 variable) ## initial value 589.521836 ## iter 10 value 347.143463 ## iter 20 value 212.699417 ## iter 30 value 199.703837 ## iter 40 value 191.086500 ## iter 50 value 190.030319 ## iter 60 value 189.967260 ## iter 70 value 189.908428 ## iter 80 value 189.899228 ## iter 90 value 189.898462 ## final value 189.898384 ## converged ## # weights: 360 (238 variable) ## initial value 573.349274 ## iter 10 value 356.144890 ## iter 20 value 197.692443 ## iter 30 value 182.218006 ## iter 40 value 178.307935 ## iter 50 value 176.117968 ## iter 60 value 176.049713 ## iter 70 value 175.999746 ## iter 80 value 175.992319 ## iter 90 value 175.991262 ## iter 100 value 175.990513 ## final value 175.990513 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.675357 ## iter 10 value 388.015668 ## iter 20 value 229.115630 ## iter 30 value 209.693234 ## iter 40 value 202.159703 ## iter 50 value 200.980039 ## iter 60 value 200.883349 ## iter 70 value 200.819915 ## iter 80 value 200.794767 ## iter 90 value 200.787680 ## iter 100 value 200.787173 ## final value 200.787173 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 575.766111 ## iter 10 value 351.554709 ## iter 20 value 204.640962 ## iter 30 value 188.531382 ## iter 40 value 181.442906 ## iter 50 value 178.959597 ## iter 60 value 178.807475 ## iter 70 value 178.721442 ## iter 80 value 178.709223 ## iter 90 value 178.707551 ## final value 178.707431 ## converged ## # weights: 360 (238 variable) ## initial value 615.025131 ## iter 10 value 414.659921 ## iter 20 value 223.850788 ## iter 30 value 208.086015 ## iter 40 value 202.398685 ## iter 50 value 201.649297 ## iter 60 value 201.592261 ## iter 70 value 201.535857 ## iter 80 value 201.532097 ## final value 201.531922 ## converged ## # weights: 360 (238 variable) ## initial value 592.918196 ## iter 10 value 345.931804 ## iter 20 value 227.484430 ## iter 30 value 213.542108 ## iter 40 value 210.805492 ## iter 50 value 209.861553 ## iter 60 value 209.845907 ## iter 70 value 209.830059 ## iter 80 value 209.828759 ## final value 209.828720 ## converged ## # weights: 360 (238 variable) ## initial value 634.151971 ## iter 10 value 353.405111 ## iter 20 value 233.023225 ## iter 30 value 222.011242 ## iter 40 value 220.431866 ## iter 50 value 219.964746 ## iter 60 value 219.781001 ## iter 70 value 219.258901 ## iter 80 value 219.248762 ## iter 90 value 219.240334 ## iter 100 value 219.239923 ## final value 219.239923 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.829654 ## iter 10 value 408.159540 ## iter 20 value 236.607411 ## iter 30 value 220.852985 ## iter 40 value 217.948153 ## iter 50 value 217.535805 ## iter 60 value 217.431558 ## iter 70 value 217.374311 ## iter 80 value 217.366093 ## iter 90 value 217.363965 ## iter 100 value 217.361483 ## final value 217.361483 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.090667 ## iter 10 value 330.796192 ## iter 20 value 196.082548 ## iter 30 value 177.109205 ## iter 40 value 171.485124 ## iter 50 value 170.215301 ## iter 60 value 170.057500 ## iter 70 value 170.000222 ## iter 80 value 169.958208 ## iter 90 value 169.948903 ## iter 100 value 169.944569 ## final value 169.944569 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.220995 ## iter 10 value 314.099144 ## iter 20 value 179.994339 ## iter 30 value 164.532979 ## iter 40 value 159.543798 ## iter 50 value 157.797438 ## iter 60 value 157.675895 ## iter 70 value 157.622316 ## iter 80 value 157.594788 ## iter 90 value 157.589288 ## iter 100 value 157.588901 ## final value 157.588901 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.013822 ## iter 10 value 357.708961 ## iter 20 value 203.810477 ## iter 30 value 192.700898 ## iter 40 value 190.004434 ## iter 50 value 189.178196 ## iter 60 value 189.161919 ## iter 70 value 189.142353 ## iter 80 value 189.141782 ## final value 189.141750 ## converged ## # weights: 360 (238 variable) ## initial value 609.473294 ## iter 10 value 325.580241 ## iter 20 value 219.061478 ## iter 30 value 206.887629 ## iter 40 value 201.288817 ## iter 50 value 199.364141 ## iter 60 value 199.216937 ## iter 70 value 199.176727 ## iter 80 value 199.149971 ## iter 90 value 199.147239 ## iter 100 value 199.146962 ## final value 199.146962 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.550451 ## iter 10 value 326.593059 ## iter 20 value 214.225893 ## iter 30 value 199.341333 ## iter 40 value 194.901761 ## iter 50 value 193.364831 ## iter 60 value 193.149066 ## iter 70 value 193.080029 ## iter 80 value 193.073798 ## iter 90 value 193.072105 ## final value 193.072082 ## converged ## # weights: 360 (238 variable) ## initial value 586.865721 ## iter 10 value 350.526022 ## iter 20 value 224.837716 ## iter 30 value 206.367258 ## iter 40 value 200.586213 ## iter 50 value 199.462050 ## iter 60 value 199.378306 ## iter 70 value 199.296371 ## iter 80 value 199.289860 ## iter 90 value 199.289320 ## final value 199.289308 ## converged ## # weights: 360 (238 variable) ## initial value 617.620054 ## iter 10 value 397.887991 ## iter 20 value 211.566912 ## iter 30 value 197.587636 ## iter 40 value 189.574274 ## iter 50 value 187.370020 ## iter 60 value 187.163406 ## iter 70 value 187.124686 ## iter 80 value 187.122318 ## iter 90 value 187.122175 ## iter 90 value 187.122174 ## iter 90 value 187.122174 ## final value 187.122174 ## converged ## # weights: 360 (238 variable) ## initial value 598.672068 ## iter 10 value 341.814322 ## iter 20 value 205.234103 ## iter 30 value 192.450123 ## iter 40 value 185.647986 ## iter 50 value 184.535505 ## iter 60 value 184.488836 ## iter 70 value 184.458615 ## iter 80 value 184.448152 ## iter 90 value 184.447273 ## final value 184.447211 ## converged ## # weights: 360 (238 variable) ## initial value 598.233502 ## iter 10 value 362.214723 ## iter 20 value 213.497764 ## iter 30 value 196.331481 ## iter 40 value 188.131572 ## iter 50 value 185.750785 ## iter 60 value 185.566262 ## iter 70 value 185.498031 ## iter 80 value 185.468566 ## iter 90 value 185.460000 ## iter 100 value 185.459053 ## final value 185.459053 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.387857 ## iter 10 value 324.292027 ## iter 20 value 203.612989 ## iter 30 value 193.134691 ## iter 40 value 187.450731 ## iter 50 value 186.559379 ## iter 60 value 186.518163 ## iter 70 value 186.492643 ## iter 80 value 186.491208 ## final value 186.491103 ## converged ## # weights: 360 (238 variable) ## initial value 629.877820 ## iter 10 value 415.255513 ## iter 20 value 224.304676 ## iter 30 value 204.362637 ## iter 40 value 199.993364 ## iter 50 value 199.232927 ## iter 60 value 199.049189 ## iter 70 value 198.993747 ## iter 80 value 198.989042 ## iter 90 value 198.988467 ## final value 198.988426 ## converged ## # weights: 360 (238 variable) ## initial value 581.519434 ## iter 10 value 378.689950 ## iter 20 value 227.378783 ## iter 30 value 211.522452 ## iter 40 value 204.846927 ## iter 50 value 203.497183 ## iter 60 value 203.362623 ## iter 70 value 203.310212 ## iter 80 value 203.285127 ## iter 90 value 203.283073 ## iter 100 value 203.282850 ## final value 203.282850 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.195847 ## iter 10 value 339.371256 ## iter 20 value 211.167257 ## iter 30 value 196.968314 ## iter 40 value 192.185560 ## iter 50 value 191.300470 ## iter 60 value 191.159899 ## iter 70 value 191.076226 ## iter 80 value 191.067964 ## iter 90 value 191.067381 ## iter 100 value 191.067247 ## final value 191.067247 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.416733 ## iter 10 value 373.679481 ## iter 20 value 200.245945 ## iter 30 value 186.640038 ## iter 40 value 184.541245 ## iter 50 value 183.390824 ## iter 60 value 183.330198 ## iter 70 value 183.306472 ## iter 80 value 183.292299 ## iter 90 value 183.282059 ## iter 100 value 183.272967 ## final value 183.272967 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.827812 ## iter 10 value 381.281308 ## iter 20 value 223.494313 ## iter 30 value 205.039971 ## iter 40 value 198.279563 ## iter 50 value 197.135121 ## iter 60 value 197.001238 ## iter 70 value 196.950961 ## iter 80 value 196.938196 ## iter 90 value 196.937120 ## final value 196.937005 ## converged ## # weights: 360 (238 variable) ## initial value 602.133905 ## iter 10 value 417.692675 ## iter 20 value 225.270389 ## iter 30 value 209.503188 ## iter 40 value 203.983285 ## iter 50 value 202.702020 ## iter 60 value 202.632285 ## iter 70 value 202.577120 ## iter 80 value 202.568709 ## iter 90 value 202.566384 ## iter 100 value 202.566119 ## final value 202.566119 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.607502 ## iter 10 value 362.573274 ## iter 20 value 205.984649 ## iter 30 value 187.202553 ## iter 40 value 182.367126 ## iter 50 value 181.648368 ## iter 60 value 181.585452 ## iter 70 value 181.523702 ## iter 80 value 181.506496 ## iter 90 value 181.505476 ## final value 181.505396 ## converged ## # weights: 360 (238 variable) ## initial value 618.017751 ## iter 10 value 332.979045 ## iter 20 value 177.268068 ## iter 30 value 160.415913 ## iter 40 value 153.043733 ## iter 50 value 151.468326 ## iter 60 value 151.341447 ## iter 70 value 151.307727 ## iter 80 value 151.303968 ## iter 90 value 151.303789 ## final value 151.303772 ## converged ## # weights: 360 (238 variable) ## initial value 595.980248 ## iter 10 value 365.081236 ## iter 20 value 197.854261 ## iter 30 value 179.739304 ## iter 40 value 173.406631 ## iter 50 value 172.292830 ## iter 60 value 172.182015 ## iter 70 value 172.126133 ## iter 80 value 172.097210 ## iter 90 value 172.093112 ## iter 100 value 172.092441 ## final value 172.092441 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.954054 ## iter 10 value 372.447256 ## iter 20 value 215.011232 ## iter 30 value 202.412672 ## iter 40 value 197.841184 ## iter 50 value 195.193704 ## iter 60 value 194.976715 ## iter 70 value 194.934511 ## iter 80 value 194.913170 ## iter 90 value 194.911823 ## iter 100 value 194.911632 ## final value 194.911632 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.912786 ## iter 10 value 322.644372 ## iter 20 value 188.234696 ## iter 30 value 171.199745 ## iter 40 value 166.371894 ## iter 50 value 164.294481 ## iter 60 value 164.107509 ## iter 70 value 164.069849 ## iter 80 value 164.057014 ## iter 90 value 164.036764 ## iter 100 value 164.029500 ## final value 164.029500 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 551.485571 ## iter 10 value 327.166765 ## iter 20 value 186.381003 ## iter 30 value 168.449144 ## iter 40 value 164.344165 ## iter 50 value 163.506551 ## iter 60 value 163.438416 ## iter 70 value 163.377693 ## iter 80 value 163.368186 ## iter 90 value 163.367520 ## iter 100 value 163.367410 ## final value 163.367410 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 635.637845 ## iter 10 value 418.781272 ## iter 20 value 231.698546 ## iter 30 value 214.362751 ## iter 40 value 206.483541 ## iter 50 value 204.896910 ## iter 60 value 204.857419 ## iter 70 value 204.824024 ## iter 80 value 204.809284 ## iter 90 value 204.808041 ## iter 100 value 204.807921 ## final value 204.807921 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.132539 ## iter 10 value 344.821991 ## iter 20 value 196.243110 ## iter 30 value 183.693303 ## iter 40 value 181.397155 ## iter 50 value 180.154279 ## iter 60 value 180.106042 ## iter 70 value 180.055941 ## iter 80 value 180.050264 ## iter 90 value 180.044974 ## iter 100 value 180.044017 ## final value 180.044017 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.449508 ## iter 10 value 337.659755 ## iter 20 value 209.553781 ## iter 30 value 196.475220 ## iter 40 value 194.125570 ## iter 50 value 193.846480 ## iter 60 value 193.763474 ## iter 70 value 193.741880 ## iter 80 value 193.739518 ## iter 90 value 193.739201 ## final value 193.739174 ## converged ## # weights: 360 (238 variable) ## initial value 607.817356 ## iter 10 value 363.838968 ## iter 20 value 211.569496 ## iter 30 value 192.515419 ## iter 40 value 186.241822 ## iter 50 value 184.244711 ## iter 60 value 184.132211 ## iter 70 value 184.092894 ## iter 80 value 184.063593 ## iter 90 value 184.053025 ## iter 100 value 184.051888 ## final value 184.051888 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.776695 ## iter 10 value 339.013286 ## iter 20 value 218.594378 ## iter 30 value 203.311420 ## iter 40 value 193.498720 ## iter 50 value 190.449890 ## iter 60 value 190.295780 ## iter 70 value 190.275427 ## iter 80 value 190.271684 ## iter 90 value 190.271196 ## final value 190.271166 ## converged ## # weights: 360 (238 variable) ## initial value 580.543427 ## iter 10 value 361.046709 ## iter 20 value 223.093565 ## iter 30 value 208.161560 ## iter 40 value 203.597808 ## iter 50 value 202.913206 ## iter 60 value 202.816193 ## iter 70 value 202.767501 ## iter 80 value 202.765224 ## final value 202.765105 ## converged ## # weights: 360 (238 variable) ## initial value 589.502390 ## iter 10 value 443.522860 ## iter 20 value 221.732799 ## iter 30 value 210.009798 ## iter 40 value 205.009925 ## iter 50 value 203.916840 ## iter 60 value 203.898342 ## iter 70 value 203.872661 ## iter 80 value 203.869010 ## iter 90 value 203.868764 ## final value 203.868760 ## converged ## # weights: 360 (238 variable) ## initial value 598.538477 ## iter 10 value 360.513604 ## iter 20 value 192.796014 ## iter 30 value 175.226187 ## iter 40 value 169.883667 ## iter 50 value 168.815605 ## iter 60 value 168.760855 ## iter 70 value 168.722536 ## iter 80 value 168.708721 ## iter 90 value 168.707699 ## iter 100 value 168.707575 ## final value 168.707575 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.826933 ## iter 10 value 398.402600 ## iter 20 value 249.091387 ## iter 30 value 227.910950 ## iter 40 value 219.193290 ## iter 50 value 217.860981 ## iter 60 value 217.705719 ## iter 70 value 217.645014 ## iter 80 value 217.641936 ## iter 90 value 217.641621 ## final value 217.641613 ## converged ## # weights: 360 (238 variable) ## initial value 590.991230 ## iter 10 value 362.364428 ## iter 20 value 199.983603 ## iter 30 value 184.689807 ## iter 40 value 178.668420 ## iter 50 value 177.079323 ## iter 60 value 176.854715 ## iter 70 value 176.836165 ## iter 80 value 176.829317 ## iter 90 value 176.828038 ## iter 100 value 176.827793 ## final value 176.827793 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 644.192079 ## iter 10 value 374.605353 ## iter 20 value 202.530913 ## iter 30 value 188.696644 ## iter 40 value 185.191244 ## iter 50 value 183.714736 ## iter 60 value 183.565775 ## iter 70 value 183.526861 ## iter 80 value 183.514178 ## iter 90 value 183.504538 ## iter 100 value 183.494967 ## final value 183.494967 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.247045 ## iter 10 value 306.408279 ## iter 20 value 197.854889 ## iter 30 value 185.072387 ## iter 40 value 183.265584 ## iter 50 value 182.346490 ## iter 60 value 182.294508 ## iter 70 value 182.264458 ## iter 80 value 182.254293 ## iter 90 value 182.253641 ## final value 182.253595 ## converged ## # weights: 360 (238 variable) ## initial value 619.779156 ## iter 10 value 393.939577 ## iter 20 value 213.194460 ## iter 30 value 196.626904 ## iter 40 value 191.063315 ## iter 50 value 190.246990 ## iter 60 value 190.114316 ## iter 70 value 190.058826 ## iter 80 value 190.032550 ## iter 90 value 190.030974 ## iter 100 value 190.030787 ## final value 190.030787 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 568.621396 ## iter 10 value 342.910907 ## iter 20 value 186.029861 ## iter 30 value 172.983712 ## iter 40 value 169.899210 ## iter 50 value 168.845756 ## iter 60 value 168.792359 ## iter 70 value 168.771985 ## iter 80 value 168.755617 ## iter 90 value 168.742969 ## iter 100 value 168.742088 ## final value 168.742088 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.140154 ## iter 10 value 402.251697 ## iter 20 value 250.352086 ## iter 30 value 235.947897 ## iter 40 value 232.168238 ## iter 50 value 229.934982 ## iter 60 value 229.741769 ## iter 70 value 229.675416 ## iter 80 value 229.643304 ## iter 90 value 229.639343 ## iter 100 value 229.638642 ## final value 229.638642 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.107114 ## iter 10 value 325.352435 ## iter 20 value 187.103567 ## iter 30 value 170.140029 ## iter 40 value 167.140447 ## iter 50 value 166.205641 ## iter 60 value 165.897655 ## iter 70 value 165.869383 ## iter 80 value 165.837272 ## iter 90 value 165.830555 ## iter 100 value 165.815763 ## final value 165.815763 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.127223 ## iter 10 value 343.968549 ## iter 20 value 205.848868 ## iter 30 value 192.050202 ## iter 40 value 187.908902 ## iter 50 value 185.837238 ## iter 60 value 185.548088 ## iter 70 value 185.528872 ## iter 80 value 185.526444 ## final value 185.526368 ## converged ## # weights: 360 (238 variable) ## initial value 632.473292 ## iter 10 value 361.958206 ## iter 20 value 224.897757 ## iter 30 value 206.419120 ## iter 40 value 199.490261 ## iter 50 value 198.016683 ## iter 60 value 197.872576 ## iter 70 value 197.796861 ## iter 80 value 197.767393 ## iter 90 value 197.766336 ## iter 100 value 197.766194 ## final value 197.766194 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 649.704147 ## iter 10 value 368.849615 ## iter 20 value 207.031969 ## iter 30 value 186.849256 ## iter 40 value 176.953538 ## iter 50 value 173.944185 ## iter 60 value 173.602076 ## iter 70 value 173.535521 ## iter 80 value 173.522825 ## iter 90 value 173.518863 ## iter 100 value 173.517630 ## final value 173.517630 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 634.740498 ## iter 10 value 353.654933 ## iter 20 value 206.747556 ## iter 30 value 187.780073 ## iter 40 value 180.896997 ## iter 50 value 179.444434 ## iter 60 value 179.265708 ## iter 70 value 179.174867 ## iter 80 value 179.145063 ## iter 90 value 179.142798 ## iter 100 value 179.142435 ## final value 179.142435 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.622736 ## iter 10 value 388.122582 ## iter 20 value 213.155588 ## iter 30 value 199.753177 ## iter 40 value 197.139944 ## iter 50 value 196.700146 ## iter 60 value 196.519623 ## iter 70 value 196.505086 ## iter 80 value 196.505018 ## iter 90 value 196.504602 ## final value 196.504529 ## converged ## # weights: 360 (238 variable) ## initial value 578.619208 ## iter 10 value 336.042127 ## iter 20 value 209.192007 ## iter 30 value 188.776147 ## iter 40 value 182.803329 ## iter 50 value 180.974865 ## iter 60 value 180.791506 ## iter 70 value 180.728257 ## iter 80 value 180.696735 ## iter 90 value 180.694597 ## iter 100 value 180.694346 ## final value 180.694346 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.594346 ## iter 10 value 315.149327 ## iter 20 value 216.774796 ## iter 30 value 201.847491 ## iter 40 value 196.649014 ## iter 50 value 195.289754 ## iter 60 value 195.192384 ## iter 70 value 195.133928 ## iter 80 value 195.110629 ## iter 90 value 195.109253 ## final value 195.109154 ## converged ## # weights: 360 (238 variable) ## initial value 566.481959 ## iter 10 value 352.302907 ## iter 20 value 193.834812 ## iter 30 value 180.368108 ## iter 40 value 175.405370 ## iter 50 value 174.695157 ## iter 60 value 174.661307 ## iter 70 value 174.631220 ## iter 80 value 174.623090 ## iter 90 value 174.622245 ## iter 100 value 174.622139 ## final value 174.622139 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.428215 ## iter 10 value 339.405647 ## iter 20 value 200.659857 ## iter 30 value 187.870838 ## iter 40 value 184.387760 ## iter 50 value 182.917008 ## iter 60 value 182.852036 ## iter 70 value 182.808302 ## iter 80 value 182.795105 ## iter 90 value 182.794312 ## iter 100 value 182.794202 ## final value 182.794202 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.083223 ## iter 10 value 383.918079 ## iter 20 value 240.724844 ## iter 30 value 222.593432 ## iter 40 value 214.547878 ## iter 50 value 213.143005 ## iter 60 value 212.945797 ## iter 70 value 212.868441 ## iter 80 value 212.836390 ## iter 90 value 212.834200 ## final value 212.834031 ## converged ## # weights: 360 (238 variable) ## initial value 610.863808 ## iter 10 value 442.354879 ## iter 20 value 243.568502 ## iter 30 value 226.030871 ## iter 40 value 219.487440 ## iter 50 value 218.878423 ## iter 60 value 218.801618 ## iter 70 value 218.722049 ## iter 80 value 218.711817 ## iter 90 value 218.711014 ## final value 218.710968 ## converged ## # weights: 360 (238 variable) ## initial value 589.054706 ## iter 10 value 353.833619 ## iter 20 value 180.822411 ## iter 30 value 161.165817 ## iter 40 value 155.734865 ## iter 50 value 154.298475 ## iter 60 value 154.127913 ## iter 70 value 154.035028 ## iter 80 value 153.996837 ## iter 90 value 153.983067 ## iter 100 value 153.979534 ## final value 153.979534 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.034995 ## iter 10 value 341.910305 ## iter 20 value 226.415805 ## iter 30 value 212.914170 ## iter 40 value 207.476177 ## iter 50 value 205.257853 ## iter 60 value 205.053107 ## iter 70 value 205.015856 ## iter 80 value 205.013652 ## final value 205.013542 ## converged ## # weights: 360 (238 variable) ## initial value 629.076712 ## iter 10 value 363.477706 ## iter 20 value 214.824839 ## iter 30 value 201.295212 ## iter 40 value 196.704720 ## iter 50 value 195.497564 ## iter 60 value 195.432641 ## iter 70 value 195.357911 ## iter 80 value 195.336932 ## iter 90 value 195.336242 ## final value 195.336111 ## converged ## # weights: 360 (238 variable) ## initial value 581.090756 ## iter 10 value 377.476845 ## iter 20 value 224.448159 ## iter 30 value 205.503923 ## iter 40 value 195.598685 ## iter 50 value 193.606639 ## iter 60 value 193.360451 ## iter 70 value 193.311486 ## iter 80 value 193.305259 ## iter 90 value 193.305023 ## final value 193.305013 ## converged ## # weights: 360 (238 variable) ## initial value 592.868539 ## iter 10 value 339.907201 ## iter 20 value 218.168824 ## iter 30 value 201.034021 ## iter 40 value 194.460292 ## iter 50 value 192.258312 ## iter 60 value 192.045940 ## iter 70 value 191.952764 ## iter 80 value 191.930821 ## iter 90 value 191.924879 ## iter 100 value 191.923943 ## final value 191.923943 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.766079 ## iter 10 value 403.071584 ## iter 20 value 204.153823 ## iter 30 value 188.110522 ## iter 40 value 184.018728 ## iter 50 value 183.015741 ## iter 60 value 182.911696 ## iter 70 value 182.835797 ## iter 80 value 182.826928 ## iter 90 value 182.826380 ## iter 100 value 182.826276 ## final value 182.826276 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.089752 ## iter 10 value 336.617951 ## iter 20 value 205.068809 ## iter 30 value 192.713384 ## iter 40 value 189.151519 ## iter 50 value 187.448709 ## iter 60 value 187.291356 ## iter 70 value 187.280472 ## iter 80 value 187.266138 ## iter 90 value 187.264822 ## iter 100 value 187.264727 ## final value 187.264727 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 647.103731 ## iter 10 value 358.993582 ## iter 20 value 193.698533 ## iter 30 value 174.743110 ## iter 40 value 166.992244 ## iter 50 value 165.363261 ## iter 60 value 165.194346 ## iter 70 value 165.136681 ## iter 80 value 165.107731 ## iter 90 value 165.098183 ## iter 100 value 165.095761 ## final value 165.095761 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.630424 ## iter 10 value 350.481203 ## iter 20 value 210.172117 ## iter 30 value 195.906914 ## iter 40 value 193.954070 ## iter 50 value 193.567573 ## iter 60 value 193.516214 ## iter 70 value 193.468219 ## iter 80 value 193.465471 ## iter 90 value 193.464148 ## final value 193.464049 ## converged ## # weights: 360 (238 variable) ## initial value 595.445553 ## iter 10 value 365.459220 ## iter 20 value 194.035271 ## iter 30 value 178.531935 ## iter 40 value 176.286263 ## iter 50 value 175.799400 ## iter 60 value 175.707292 ## iter 70 value 175.666696 ## iter 80 value 175.657833 ## iter 90 value 175.655257 ## iter 100 value 175.653676 ## final value 175.653676 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.001998 ## iter 10 value 388.904117 ## iter 20 value 210.174239 ## iter 30 value 192.922529 ## iter 40 value 189.116525 ## iter 50 value 187.894673 ## iter 60 value 187.674040 ## iter 70 value 187.572359 ## iter 80 value 187.546920 ## iter 90 value 187.538933 ## iter 100 value 187.531054 ## final value 187.531054 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.760278 ## iter 10 value 356.817728 ## iter 20 value 223.677002 ## iter 30 value 209.936267 ## iter 40 value 207.357624 ## iter 50 value 206.937693 ## iter 60 value 206.879393 ## iter 70 value 206.848503 ## iter 80 value 206.822875 ## iter 90 value 206.819026 ## iter 100 value 206.818677 ## final value 206.818677 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.130792 ## iter 10 value 331.450923 ## iter 20 value 225.671868 ## iter 30 value 211.156793 ## iter 40 value 207.624049 ## iter 50 value 206.937809 ## iter 60 value 206.808019 ## iter 70 value 206.789043 ## iter 80 value 206.788099 ## final value 206.788022 ## converged ## # weights: 360 (238 variable) ## initial value 584.337594 ## iter 10 value 345.774921 ## iter 20 value 215.990204 ## iter 30 value 204.421423 ## iter 40 value 200.482533 ## iter 50 value 199.261667 ## iter 60 value 199.171714 ## iter 70 value 199.135997 ## iter 80 value 199.134350 ## iter 90 value 199.134156 ## final value 199.134152 ## converged ## # weights: 360 (238 variable) ## initial value 610.850515 ## iter 10 value 389.607478 ## iter 20 value 216.946996 ## iter 30 value 198.412280 ## iter 40 value 193.005436 ## iter 50 value 190.998105 ## iter 60 value 190.837777 ## iter 70 value 190.757152 ## iter 80 value 190.752774 ## iter 90 value 190.752219 ## final value 190.752187 ## converged ## # weights: 360 (238 variable) ## initial value 593.282276 ## iter 10 value 373.861823 ## iter 20 value 214.009409 ## iter 30 value 197.489106 ## iter 40 value 191.809208 ## iter 50 value 189.854651 ## iter 60 value 189.699654 ## iter 70 value 189.640799 ## iter 80 value 189.627323 ## iter 90 value 189.621874 ## iter 100 value 189.620987 ## final value 189.620987 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 634.355764 ## iter 10 value 393.951230 ## iter 20 value 214.498822 ## iter 30 value 197.892705 ## iter 40 value 195.760527 ## iter 50 value 195.261322 ## iter 60 value 195.143576 ## iter 70 value 195.130413 ## iter 80 value 195.130004 ## iter 90 value 195.128612 ## final value 195.128534 ## converged ## # weights: 360 (238 variable) ## initial value 592.980048 ## iter 10 value 300.653893 ## iter 20 value 175.333273 ## iter 30 value 161.975262 ## iter 40 value 156.664257 ## iter 50 value 152.923513 ## iter 60 value 152.638298 ## iter 70 value 152.532047 ## iter 80 value 152.512006 ## iter 90 value 152.510940 ## iter 100 value 152.510794 ## final value 152.510794 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 555.616683 ## iter 10 value 360.599401 ## iter 20 value 234.054183 ## iter 30 value 217.893551 ## iter 40 value 212.501507 ## iter 50 value 211.629687 ## iter 60 value 211.552588 ## iter 70 value 211.500848 ## iter 80 value 211.498142 ## iter 90 value 211.497956 ## iter 90 value 211.497954 ## iter 90 value 211.497954 ## final value 211.497954 ## converged ## # weights: 360 (238 variable) ## initial value 571.655873 ## iter 10 value 343.663698 ## iter 20 value 209.556812 ## iter 30 value 191.237969 ## iter 40 value 184.603703 ## iter 50 value 182.818849 ## iter 60 value 182.756551 ## iter 70 value 182.698486 ## iter 80 value 182.687736 ## iter 90 value 182.687024 ## iter 100 value 182.686854 ## final value 182.686854 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.639667 ## iter 10 value 364.859714 ## iter 20 value 231.141024 ## iter 30 value 215.435316 ## iter 40 value 210.082000 ## iter 50 value 208.889798 ## iter 60 value 208.788021 ## iter 70 value 208.719999 ## iter 80 value 208.712534 ## iter 90 value 208.711926 ## final value 208.711876 ## converged ## # weights: 360 (238 variable) ## initial value 610.599592 ## iter 10 value 411.223842 ## iter 20 value 217.305650 ## iter 30 value 201.666952 ## iter 40 value 197.506861 ## iter 50 value 196.050490 ## iter 60 value 196.021981 ## iter 70 value 195.977067 ## iter 80 value 195.974202 ## iter 90 value 195.974032 ## final value 195.974024 ## converged ## # weights: 360 (238 variable) ## initial value 643.012060 ## iter 10 value 389.191910 ## iter 20 value 252.234787 ## iter 30 value 233.575295 ## iter 40 value 220.168459 ## iter 50 value 218.113097 ## iter 60 value 217.940806 ## iter 70 value 217.904709 ## iter 80 value 217.886267 ## iter 90 value 217.871873 ## iter 100 value 217.862264 ## final value 217.862264 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.743969 ## iter 10 value 352.161552 ## iter 20 value 198.562748 ## iter 30 value 185.925716 ## iter 40 value 182.308087 ## iter 50 value 180.384197 ## iter 60 value 180.348267 ## iter 70 value 180.325988 ## iter 80 value 180.315185 ## iter 90 value 180.314483 ## iter 100 value 180.314415 ## final value 180.314415 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.868758 ## iter 10 value 335.205117 ## iter 20 value 219.829579 ## iter 30 value 204.617125 ## iter 40 value 201.787528 ## iter 50 value 199.998294 ## iter 60 value 199.854501 ## iter 70 value 199.794482 ## iter 80 value 199.759834 ## iter 90 value 199.756124 ## iter 100 value 199.755586 ## final value 199.755586 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.880102 ## iter 10 value 423.350266 ## iter 20 value 198.511081 ## iter 30 value 180.979907 ## iter 40 value 176.397880 ## iter 50 value 171.512122 ## iter 60 value 171.086591 ## iter 70 value 170.986697 ## iter 80 value 170.963295 ## iter 90 value 170.962045 ## iter 100 value 170.961966 ## final value 170.961966 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.978055 ## iter 10 value 374.736026 ## iter 20 value 210.215962 ## iter 30 value 194.587301 ## iter 40 value 190.862473 ## iter 50 value 188.725649 ## iter 60 value 188.575869 ## iter 70 value 188.478370 ## iter 80 value 188.447669 ## iter 90 value 188.444396 ## iter 100 value 188.444021 ## final value 188.444021 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.263276 ## iter 10 value 382.483208 ## iter 20 value 235.210072 ## iter 30 value 221.697000 ## iter 40 value 219.065404 ## iter 50 value 217.880939 ## iter 60 value 217.845444 ## iter 70 value 217.812762 ## iter 80 value 217.809832 ## iter 90 value 217.809652 ## iter 90 value 217.809650 ## iter 90 value 217.809650 ## final value 217.809650 ## converged ## # weights: 360 (238 variable) ## initial value 564.693857 ## iter 10 value 324.917828 ## iter 20 value 185.619167 ## iter 30 value 173.318931 ## iter 40 value 169.185349 ## iter 50 value 168.334435 ## iter 60 value 168.300638 ## iter 70 value 168.294468 ## iter 80 value 168.293765 ## final value 168.293740 ## converged ## # weights: 360 (238 variable) ## initial value 635.978744 ## iter 10 value 410.949265 ## iter 20 value 250.187602 ## iter 30 value 231.150404 ## iter 40 value 226.050146 ## iter 50 value 223.798870 ## iter 60 value 223.718041 ## iter 70 value 223.637847 ## iter 80 value 223.629310 ## iter 90 value 223.628753 ## iter 100 value 223.628676 ## final value 223.628676 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.776774 ## iter 10 value 343.068173 ## iter 20 value 200.697115 ## iter 30 value 188.422199 ## iter 40 value 184.969013 ## iter 50 value 183.876803 ## iter 60 value 183.764022 ## iter 70 value 183.732763 ## iter 80 value 183.706739 ## iter 90 value 183.701724 ## iter 100 value 183.700466 ## final value 183.700466 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.552022 ## iter 10 value 340.239211 ## iter 20 value 200.522349 ## iter 30 value 183.616671 ## iter 40 value 173.347226 ## iter 50 value 171.386335 ## iter 60 value 171.151321 ## iter 70 value 171.081332 ## iter 80 value 171.045378 ## iter 90 value 171.036430 ## iter 100 value 171.025402 ## final value 171.025402 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.983772 ## iter 10 value 346.926415 ## iter 20 value 212.928200 ## iter 30 value 195.726916 ## iter 40 value 188.883621 ## iter 50 value 188.317646 ## iter 60 value 188.187153 ## iter 70 value 188.154696 ## iter 80 value 188.152847 ## iter 90 value 188.149839 ## iter 100 value 188.149026 ## final value 188.149026 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.435959 ## iter 10 value 363.277513 ## iter 20 value 213.880760 ## iter 30 value 198.277479 ## iter 40 value 193.555392 ## iter 50 value 189.671967 ## iter 60 value 188.869557 ## iter 70 value 188.800749 ## iter 80 value 188.785641 ## iter 90 value 188.781075 ## iter 100 value 188.780364 ## final value 188.780364 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.215315 ## iter 10 value 371.568778 ## iter 20 value 201.350985 ## iter 30 value 186.002491 ## iter 40 value 181.637856 ## iter 50 value 180.801925 ## iter 60 value 180.662802 ## iter 70 value 180.648858 ## iter 80 value 180.644356 ## iter 90 value 180.643793 ## final value 180.643778 ## converged ## # weights: 360 (238 variable) ## initial value 591.623152 ## iter 10 value 371.372166 ## iter 20 value 207.616945 ## iter 30 value 193.619320 ## iter 40 value 190.601670 ## iter 50 value 188.123164 ## iter 60 value 187.909023 ## iter 70 value 187.894444 ## iter 80 value 187.888128 ## iter 90 value 187.887111 ## iter 100 value 187.887061 ## final value 187.887061 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.498696 ## iter 10 value 363.386226 ## iter 20 value 218.731082 ## iter 30 value 205.025937 ## iter 40 value 201.700230 ## iter 50 value 199.730219 ## iter 60 value 199.696439 ## iter 70 value 199.682582 ## iter 80 value 199.676438 ## iter 90 value 199.675754 ## final value 199.675616 ## converged ## # weights: 360 (238 variable) ## initial value 618.781726 ## iter 10 value 344.911075 ## iter 20 value 200.219660 ## iter 30 value 183.345188 ## iter 40 value 178.338004 ## iter 50 value 176.684033 ## iter 60 value 176.564279 ## iter 70 value 176.478279 ## iter 80 value 176.466148 ## iter 90 value 176.464026 ## iter 100 value 176.461082 ## final value 176.461082 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.416821 ## iter 10 value 375.686421 ## iter 20 value 220.691859 ## iter 30 value 205.377762 ## iter 40 value 200.392225 ## iter 50 value 198.401012 ## iter 60 value 198.347860 ## iter 70 value 198.302823 ## iter 80 value 198.298294 ## iter 90 value 198.297994 ## final value 198.297990 ## converged ## # weights: 360 (238 variable) ## initial value 609.624683 ## iter 10 value 374.100135 ## iter 20 value 216.195807 ## iter 30 value 201.063600 ## iter 40 value 193.323728 ## iter 50 value 192.787457 ## iter 60 value 192.736906 ## iter 70 value 192.678476 ## iter 80 value 192.667295 ## iter 90 value 192.664879 ## iter 100 value 192.664629 ## final value 192.664629 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.646942 ## iter 10 value 372.845625 ## iter 20 value 237.664747 ## iter 30 value 223.499212 ## iter 40 value 218.972650 ## iter 50 value 216.939148 ## iter 60 value 216.854371 ## iter 70 value 216.814312 ## iter 80 value 216.799782 ## iter 90 value 216.799113 ## final value 216.799072 ## converged ## # weights: 360 (238 variable) ## initial value 621.513426 ## iter 10 value 392.440535 ## iter 20 value 200.636564 ## iter 30 value 185.113114 ## iter 40 value 181.733276 ## iter 50 value 181.133523 ## iter 60 value 180.973816 ## iter 70 value 180.948308 ## iter 80 value 180.923273 ## iter 90 value 180.916096 ## iter 100 value 180.912607 ## final value 180.912607 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.311997 ## iter 10 value 370.743384 ## iter 20 value 208.666443 ## iter 30 value 191.611625 ## iter 40 value 186.531169 ## iter 50 value 185.743661 ## iter 60 value 185.613303 ## iter 70 value 185.530462 ## iter 80 value 185.522517 ## iter 90 value 185.521982 ## iter 100 value 185.520370 ## final value 185.520370 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.452770 ## iter 10 value 386.281962 ## iter 20 value 228.510770 ## iter 30 value 213.550032 ## iter 40 value 208.383001 ## iter 50 value 206.557884 ## iter 60 value 206.441144 ## iter 70 value 206.375198 ## iter 80 value 206.358291 ## iter 90 value 206.357250 ## final value 206.357141 ## converged ## # weights: 360 (238 variable) ## initial value 604.749481 ## iter 10 value 356.727955 ## iter 20 value 220.196982 ## iter 30 value 205.479330 ## iter 40 value 201.183667 ## iter 50 value 198.977699 ## iter 60 value 198.793324 ## iter 70 value 198.720584 ## iter 80 value 198.689754 ## iter 90 value 198.684299 ## iter 100 value 198.683746 ## final value 198.683746 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 622.082177 ## iter 10 value 357.484998 ## iter 20 value 192.906625 ## iter 30 value 176.307911 ## iter 40 value 173.442318 ## iter 50 value 173.084824 ## iter 60 value 173.039878 ## iter 70 value 173.033527 ## iter 80 value 173.012796 ## iter 90 value 173.007373 ## iter 100 value 173.007069 ## final value 173.007069 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.195100 ## iter 10 value 386.188943 ## iter 20 value 211.244372 ## iter 30 value 193.516467 ## iter 40 value 184.647684 ## iter 50 value 183.937585 ## iter 60 value 183.871873 ## iter 70 value 183.819169 ## iter 80 value 183.811896 ## iter 90 value 183.811313 ## iter 100 value 183.811242 ## final value 183.811242 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.287405 ## iter 10 value 388.955331 ## iter 20 value 229.361346 ## iter 30 value 206.897173 ## iter 40 value 202.695093 ## iter 50 value 202.083384 ## iter 60 value 201.981079 ## iter 70 value 201.916046 ## iter 80 value 201.892655 ## iter 90 value 201.887626 ## iter 100 value 201.885520 ## final value 201.885520 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.742030 ## iter 10 value 344.628958 ## iter 20 value 188.206479 ## iter 30 value 172.929513 ## iter 40 value 170.519451 ## iter 50 value 169.616578 ## iter 60 value 169.461762 ## iter 70 value 169.443507 ## iter 80 value 169.429125 ## iter 90 value 169.420840 ## iter 100 value 169.412029 ## final value 169.412029 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.608971 ## iter 10 value 347.653039 ## iter 20 value 217.038541 ## iter 30 value 198.451153 ## iter 40 value 188.832880 ## iter 50 value 187.025163 ## iter 60 value 186.800996 ## iter 70 value 186.769145 ## iter 80 value 186.766888 ## final value 186.766744 ## converged ## # weights: 360 (238 variable) ## initial value 613.636486 ## iter 10 value 351.885887 ## iter 20 value 239.585632 ## iter 30 value 227.135504 ## iter 40 value 222.947967 ## iter 50 value 221.950735 ## iter 60 value 221.873242 ## iter 70 value 221.819941 ## iter 80 value 221.817948 ## iter 90 value 221.817743 ## iter 90 value 221.817741 ## iter 90 value 221.817741 ## final value 221.817741 ## converged ## # weights: 360 (238 variable) ## initial value 632.183038 ## iter 10 value 463.632788 ## iter 20 value 210.458177 ## iter 30 value 193.729990 ## iter 40 value 186.292814 ## iter 50 value 183.473679 ## iter 60 value 183.310679 ## iter 70 value 183.285217 ## iter 80 value 183.279940 ## iter 90 value 183.273917 ## iter 100 value 183.272793 ## final value 183.272793 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 649.195709 ## iter 10 value 364.386662 ## iter 20 value 241.241232 ## iter 30 value 228.256713 ## iter 40 value 224.709458 ## iter 50 value 223.459859 ## iter 60 value 223.432069 ## iter 70 value 223.401974 ## iter 80 value 223.398723 ## iter 90 value 223.398585 ## final value 223.398577 ## converged ## # weights: 360 (238 variable) ## initial value 593.800272 ## iter 10 value 389.906066 ## iter 20 value 209.897731 ## iter 30 value 196.458909 ## iter 40 value 192.919062 ## iter 50 value 191.405236 ## iter 60 value 191.339492 ## iter 70 value 191.329600 ## iter 80 value 191.315792 ## iter 90 value 191.315285 ## iter 100 value 191.312907 ## final value 191.312907 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.022545 ## iter 10 value 421.965253 ## iter 20 value 227.802191 ## iter 30 value 212.838626 ## iter 40 value 207.312053 ## iter 50 value 206.220891 ## iter 60 value 206.128302 ## iter 70 value 206.058026 ## iter 80 value 206.052628 ## iter 90 value 206.052258 ## final value 206.052250 ## converged ## # weights: 360 (238 variable) ## initial value 616.994943 ## iter 10 value 395.220992 ## iter 20 value 240.778291 ## iter 30 value 217.907240 ## iter 40 value 210.531311 ## iter 50 value 209.054837 ## iter 60 value 208.888817 ## iter 70 value 208.812745 ## iter 80 value 208.757013 ## iter 90 value 208.752492 ## iter 100 value 208.748407 ## final value 208.748407 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.675883 ## iter 10 value 368.188227 ## iter 20 value 223.095277 ## iter 30 value 211.401838 ## iter 40 value 209.355741 ## iter 50 value 206.923926 ## iter 60 value 205.757040 ## iter 70 value 205.739977 ## iter 80 value 205.738217 ## final value 205.738153 ## converged ## # weights: 360 (238 variable) ## initial value 598.985502 ## iter 10 value 367.605653 ## iter 20 value 237.378272 ## iter 30 value 223.141822 ## iter 40 value 218.400769 ## iter 50 value 215.325675 ## iter 60 value 214.740049 ## iter 70 value 214.671767 ## iter 80 value 214.660753 ## iter 90 value 214.660369 ## final value 214.660335 ## converged ## # weights: 360 (238 variable) ## initial value 572.817985 ## iter 10 value 366.110433 ## iter 20 value 233.847510 ## iter 30 value 219.343913 ## iter 40 value 212.679923 ## iter 50 value 211.051291 ## iter 60 value 210.987296 ## iter 70 value 210.926186 ## iter 80 value 210.918812 ## iter 90 value 210.918202 ## final value 210.918163 ## converged ## # weights: 360 (238 variable) ## initial value 602.565440 ## iter 10 value 377.900601 ## iter 20 value 233.804548 ## iter 30 value 216.637538 ## iter 40 value 212.462367 ## iter 50 value 212.047121 ## iter 60 value 211.735053 ## iter 70 value 211.697890 ## iter 80 value 211.687049 ## iter 90 value 211.681220 ## iter 100 value 211.676699 ## final value 211.676699 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 569.072377 ## iter 10 value 323.147887 ## iter 20 value 194.497239 ## iter 30 value 182.074669 ## iter 40 value 178.780003 ## iter 50 value 178.075335 ## iter 60 value 178.046682 ## iter 70 value 178.013253 ## iter 80 value 178.005950 ## iter 90 value 178.004636 ## iter 100 value 178.004475 ## final value 178.004475 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 562.722837 ## iter 10 value 358.079043 ## iter 20 value 195.550698 ## iter 30 value 176.346422 ## iter 40 value 169.220441 ## iter 50 value 167.440895 ## iter 60 value 167.316555 ## iter 70 value 167.293753 ## iter 80 value 167.292012 ## iter 90 value 167.291692 ## final value 167.291689 ## converged ## # weights: 360 (238 variable) ## initial value 610.848977 ## iter 10 value 370.413733 ## iter 20 value 214.086327 ## iter 30 value 195.391349 ## iter 40 value 190.377004 ## iter 50 value 189.390805 ## iter 60 value 189.266370 ## iter 70 value 189.230650 ## iter 80 value 189.195644 ## iter 90 value 189.189727 ## iter 100 value 189.188692 ## final value 189.188692 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.887133 ## iter 10 value 351.025254 ## iter 20 value 197.166851 ## iter 30 value 182.257400 ## iter 40 value 176.550547 ## iter 50 value 172.740913 ## iter 60 value 172.261622 ## iter 70 value 172.180964 ## iter 80 value 172.161166 ## iter 90 value 172.156697 ## iter 100 value 172.155400 ## final value 172.155400 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.772449 ## iter 10 value 349.584411 ## iter 20 value 221.235219 ## iter 30 value 206.029639 ## iter 40 value 200.955300 ## iter 50 value 199.634933 ## iter 60 value 199.509731 ## iter 70 value 199.454129 ## iter 80 value 199.449815 ## iter 90 value 199.449431 ## final value 199.449387 ## converged ## # weights: 360 (238 variable) ## initial value 595.858082 ## iter 10 value 324.904800 ## iter 20 value 204.174648 ## iter 30 value 190.509940 ## iter 40 value 185.472944 ## iter 50 value 184.823131 ## iter 60 value 184.667943 ## iter 70 value 184.614121 ## iter 80 value 184.611025 ## iter 90 value 184.610651 ## final value 184.610624 ## converged ## # weights: 360 (238 variable) ## initial value 616.218334 ## iter 10 value 366.089129 ## iter 20 value 231.295065 ## iter 30 value 215.300150 ## iter 40 value 207.782406 ## iter 50 value 206.388933 ## iter 60 value 206.293314 ## iter 70 value 206.215430 ## iter 80 value 206.197187 ## iter 90 value 206.195541 ## iter 100 value 206.195189 ## final value 206.195189 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.886879 ## iter 10 value 357.528851 ## iter 20 value 215.394776 ## iter 30 value 198.007559 ## iter 40 value 191.008910 ## iter 50 value 189.765145 ## iter 60 value 189.566769 ## iter 70 value 189.524927 ## iter 80 value 189.498085 ## iter 90 value 189.487020 ## iter 100 value 189.485283 ## final value 189.485283 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.934625 ## iter 10 value 390.279326 ## iter 20 value 210.275245 ## iter 30 value 191.773635 ## iter 40 value 185.937758 ## iter 50 value 185.185386 ## iter 60 value 185.066680 ## iter 70 value 184.992242 ## iter 80 value 184.964889 ## iter 90 value 184.963525 ## iter 100 value 184.963365 ## final value 184.963365 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.048778 ## iter 10 value 362.926384 ## iter 20 value 221.014159 ## iter 30 value 204.433652 ## iter 40 value 199.239031 ## iter 50 value 197.423773 ## iter 60 value 197.311829 ## iter 70 value 197.249727 ## iter 80 value 197.233054 ## iter 90 value 197.231550 ## iter 100 value 197.231344 ## final value 197.231344 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.086583 ## iter 10 value 400.082778 ## iter 20 value 233.394999 ## iter 30 value 216.802002 ## iter 40 value 213.125101 ## iter 50 value 212.053438 ## iter 60 value 211.960268 ## iter 70 value 211.904194 ## iter 80 value 211.900605 ## iter 90 value 211.900144 ## final value 211.900106 ## converged ## # weights: 360 (238 variable) ## initial value 613.297564 ## iter 10 value 356.441125 ## iter 20 value 204.658078 ## iter 30 value 187.337114 ## iter 40 value 178.445324 ## iter 50 value 175.845843 ## iter 60 value 175.653265 ## iter 70 value 175.634383 ## iter 80 value 175.633749 ## iter 90 value 175.633567 ## iter 100 value 175.632965 ## final value 175.632965 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 557.182975 ## iter 10 value 341.785296 ## iter 20 value 209.213091 ## iter 30 value 195.416999 ## iter 40 value 188.769632 ## iter 50 value 186.055971 ## iter 60 value 185.951917 ## iter 70 value 185.897741 ## iter 80 value 185.892381 ## iter 90 value 185.891806 ## final value 185.891776 ## converged ## # weights: 360 (238 variable) ## initial value 601.980319 ## iter 10 value 411.896805 ## iter 20 value 222.143735 ## iter 30 value 203.510418 ## iter 40 value 197.162711 ## iter 50 value 193.129053 ## iter 60 value 192.656059 ## iter 70 value 192.538825 ## iter 80 value 192.532510 ## iter 90 value 192.525963 ## iter 100 value 192.525227 ## final value 192.525227 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.091415 ## iter 10 value 357.276691 ## iter 20 value 220.579931 ## iter 30 value 202.286737 ## iter 40 value 194.292281 ## iter 50 value 192.533028 ## iter 60 value 192.303801 ## iter 70 value 192.182986 ## iter 80 value 192.157261 ## iter 90 value 192.145745 ## iter 100 value 192.132763 ## final value 192.132763 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 576.836819 ## iter 10 value 334.537465 ## iter 20 value 208.721447 ## iter 30 value 197.558118 ## iter 40 value 195.027977 ## iter 50 value 194.291044 ## iter 60 value 193.885928 ## iter 70 value 193.870681 ## iter 80 value 193.860331 ## iter 90 value 193.854522 ## iter 100 value 193.854222 ## final value 193.854222 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 639.011243 ## iter 10 value 415.305638 ## iter 20 value 222.645647 ## iter 30 value 206.059051 ## iter 40 value 203.175890 ## iter 50 value 201.851160 ## iter 60 value 201.727076 ## iter 70 value 201.669052 ## iter 80 value 201.636504 ## iter 90 value 201.634382 ## iter 100 value 201.634141 ## final value 201.634141 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.986301 ## iter 10 value 381.471018 ## iter 20 value 212.338812 ## iter 30 value 199.713285 ## iter 40 value 197.482383 ## iter 50 value 196.349100 ## iter 60 value 196.287352 ## iter 70 value 196.287007 ## iter 80 value 196.285358 ## iter 90 value 196.284973 ## final value 196.284947 ## converged ## # weights: 360 (238 variable) ## initial value 576.302234 ## iter 10 value 350.310677 ## iter 20 value 222.832779 ## iter 30 value 208.108140 ## iter 40 value 202.081611 ## iter 50 value 200.879579 ## iter 60 value 200.766764 ## iter 70 value 200.728087 ## iter 80 value 200.726611 ## final value 200.726501 ## converged ## # weights: 360 (238 variable) ## initial value 621.588241 ## iter 10 value 366.461273 ## iter 20 value 206.374033 ## iter 30 value 192.533284 ## iter 40 value 187.446786 ## iter 50 value 185.995675 ## iter 60 value 185.954164 ## iter 70 value 185.908189 ## iter 80 value 185.901897 ## iter 90 value 185.901323 ## final value 185.901276 ## converged ## # weights: 360 (238 variable) ## initial value 617.509423 ## iter 10 value 407.470582 ## iter 20 value 230.646357 ## iter 30 value 210.784196 ## iter 40 value 203.270869 ## iter 50 value 201.523348 ## iter 60 value 201.395801 ## iter 70 value 201.313855 ## iter 80 value 201.303086 ## iter 90 value 201.295828 ## iter 100 value 201.295165 ## final value 201.295165 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.504333 ## iter 10 value 358.435506 ## iter 20 value 217.204249 ## iter 30 value 203.837409 ## iter 40 value 199.844749 ## iter 50 value 199.045928 ## iter 60 value 198.992248 ## iter 70 value 198.934558 ## iter 80 value 198.931359 ## iter 90 value 198.931097 ## final value 198.931084 ## converged ## # weights: 360 (238 variable) ## initial value 604.609628 ## iter 10 value 341.716456 ## iter 20 value 198.118646 ## iter 30 value 181.350052 ## iter 40 value 178.294572 ## iter 50 value 177.412436 ## iter 60 value 177.327673 ## iter 70 value 177.303122 ## iter 80 value 177.286864 ## iter 90 value 177.283162 ## iter 100 value 177.282856 ## final value 177.282856 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.807277 ## iter 10 value 365.098376 ## iter 20 value 211.650559 ## iter 30 value 189.526883 ## iter 40 value 182.241144 ## iter 50 value 180.429884 ## iter 60 value 179.804380 ## iter 70 value 179.690396 ## iter 80 value 179.671090 ## iter 90 value 179.666571 ## iter 100 value 179.660547 ## final value 179.660547 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 574.737591 ## iter 10 value 362.508331 ## iter 20 value 223.679673 ## iter 30 value 209.675825 ## iter 40 value 205.975801 ## iter 50 value 204.450068 ## iter 60 value 204.370148 ## iter 70 value 204.298972 ## iter 80 value 204.287444 ## iter 90 value 204.286535 ## iter 100 value 204.286430 ## final value 204.286430 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.939548 ## iter 10 value 348.852769 ## iter 20 value 222.273910 ## iter 30 value 207.044205 ## iter 40 value 201.085160 ## iter 50 value 199.936773 ## iter 60 value 199.825388 ## iter 70 value 199.792123 ## iter 80 value 199.791017 ## final value 199.790978 ## converged ## # weights: 360 (238 variable) ## initial value 617.334744 ## iter 10 value 366.832520 ## iter 20 value 230.611384 ## iter 30 value 213.947749 ## iter 40 value 208.213903 ## iter 50 value 206.597321 ## iter 60 value 206.530964 ## iter 70 value 206.490595 ## iter 80 value 206.464852 ## iter 90 value 206.458878 ## iter 100 value 206.458557 ## final value 206.458557 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.572318 ## iter 10 value 356.775711 ## iter 20 value 221.232657 ## iter 30 value 210.511457 ## iter 40 value 207.828391 ## iter 50 value 206.387594 ## iter 60 value 206.336774 ## iter 70 value 206.319326 ## iter 80 value 206.314162 ## iter 90 value 206.313970 ## final value 206.313960 ## converged ## # weights: 360 (238 variable) ## initial value 640.680035 ## iter 10 value 382.312809 ## iter 20 value 222.983296 ## iter 30 value 206.460698 ## iter 40 value 200.984607 ## iter 50 value 197.085609 ## iter 60 value 196.806077 ## iter 70 value 196.752670 ## iter 80 value 196.742494 ## iter 90 value 196.739507 ## iter 100 value 196.739360 ## final value 196.739360 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.838338 ## iter 10 value 360.811549 ## iter 20 value 203.910047 ## iter 30 value 188.252572 ## iter 40 value 182.520800 ## iter 50 value 181.727891 ## iter 60 value 181.587421 ## iter 70 value 181.521215 ## iter 80 value 181.516153 ## iter 90 value 181.515615 ## final value 181.515579 ## converged ## # weights: 360 (238 variable) ## initial value 630.633336 ## iter 10 value 349.166629 ## iter 20 value 206.241223 ## iter 30 value 191.650947 ## iter 40 value 187.353391 ## iter 50 value 186.227762 ## iter 60 value 186.194776 ## iter 70 value 186.155816 ## iter 80 value 186.153128 ## iter 90 value 186.152921 ## final value 186.152906 ## converged ## # weights: 360 (238 variable) ## initial value 607.808237 ## iter 10 value 393.138179 ## iter 20 value 206.388481 ## iter 30 value 193.513070 ## iter 40 value 188.854591 ## iter 50 value 187.008168 ## iter 60 value 186.949248 ## iter 70 value 186.903321 ## iter 80 value 186.887044 ## iter 90 value 186.886138 ## iter 100 value 186.886029 ## final value 186.886029 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.498233 ## iter 10 value 384.589105 ## iter 20 value 222.117324 ## iter 30 value 204.724974 ## iter 40 value 199.541387 ## iter 50 value 198.925618 ## iter 60 value 198.840365 ## iter 70 value 198.804046 ## iter 80 value 198.777796 ## iter 90 value 198.776405 ## iter 100 value 198.776291 ## final value 198.776291 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 568.426832 ## iter 10 value 341.694329 ## iter 20 value 189.549121 ## iter 30 value 176.649759 ## iter 40 value 172.977232 ## iter 50 value 171.957494 ## iter 60 value 171.920543 ## iter 70 value 171.889210 ## iter 80 value 171.876824 ## iter 90 value 171.876029 ## final value 171.875944 ## converged ## # weights: 360 (238 variable) ## initial value 593.155826 ## iter 10 value 396.651287 ## iter 20 value 224.425370 ## iter 30 value 208.668036 ## iter 40 value 202.648543 ## iter 50 value 200.940030 ## iter 60 value 200.890226 ## iter 70 value 200.837297 ## iter 80 value 200.831309 ## iter 90 value 200.830956 ## final value 200.830920 ## converged ## # weights: 360 (238 variable) ## initial value 617.108869 ## iter 10 value 393.575615 ## iter 20 value 231.919697 ## iter 30 value 215.719822 ## iter 40 value 210.106260 ## iter 50 value 206.663173 ## iter 60 value 206.532414 ## iter 70 value 206.489862 ## iter 80 value 206.473228 ## iter 90 value 206.472090 ## final value 206.472028 ## converged ## # weights: 360 (238 variable) ## initial value 600.540368 ## iter 10 value 367.902266 ## iter 20 value 196.624860 ## iter 30 value 178.560575 ## iter 40 value 175.285747 ## iter 50 value 174.473747 ## iter 60 value 174.418108 ## iter 70 value 174.389512 ## iter 80 value 174.368646 ## iter 90 value 174.366353 ## iter 100 value 174.366190 ## final value 174.366190 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.100656 ## iter 10 value 361.196778 ## iter 20 value 218.976445 ## iter 30 value 201.719752 ## iter 40 value 194.036192 ## iter 50 value 190.841206 ## iter 60 value 190.648288 ## iter 70 value 190.560966 ## iter 80 value 190.541978 ## iter 90 value 190.540784 ## final value 190.540635 ## converged ## # weights: 360 (238 variable) ## initial value 589.656416 ## iter 10 value 326.898038 ## iter 20 value 195.017660 ## iter 30 value 177.365500 ## iter 40 value 170.594653 ## iter 50 value 168.321748 ## iter 60 value 168.262101 ## iter 70 value 168.203067 ## iter 80 value 168.193097 ## iter 90 value 168.192111 ## final value 168.192078 ## converged ## # weights: 360 (238 variable) ## initial value 596.098349 ## iter 10 value 350.799616 ## iter 20 value 225.817444 ## iter 30 value 213.582397 ## iter 40 value 208.698155 ## iter 50 value 206.824551 ## iter 60 value 206.786088 ## iter 70 value 206.763686 ## iter 80 value 206.762153 ## final value 206.762051 ## converged ## # weights: 360 (238 variable) ## initial value 631.685807 ## iter 10 value 399.692626 ## iter 20 value 225.093018 ## iter 30 value 208.135604 ## iter 40 value 202.804728 ## iter 50 value 198.517171 ## iter 60 value 198.216167 ## iter 70 value 198.160952 ## iter 80 value 198.157843 ## iter 90 value 198.157532 ## final value 198.157506 ## converged ## # weights: 360 (238 variable) ## initial value 611.093088 ## iter 10 value 378.716091 ## iter 20 value 217.830064 ## iter 30 value 202.419955 ## iter 40 value 196.099016 ## iter 50 value 195.312514 ## iter 60 value 195.170967 ## iter 70 value 195.142004 ## iter 80 value 195.138560 ## iter 90 value 195.138345 ## final value 195.138302 ## converged ## # weights: 360 (238 variable) ## initial value 588.634706 ## iter 10 value 356.494466 ## iter 20 value 210.045727 ## iter 30 value 197.165523 ## iter 40 value 193.775989 ## iter 50 value 192.742649 ## iter 60 value 192.662887 ## iter 70 value 192.596946 ## iter 80 value 192.587079 ## iter 90 value 192.586476 ## final value 192.586425 ## converged ## # weights: 360 (238 variable) ## initial value 607.989948 ## iter 10 value 381.300183 ## iter 20 value 209.760716 ## iter 30 value 193.240938 ## iter 40 value 186.668277 ## iter 50 value 185.049267 ## iter 60 value 184.876075 ## iter 70 value 184.843730 ## iter 80 value 184.840073 ## iter 90 value 184.839826 ## final value 184.839798 ## converged ## # weights: 360 (238 variable) ## initial value 587.913577 ## iter 10 value 339.743362 ## iter 20 value 193.596393 ## iter 30 value 176.566825 ## iter 40 value 172.563151 ## iter 50 value 171.719324 ## iter 60 value 171.661230 ## iter 70 value 171.646166 ## iter 80 value 171.622876 ## iter 90 value 171.620293 ## iter 100 value 171.620207 ## final value 171.620207 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.568335 ## iter 10 value 409.601012 ## iter 20 value 223.763642 ## iter 30 value 209.855011 ## iter 40 value 206.683302 ## iter 50 value 205.370370 ## iter 60 value 205.279565 ## iter 70 value 205.222170 ## iter 80 value 205.218700 ## iter 90 value 205.218338 ## final value 205.218312 ## converged ## # weights: 360 (238 variable) ## initial value 604.340358 ## iter 10 value 358.423742 ## iter 20 value 213.668007 ## iter 30 value 193.940611 ## iter 40 value 188.459148 ## iter 50 value 186.708001 ## iter 60 value 186.473712 ## iter 70 value 186.388142 ## iter 80 value 186.357215 ## iter 90 value 186.344644 ## iter 100 value 186.339428 ## final value 186.339428 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 572.721637 ## iter 10 value 350.509773 ## iter 20 value 195.517267 ## iter 30 value 175.693925 ## iter 40 value 168.872906 ## iter 50 value 167.961703 ## iter 60 value 167.891831 ## iter 70 value 167.824896 ## iter 80 value 167.812709 ## iter 90 value 167.811612 ## iter 100 value 167.811398 ## final value 167.811398 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.236057 ## iter 10 value 384.361817 ## iter 20 value 230.566484 ## iter 30 value 207.530354 ## iter 40 value 197.422842 ## iter 50 value 196.586947 ## iter 60 value 196.412577 ## iter 70 value 196.296353 ## iter 80 value 196.289631 ## iter 90 value 196.288889 ## final value 196.288862 ## converged ## # weights: 360 (238 variable) ## initial value 599.341233 ## iter 10 value 382.305257 ## iter 20 value 233.444860 ## iter 30 value 214.231594 ## iter 40 value 208.950777 ## iter 50 value 207.569098 ## iter 60 value 207.439939 ## iter 70 value 207.374302 ## iter 80 value 207.338475 ## iter 90 value 207.336240 ## iter 100 value 207.335955 ## final value 207.335955 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.482926 ## iter 10 value 318.660107 ## iter 20 value 204.201287 ## iter 30 value 191.972278 ## iter 40 value 189.605485 ## iter 50 value 187.179190 ## iter 60 value 186.942165 ## iter 70 value 186.939723 ## iter 80 value 186.928653 ## iter 90 value 186.927517 ## final value 186.927462 ## converged ## # weights: 360 (238 variable) ## initial value 588.256564 ## iter 10 value 359.772178 ## iter 20 value 232.862319 ## iter 30 value 218.269351 ## iter 40 value 210.521350 ## iter 50 value 209.486162 ## iter 60 value 209.307250 ## iter 70 value 209.254261 ## iter 80 value 209.252602 ## final value 209.252482 ## converged ## # weights: 360 (238 variable) ## initial value 612.170497 ## iter 10 value 383.916865 ## iter 20 value 214.619263 ## iter 30 value 200.007687 ## iter 40 value 195.279180 ## iter 50 value 194.263650 ## iter 60 value 194.178646 ## iter 70 value 194.107597 ## iter 80 value 194.102918 ## iter 90 value 194.102537 ## final value 194.102509 ## converged ## # weights: 360 (238 variable) ## initial value 598.786214 ## iter 10 value 366.986851 ## iter 20 value 201.501170 ## iter 30 value 187.119152 ## iter 40 value 184.793094 ## iter 50 value 182.814719 ## iter 60 value 182.620552 ## iter 70 value 182.618957 ## iter 80 value 182.615788 ## iter 90 value 182.614653 ## iter 100 value 182.614253 ## final value 182.614253 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.099753 ## iter 10 value 358.601046 ## iter 20 value 189.485964 ## iter 30 value 168.428922 ## iter 40 value 164.435472 ## iter 50 value 161.876933 ## iter 60 value 161.298281 ## iter 70 value 161.170899 ## iter 80 value 161.117161 ## iter 90 value 161.094808 ## iter 100 value 161.092675 ## final value 161.092675 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.217800 ## iter 10 value 419.654806 ## iter 20 value 230.795835 ## iter 30 value 210.302528 ## iter 40 value 202.617168 ## iter 50 value 201.173397 ## iter 60 value 200.890924 ## iter 70 value 200.847692 ## iter 80 value 200.809899 ## iter 90 value 200.790606 ## iter 100 value 200.783858 ## final value 200.783858 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.765045 ## iter 10 value 388.533074 ## iter 20 value 199.822949 ## iter 30 value 182.425867 ## iter 40 value 178.258593 ## iter 50 value 176.958938 ## iter 60 value 176.849765 ## iter 70 value 176.778556 ## iter 80 value 176.765133 ## iter 90 value 176.764524 ## iter 100 value 176.764425 ## final value 176.764425 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.801200 ## iter 10 value 394.155386 ## iter 20 value 219.888622 ## iter 30 value 197.221023 ## iter 40 value 187.564194 ## iter 50 value 182.923117 ## iter 60 value 182.079378 ## iter 70 value 181.936730 ## iter 80 value 181.905598 ## iter 90 value 181.899091 ## iter 100 value 181.898093 ## final value 181.898093 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.823747 ## iter 10 value 390.541985 ## iter 20 value 215.160811 ## iter 30 value 198.291933 ## iter 40 value 193.878177 ## iter 50 value 191.930765 ## iter 60 value 191.808021 ## iter 70 value 191.740168 ## iter 80 value 191.704042 ## iter 90 value 191.700825 ## iter 100 value 191.700468 ## final value 191.700468 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.999034 ## iter 10 value 345.623832 ## iter 20 value 222.131377 ## iter 30 value 201.598171 ## iter 40 value 193.047903 ## iter 50 value 192.242332 ## iter 60 value 192.120507 ## iter 70 value 192.087303 ## iter 80 value 192.068525 ## iter 90 value 192.058483 ## iter 100 value 192.053180 ## final value 192.053180 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.707900 ## iter 10 value 358.484915 ## iter 20 value 206.776131 ## iter 30 value 188.340059 ## iter 40 value 183.836391 ## iter 50 value 181.956055 ## iter 60 value 181.786947 ## iter 70 value 181.744117 ## iter 80 value 181.706134 ## iter 90 value 181.704419 ## iter 100 value 181.704256 ## final value 181.704256 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.184467 ## iter 10 value 369.384985 ## iter 20 value 219.552883 ## iter 30 value 202.890162 ## iter 40 value 199.454304 ## iter 50 value 199.050760 ## iter 60 value 198.982787 ## iter 70 value 198.932310 ## iter 80 value 198.912395 ## iter 90 value 198.911123 ## iter 100 value 198.910557 ## final value 198.910557 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.501524 ## iter 10 value 378.730200 ## iter 20 value 235.904727 ## iter 30 value 218.882406 ## iter 40 value 215.414737 ## iter 50 value 213.525016 ## iter 60 value 213.375787 ## iter 70 value 213.354598 ## iter 80 value 213.353035 ## final value 213.352977 ## converged ## # weights: 360 (238 variable) ## initial value 644.059806 ## iter 10 value 399.929986 ## iter 20 value 214.535996 ## iter 30 value 197.582265 ## iter 40 value 194.023318 ## iter 50 value 193.167033 ## iter 60 value 193.065079 ## iter 70 value 193.030808 ## iter 80 value 193.009293 ## iter 90 value 193.007205 ## iter 100 value 193.007001 ## final value 193.007001 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 568.330264 ## iter 10 value 325.464963 ## iter 20 value 214.792560 ## iter 30 value 199.309642 ## iter 40 value 194.684519 ## iter 50 value 194.118107 ## iter 60 value 193.945136 ## iter 70 value 193.899619 ## iter 80 value 193.895937 ## iter 90 value 193.895374 ## iter 100 value 193.895261 ## final value 193.895261 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.358817 ## iter 10 value 354.741900 ## iter 20 value 197.056522 ## iter 30 value 182.746881 ## iter 40 value 180.322400 ## iter 50 value 178.523798 ## iter 60 value 178.088074 ## iter 70 value 178.042878 ## iter 80 value 177.999348 ## iter 90 value 177.988884 ## iter 100 value 177.988168 ## final value 177.988168 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.060686 ## iter 10 value 343.479804 ## iter 20 value 205.613890 ## iter 30 value 186.312871 ## iter 40 value 180.855261 ## iter 50 value 178.725211 ## iter 60 value 178.527226 ## iter 70 value 178.475112 ## iter 80 value 178.445090 ## iter 90 value 178.435971 ## iter 100 value 178.430775 ## final value 178.430775 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 634.299405 ## iter 10 value 367.667811 ## iter 20 value 210.791087 ## iter 30 value 195.084736 ## iter 40 value 192.554916 ## iter 50 value 190.919998 ## iter 60 value 190.604269 ## iter 70 value 190.584956 ## iter 80 value 190.579138 ## iter 90 value 190.577631 ## iter 100 value 190.577503 ## final value 190.577503 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.368209 ## iter 10 value 366.927266 ## iter 20 value 183.399982 ## iter 30 value 168.305927 ## iter 40 value 165.685157 ## iter 50 value 164.443099 ## iter 60 value 164.119545 ## iter 70 value 164.109722 ## iter 80 value 164.100990 ## iter 90 value 164.096734 ## iter 100 value 164.094192 ## final value 164.094192 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.429731 ## iter 10 value 339.686613 ## iter 20 value 194.773510 ## iter 30 value 180.401839 ## iter 40 value 176.700062 ## iter 50 value 175.362734 ## iter 60 value 175.198117 ## iter 70 value 175.181867 ## iter 80 value 175.160279 ## iter 90 value 175.150252 ## iter 100 value 175.149667 ## final value 175.149667 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.675665 ## iter 10 value 344.052501 ## iter 20 value 205.970155 ## iter 30 value 190.020524 ## iter 40 value 182.914404 ## iter 50 value 181.750899 ## iter 60 value 181.667476 ## iter 70 value 181.619332 ## iter 80 value 181.597892 ## iter 90 value 181.596274 ## iter 100 value 181.596018 ## final value 181.596018 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.389231 ## iter 10 value 341.036856 ## iter 20 value 207.428411 ## iter 30 value 193.506585 ## iter 40 value 191.890568 ## iter 50 value 191.550321 ## iter 60 value 191.523297 ## iter 70 value 191.518134 ## iter 80 value 191.495819 ## iter 90 value 191.490639 ## iter 100 value 191.489828 ## final value 191.489828 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.390075 ## iter 10 value 393.142897 ## iter 20 value 237.494944 ## iter 30 value 217.268988 ## iter 40 value 212.834521 ## iter 50 value 210.911890 ## iter 60 value 210.745912 ## iter 70 value 210.681513 ## iter 80 value 210.659783 ## iter 90 value 210.658055 ## iter 100 value 210.657836 ## final value 210.657836 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 562.390617 ## iter 10 value 336.884931 ## iter 20 value 214.530262 ## iter 30 value 192.256089 ## iter 40 value 184.730778 ## iter 50 value 183.398532 ## iter 60 value 183.273590 ## iter 70 value 183.190687 ## iter 80 value 183.175803 ## iter 90 value 183.174824 ## final value 183.174727 ## converged ## # weights: 360 (238 variable) ## initial value 579.526442 ## iter 10 value 380.919823 ## iter 20 value 219.268834 ## iter 30 value 203.412671 ## iter 40 value 198.265913 ## iter 50 value 197.390597 ## iter 60 value 197.329151 ## iter 70 value 197.264522 ## iter 80 value 197.256657 ## iter 90 value 197.256064 ## final value 197.256040 ## converged ## # weights: 360 (238 variable) ## initial value 612.851747 ## iter 10 value 362.874607 ## iter 20 value 217.313133 ## iter 30 value 199.078186 ## iter 40 value 194.233821 ## iter 50 value 193.598386 ## iter 60 value 193.525358 ## iter 70 value 193.474610 ## iter 80 value 193.460561 ## iter 90 value 193.455454 ## iter 100 value 193.450209 ## final value 193.450209 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.607995 ## iter 10 value 397.074210 ## iter 20 value 211.256177 ## iter 30 value 193.814753 ## iter 40 value 187.620389 ## iter 50 value 186.104607 ## iter 60 value 185.831790 ## iter 70 value 185.755906 ## iter 80 value 185.699402 ## iter 90 value 185.691635 ## iter 100 value 185.691100 ## final value 185.691100 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.443448 ## iter 10 value 386.747049 ## iter 20 value 240.095512 ## iter 30 value 221.645323 ## iter 40 value 214.431381 ## iter 50 value 213.439282 ## iter 60 value 213.327699 ## iter 70 value 213.256396 ## iter 80 value 213.251435 ## iter 90 value 213.242561 ## iter 100 value 213.241030 ## final value 213.241030 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.161952 ## iter 10 value 412.924020 ## iter 20 value 182.500560 ## iter 30 value 166.243043 ## iter 40 value 159.356502 ## iter 50 value 156.951041 ## iter 60 value 156.660682 ## iter 70 value 156.629776 ## iter 80 value 156.624034 ## iter 90 value 156.623770 ## final value 156.623750 ## converged ## # weights: 360 (238 variable) ## initial value 590.527286 ## iter 10 value 364.567070 ## iter 20 value 210.566293 ## iter 30 value 192.483068 ## iter 40 value 186.871790 ## iter 50 value 185.944544 ## iter 60 value 185.789927 ## iter 70 value 185.735961 ## iter 80 value 185.733112 ## iter 90 value 185.732711 ## final value 185.732703 ## converged ## # weights: 360 (238 variable) ## initial value 581.890106 ## iter 10 value 335.100303 ## iter 20 value 213.613529 ## iter 30 value 202.176237 ## iter 40 value 199.901455 ## iter 50 value 199.195120 ## iter 60 value 199.049757 ## iter 70 value 199.037306 ## iter 80 value 199.036751 ## iter 90 value 199.034579 ## iter 100 value 199.034221 ## final value 199.034221 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.805420 ## iter 10 value 355.835974 ## iter 20 value 227.559493 ## iter 30 value 209.556651 ## iter 40 value 203.779104 ## iter 50 value 202.062290 ## iter 60 value 201.914749 ## iter 70 value 201.852103 ## iter 80 value 201.848349 ## iter 90 value 201.848000 ## final value 201.847982 ## converged ## # weights: 360 (238 variable) ## initial value 595.906861 ## iter 10 value 379.081419 ## iter 20 value 190.303948 ## iter 30 value 174.265171 ## iter 40 value 170.231354 ## iter 50 value 169.144259 ## iter 60 value 169.025891 ## iter 70 value 168.991821 ## iter 80 value 168.972180 ## iter 90 value 168.971439 ## iter 100 value 168.971372 ## final value 168.971372 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 638.697480 ## iter 10 value 388.750663 ## iter 20 value 225.208086 ## iter 30 value 208.532353 ## iter 40 value 201.717856 ## iter 50 value 200.131469 ## iter 60 value 200.036054 ## iter 70 value 199.970885 ## iter 80 value 199.967737 ## final value 199.967525 ## converged ## # weights: 360 (238 variable) ## initial value 635.307821 ## iter 10 value 369.959253 ## iter 20 value 215.443376 ## iter 30 value 195.796778 ## iter 40 value 186.347339 ## iter 50 value 184.005620 ## iter 60 value 183.866664 ## iter 70 value 183.833285 ## iter 80 value 183.794363 ## iter 90 value 183.788362 ## iter 100 value 183.787929 ## final value 183.787929 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.000215 ## iter 10 value 372.585858 ## iter 20 value 203.109555 ## iter 30 value 183.868674 ## iter 40 value 180.290927 ## iter 50 value 178.352441 ## iter 60 value 178.220545 ## iter 70 value 178.186685 ## iter 80 value 178.162970 ## iter 90 value 178.157097 ## iter 100 value 178.149699 ## final value 178.149699 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.404952 ## iter 10 value 365.880762 ## iter 20 value 234.252402 ## iter 30 value 221.183597 ## iter 40 value 216.188934 ## iter 50 value 213.737261 ## iter 60 value 213.296017 ## iter 70 value 213.272601 ## iter 80 value 213.268702 ## iter 90 value 213.268499 ## final value 213.268478 ## converged ## # weights: 360 (238 variable) ## initial value 590.867746 ## iter 10 value 366.281189 ## iter 20 value 212.450950 ## iter 30 value 198.499721 ## iter 40 value 193.824690 ## iter 50 value 192.931345 ## iter 60 value 192.827626 ## iter 70 value 192.771317 ## iter 80 value 192.766004 ## iter 90 value 192.765634 ## final value 192.765581 ## converged ## # weights: 360 (238 variable) ## initial value 611.187569 ## iter 10 value 350.852381 ## iter 20 value 211.279317 ## iter 30 value 198.547754 ## iter 40 value 195.873737 ## iter 50 value 194.877331 ## iter 60 value 194.806318 ## iter 70 value 194.783105 ## iter 80 value 194.779700 ## iter 90 value 194.779567 ## iter 90 value 194.779566 ## iter 90 value 194.779566 ## final value 194.779566 ## converged ## # weights: 360 (238 variable) ## initial value 604.335634 ## iter 10 value 402.812418 ## iter 20 value 229.531884 ## iter 30 value 210.373093 ## iter 40 value 204.261380 ## iter 50 value 202.673473 ## iter 60 value 202.537539 ## iter 70 value 202.477245 ## iter 80 value 202.471228 ## iter 90 value 202.470592 ## final value 202.470506 ## converged ## # weights: 360 (238 variable) ## initial value 586.523284 ## iter 10 value 339.698503 ## iter 20 value 181.973642 ## iter 30 value 167.896539 ## iter 40 value 165.147146 ## iter 50 value 164.597472 ## iter 60 value 164.490981 ## iter 70 value 164.489944 ## iter 80 value 164.485596 ## iter 90 value 164.484276 ## iter 100 value 164.484233 ## final value 164.484233 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.804761 ## iter 10 value 343.245630 ## iter 20 value 225.853493 ## iter 30 value 213.990068 ## iter 40 value 211.833640 ## iter 50 value 211.235903 ## iter 60 value 210.956645 ## iter 70 value 210.954424 ## final value 210.954419 ## converged ## # weights: 360 (238 variable) ## initial value 618.131897 ## iter 10 value 357.125579 ## iter 20 value 221.179761 ## iter 30 value 202.338205 ## iter 40 value 197.298945 ## iter 50 value 194.357900 ## iter 60 value 194.156870 ## iter 70 value 194.077855 ## iter 80 value 194.036122 ## iter 90 value 194.031828 ## iter 100 value 194.031230 ## final value 194.031230 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.718952 ## iter 10 value 382.633737 ## iter 20 value 217.855072 ## iter 30 value 201.273626 ## iter 40 value 196.688702 ## iter 50 value 195.062204 ## iter 60 value 194.918926 ## iter 70 value 194.879946 ## iter 80 value 194.839765 ## iter 90 value 194.837156 ## iter 100 value 194.836949 ## final value 194.836949 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.110233 ## iter 10 value 361.353814 ## iter 20 value 205.497039 ## iter 30 value 190.864007 ## iter 40 value 185.623151 ## iter 50 value 183.958063 ## iter 60 value 183.846375 ## iter 70 value 183.762335 ## iter 80 value 183.747208 ## iter 90 value 183.745835 ## iter 100 value 183.745681 ## final value 183.745681 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.774241 ## iter 10 value 385.652129 ## iter 20 value 223.355540 ## iter 30 value 205.481688 ## iter 40 value 198.796765 ## iter 50 value 198.020860 ## iter 60 value 197.840708 ## iter 70 value 197.819528 ## iter 80 value 197.817945 ## final value 197.817827 ## converged ## # weights: 360 (238 variable) ## initial value 598.739852 ## iter 10 value 365.866990 ## iter 20 value 197.704572 ## iter 30 value 184.338877 ## iter 40 value 178.077121 ## iter 50 value 175.943420 ## iter 60 value 175.686129 ## iter 70 value 175.662265 ## iter 80 value 175.651255 ## iter 90 value 175.651004 ## iter 100 value 175.650572 ## final value 175.650572 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.957793 ## iter 10 value 356.709211 ## iter 20 value 215.911826 ## iter 30 value 199.012584 ## iter 40 value 192.948040 ## iter 50 value 191.984653 ## iter 60 value 191.907162 ## iter 70 value 191.861958 ## iter 80 value 191.853659 ## iter 90 value 191.852134 ## iter 100 value 191.851892 ## final value 191.851892 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.414225 ## iter 10 value 408.248707 ## iter 20 value 219.537147 ## iter 30 value 200.962643 ## iter 40 value 195.037240 ## iter 50 value 193.264595 ## iter 60 value 193.044653 ## iter 70 value 192.926412 ## iter 80 value 192.897063 ## iter 90 value 192.895290 ## iter 100 value 192.895106 ## final value 192.895106 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 630.106661 ## iter 10 value 341.297538 ## iter 20 value 207.015964 ## iter 30 value 188.787784 ## iter 40 value 182.690929 ## iter 50 value 181.323059 ## iter 60 value 181.243076 ## iter 70 value 181.189165 ## iter 80 value 181.175860 ## iter 90 value 181.174003 ## iter 100 value 181.173871 ## final value 181.173871 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.107499 ## iter 10 value 386.562182 ## iter 20 value 235.358587 ## iter 30 value 222.326417 ## iter 40 value 220.222544 ## iter 50 value 218.969177 ## iter 60 value 218.885214 ## iter 70 value 218.826889 ## iter 80 value 218.823986 ## iter 90 value 218.823842 ## iter 90 value 218.823840 ## iter 90 value 218.823840 ## final value 218.823840 ## converged ## # weights: 360 (238 variable) ## initial value 578.684575 ## iter 10 value 361.181273 ## iter 20 value 199.855419 ## iter 30 value 185.987867 ## iter 40 value 183.088509 ## iter 50 value 181.597274 ## iter 60 value 181.563867 ## iter 70 value 181.524021 ## iter 80 value 181.518605 ## iter 90 value 181.518306 ## final value 181.518292 ## converged ## # weights: 360 (238 variable) ## initial value 614.508234 ## iter 10 value 355.972308 ## iter 20 value 217.959949 ## iter 30 value 200.916833 ## iter 40 value 195.835187 ## iter 50 value 194.584641 ## iter 60 value 194.428985 ## iter 70 value 194.357779 ## iter 80 value 194.333868 ## iter 90 value 194.319359 ## iter 100 value 194.317498 ## final value 194.317498 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.235567 ## iter 10 value 376.429787 ## iter 20 value 221.997705 ## iter 30 value 204.848150 ## iter 40 value 200.762682 ## iter 50 value 198.985895 ## iter 60 value 198.800640 ## iter 70 value 198.727232 ## iter 80 value 198.683423 ## iter 90 value 198.676515 ## iter 100 value 198.675865 ## final value 198.675865 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.363593 ## iter 10 value 383.547695 ## iter 20 value 211.019906 ## iter 30 value 193.842529 ## iter 40 value 188.683770 ## iter 50 value 186.922222 ## iter 60 value 186.799110 ## iter 70 value 186.744438 ## iter 80 value 186.714730 ## iter 90 value 186.712375 ## iter 100 value 186.712181 ## final value 186.712181 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 640.558529 ## iter 10 value 408.879575 ## iter 20 value 220.189627 ## iter 30 value 204.898769 ## iter 40 value 198.222278 ## iter 50 value 197.422751 ## iter 60 value 197.297803 ## iter 70 value 197.222569 ## iter 80 value 197.195779 ## iter 90 value 197.184549 ## iter 100 value 197.182382 ## final value 197.182382 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.424572 ## iter 10 value 415.979286 ## iter 20 value 198.504469 ## iter 30 value 176.917459 ## iter 40 value 167.396176 ## iter 50 value 165.724774 ## iter 60 value 165.331412 ## iter 70 value 165.266923 ## iter 80 value 165.231811 ## iter 90 value 165.203414 ## iter 100 value 165.190179 ## final value 165.190179 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.739051 ## iter 10 value 334.776998 ## iter 20 value 194.461448 ## iter 30 value 179.152510 ## iter 40 value 173.535279 ## iter 50 value 171.504815 ## iter 60 value 171.341311 ## iter 70 value 171.270421 ## iter 80 value 171.244852 ## iter 90 value 171.240122 ## iter 100 value 171.239592 ## final value 171.239592 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.938544 ## iter 10 value 334.804454 ## iter 20 value 201.404092 ## iter 30 value 180.045405 ## iter 40 value 174.069085 ## iter 50 value 172.514095 ## iter 60 value 172.335307 ## iter 70 value 172.260582 ## iter 80 value 172.226367 ## iter 90 value 172.216733 ## iter 100 value 172.213240 ## final value 172.213240 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 639.436077 ## iter 10 value 382.158244 ## iter 20 value 227.971009 ## iter 30 value 210.424499 ## iter 40 value 205.699684 ## iter 50 value 203.389361 ## iter 60 value 203.328852 ## iter 70 value 203.304364 ## iter 80 value 203.298643 ## iter 90 value 203.293164 ## iter 100 value 203.292707 ## final value 203.292707 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 570.879814 ## iter 10 value 364.186746 ## iter 20 value 222.775817 ## iter 30 value 209.197052 ## iter 40 value 206.938406 ## iter 50 value 205.485199 ## iter 60 value 205.382494 ## iter 70 value 205.377088 ## iter 80 value 205.364698 ## iter 90 value 205.364007 ## final value 205.363973 ## converged ## # weights: 360 (238 variable) ## initial value 574.718914 ## iter 10 value 337.701235 ## iter 20 value 195.839647 ## iter 30 value 182.871993 ## iter 40 value 180.260422 ## iter 50 value 179.144188 ## iter 60 value 178.942890 ## iter 70 value 178.942632 ## iter 80 value 178.942180 ## iter 90 value 178.941490 ## final value 178.941467 ## converged ## # weights: 360 (238 variable) ## initial value 602.790216 ## iter 10 value 399.663422 ## iter 20 value 210.395819 ## iter 30 value 196.581675 ## iter 40 value 192.920863 ## iter 50 value 191.817846 ## iter 60 value 191.726908 ## iter 70 value 191.661297 ## iter 80 value 191.641842 ## iter 90 value 191.640926 ## iter 100 value 191.640798 ## final value 191.640798 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.040853 ## iter 10 value 373.167088 ## iter 20 value 215.947869 ## iter 30 value 203.001736 ## iter 40 value 200.292379 ## iter 50 value 198.636634 ## iter 60 value 198.357551 ## iter 70 value 198.346475 ## iter 80 value 198.338104 ## iter 90 value 198.337342 ## final value 198.337241 ## converged ## # weights: 360 (238 variable) ## initial value 616.087490 ## iter 10 value 367.326593 ## iter 20 value 212.405475 ## iter 30 value 198.613247 ## iter 40 value 195.969838 ## iter 50 value 194.425349 ## iter 60 value 194.356328 ## iter 70 value 194.333003 ## iter 80 value 194.317265 ## iter 90 value 194.314771 ## iter 100 value 194.314569 ## final value 194.314569 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.956119 ## iter 10 value 378.244488 ## iter 20 value 227.997865 ## iter 30 value 209.942148 ## iter 40 value 203.553332 ## iter 50 value 201.983315 ## iter 60 value 201.863175 ## iter 70 value 201.787551 ## iter 80 value 201.767821 ## iter 90 value 201.765714 ## iter 100 value 201.765446 ## final value 201.765446 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 556.463713 ## iter 10 value 333.822072 ## iter 20 value 206.969714 ## iter 30 value 193.440472 ## iter 40 value 191.767530 ## iter 50 value 191.003455 ## iter 60 value 190.873639 ## iter 70 value 190.868225 ## iter 80 value 190.858087 ## iter 90 value 190.857527 ## final value 190.857489 ## converged ## # weights: 360 (238 variable) ## initial value 594.754746 ## iter 10 value 333.499147 ## iter 20 value 207.222002 ## iter 30 value 189.669205 ## iter 40 value 184.225660 ## iter 50 value 183.045457 ## iter 60 value 182.974577 ## iter 70 value 182.920242 ## iter 80 value 182.915621 ## iter 90 value 182.915276 ## final value 182.915263 ## converged ## # weights: 360 (238 variable) ## initial value 626.501895 ## iter 10 value 346.451356 ## iter 20 value 210.754456 ## iter 30 value 196.323550 ## iter 40 value 192.378592 ## iter 50 value 191.032748 ## iter 60 value 190.988879 ## iter 70 value 190.938967 ## iter 80 value 190.929656 ## iter 90 value 190.929127 ## final value 190.929085 ## converged ## # weights: 360 (238 variable) ## initial value 606.215909 ## iter 10 value 392.296898 ## iter 20 value 228.103300 ## iter 30 value 206.901523 ## iter 40 value 198.168427 ## iter 50 value 196.055417 ## iter 60 value 195.908831 ## iter 70 value 195.834784 ## iter 80 value 195.817197 ## iter 90 value 195.816124 ## final value 195.816053 ## converged ## # weights: 360 (238 variable) ## initial value 617.360561 ## iter 10 value 333.926159 ## iter 20 value 206.680114 ## iter 30 value 193.823161 ## iter 40 value 189.931652 ## iter 50 value 189.020941 ## iter 60 value 188.932113 ## iter 70 value 188.902616 ## iter 80 value 188.870795 ## iter 90 value 188.869237 ## iter 100 value 188.869105 ## final value 188.869105 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 633.535650 ## iter 10 value 339.410319 ## iter 20 value 215.876958 ## iter 30 value 199.797710 ## iter 40 value 194.974383 ## iter 50 value 192.138070 ## iter 60 value 191.700554 ## iter 70 value 191.606648 ## iter 80 value 191.592976 ## iter 90 value 191.589886 ## iter 100 value 191.588803 ## final value 191.588803 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 574.050299 ## iter 10 value 335.080761 ## iter 20 value 194.930882 ## iter 30 value 181.489634 ## iter 40 value 172.668357 ## iter 50 value 171.063259 ## iter 60 value 171.005542 ## iter 70 value 170.964999 ## iter 80 value 170.958671 ## iter 90 value 170.958338 ## final value 170.958246 ## converged ## # weights: 360 (238 variable) ## initial value 596.056711 ## iter 10 value 345.568652 ## iter 20 value 219.513616 ## iter 30 value 203.417142 ## iter 40 value 197.396229 ## iter 50 value 196.745340 ## iter 60 value 196.658848 ## iter 70 value 196.609038 ## iter 80 value 196.591097 ## iter 90 value 196.587249 ## iter 100 value 196.586927 ## final value 196.586927 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.486980 ## iter 10 value 373.072274 ## iter 20 value 201.615399 ## iter 30 value 187.903977 ## iter 40 value 184.224753 ## iter 50 value 183.679794 ## iter 60 value 183.620018 ## iter 70 value 183.583786 ## iter 80 value 183.581690 ## final value 183.581565 ## converged ## # weights: 360 (238 variable) ## initial value 607.723205 ## iter 10 value 369.006851 ## iter 20 value 214.209546 ## iter 30 value 195.605832 ## iter 40 value 183.105097 ## iter 50 value 181.309598 ## iter 60 value 181.186987 ## iter 70 value 181.156608 ## iter 80 value 181.154953 ## final value 181.154891 ## converged ## # weights: 360 (238 variable) ## initial value 598.561218 ## iter 10 value 311.375974 ## iter 20 value 197.867964 ## iter 30 value 184.661922 ## iter 40 value 181.732995 ## iter 50 value 180.257748 ## iter 60 value 180.052207 ## iter 70 value 180.006813 ## iter 80 value 179.993258 ## iter 90 value 179.985638 ## iter 100 value 179.984083 ## final value 179.984083 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.659865 ## iter 10 value 340.723874 ## iter 20 value 193.879458 ## iter 30 value 177.616788 ## iter 40 value 171.327950 ## iter 50 value 169.466847 ## iter 60 value 169.272257 ## iter 70 value 169.175163 ## iter 80 value 169.165337 ## iter 90 value 169.157424 ## iter 100 value 169.153443 ## final value 169.153443 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.923282 ## iter 10 value 352.264682 ## iter 20 value 208.993162 ## iter 30 value 194.160257 ## iter 40 value 187.364855 ## iter 50 value 185.175509 ## iter 60 value 184.873250 ## iter 70 value 184.832302 ## iter 80 value 184.827485 ## iter 90 value 184.825581 ## iter 100 value 184.824403 ## final value 184.824403 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.691382 ## iter 10 value 378.024033 ## iter 20 value 220.653302 ## iter 30 value 205.038135 ## iter 40 value 200.561701 ## iter 50 value 199.503306 ## iter 60 value 199.431978 ## iter 70 value 199.399327 ## iter 80 value 199.374953 ## iter 90 value 199.373813 ## iter 100 value 199.373701 ## final value 199.373701 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.817947 ## iter 10 value 357.741753 ## iter 20 value 190.619253 ## iter 30 value 178.676521 ## iter 40 value 176.042489 ## iter 50 value 174.778068 ## iter 60 value 174.629081 ## iter 70 value 174.620321 ## iter 80 value 174.607064 ## iter 90 value 174.605244 ## iter 100 value 174.605125 ## final value 174.605125 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.084216 ## iter 10 value 365.010248 ## iter 20 value 195.529655 ## iter 30 value 184.679556 ## iter 40 value 181.650505 ## iter 50 value 178.496182 ## iter 60 value 178.407988 ## iter 70 value 178.402267 ## iter 80 value 178.401777 ## final value 178.401748 ## converged ## # weights: 360 (238 variable) ## initial value 593.885194 ## iter 10 value 367.804082 ## iter 20 value 241.603875 ## iter 30 value 220.459290 ## iter 40 value 215.164407 ## iter 50 value 214.428892 ## iter 60 value 214.314995 ## iter 70 value 214.243150 ## iter 80 value 214.215159 ## iter 90 value 214.212951 ## iter 100 value 214.212182 ## final value 214.212182 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.923359 ## iter 10 value 383.767586 ## iter 20 value 233.241692 ## iter 30 value 215.783377 ## iter 40 value 207.914971 ## iter 50 value 205.970082 ## iter 60 value 205.765954 ## iter 70 value 205.730276 ## iter 80 value 205.719897 ## iter 90 value 205.719282 ## final value 205.719239 ## converged ## # weights: 360 (238 variable) ## initial value 592.725279 ## iter 10 value 352.134985 ## iter 20 value 199.716607 ## iter 30 value 183.168576 ## iter 40 value 178.203519 ## iter 50 value 176.376096 ## iter 60 value 176.147475 ## iter 70 value 176.129313 ## iter 80 value 176.123331 ## iter 90 value 176.122858 ## final value 176.122830 ## converged ## # weights: 360 (238 variable) ## initial value 626.869271 ## iter 10 value 402.132582 ## iter 20 value 232.797705 ## iter 30 value 217.302817 ## iter 40 value 210.980819 ## iter 50 value 210.117830 ## iter 60 value 210.035504 ## iter 70 value 209.985574 ## iter 80 value 209.983159 ## final value 209.983004 ## converged ## # weights: 360 (238 variable) ## initial value 624.961640 ## iter 10 value 389.212847 ## iter 20 value 217.294947 ## iter 30 value 199.008161 ## iter 40 value 192.615464 ## iter 50 value 190.587905 ## iter 60 value 190.360584 ## iter 70 value 190.295644 ## iter 80 value 190.254579 ## iter 90 value 190.247566 ## iter 100 value 190.246996 ## final value 190.246996 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.236080 ## iter 10 value 330.928213 ## iter 20 value 215.095601 ## iter 30 value 200.532729 ## iter 40 value 195.672997 ## iter 50 value 194.354200 ## iter 60 value 194.205560 ## iter 70 value 194.184584 ## iter 80 value 194.183468 ## final value 194.183332 ## converged ## # weights: 360 (238 variable) ## initial value 593.495736 ## iter 10 value 321.962841 ## iter 20 value 204.950602 ## iter 30 value 192.508500 ## iter 40 value 186.761563 ## iter 50 value 185.745379 ## iter 60 value 185.655072 ## iter 70 value 185.605756 ## iter 80 value 185.589396 ## iter 90 value 185.580949 ## iter 100 value 185.580443 ## final value 185.580443 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 627.557881 ## iter 10 value 386.865435 ## iter 20 value 213.766592 ## iter 30 value 200.400840 ## iter 40 value 194.906966 ## iter 50 value 192.280160 ## iter 60 value 192.094331 ## iter 70 value 192.078157 ## iter 80 value 192.077336 ## final value 192.077300 ## converged ## # weights: 360 (238 variable) ## initial value 610.823379 ## iter 10 value 371.433507 ## iter 20 value 206.520554 ## iter 30 value 195.606639 ## iter 40 value 193.054079 ## iter 50 value 192.612264 ## iter 60 value 192.450326 ## iter 70 value 192.384802 ## final value 192.384700 ## converged ## # weights: 360 (238 variable) ## initial value 583.708859 ## iter 10 value 329.720350 ## iter 20 value 212.534724 ## iter 30 value 195.871353 ## iter 40 value 190.183264 ## iter 50 value 189.164673 ## iter 60 value 189.090388 ## iter 70 value 189.049517 ## iter 80 value 189.023506 ## iter 90 value 189.018111 ## iter 100 value 189.017592 ## final value 189.017592 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.372201 ## iter 10 value 360.276333 ## iter 20 value 201.602174 ## iter 30 value 186.991693 ## iter 40 value 182.571130 ## iter 50 value 181.623015 ## iter 60 value 181.527089 ## iter 70 value 181.472586 ## iter 80 value 181.470893 ## iter 90 value 181.470795 ## iter 90 value 181.470793 ## iter 90 value 181.470793 ## final value 181.470793 ## converged ## # weights: 360 (238 variable) ## initial value 622.734753 ## iter 10 value 367.288510 ## iter 20 value 206.998749 ## iter 30 value 190.764336 ## iter 40 value 184.529711 ## iter 50 value 182.819872 ## iter 60 value 182.729528 ## iter 70 value 182.655051 ## iter 80 value 182.646935 ## iter 90 value 182.646280 ## iter 100 value 182.646189 ## final value 182.646189 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 564.291326 ## iter 10 value 326.266404 ## iter 20 value 215.000701 ## iter 30 value 202.133964 ## iter 40 value 197.556302 ## iter 50 value 192.866790 ## iter 60 value 192.685733 ## iter 70 value 192.640327 ## iter 80 value 192.638461 ## final value 192.638415 ## converged ## # weights: 360 (238 variable) ## initial value 568.409804 ## iter 10 value 355.847599 ## iter 20 value 201.026491 ## iter 30 value 188.610763 ## iter 40 value 186.341908 ## iter 50 value 185.652134 ## iter 60 value 185.636929 ## iter 70 value 185.618123 ## iter 80 value 185.617019 ## iter 90 value 185.616819 ## final value 185.616806 ## converged ## # weights: 360 (238 variable) ## initial value 616.213061 ## iter 10 value 372.285394 ## iter 20 value 213.665107 ## iter 30 value 195.498021 ## iter 40 value 190.103405 ## iter 50 value 188.939244 ## iter 60 value 188.806047 ## iter 70 value 188.774585 ## iter 80 value 188.754892 ## iter 90 value 188.737568 ## iter 100 value 188.735745 ## final value 188.735745 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.526894 ## iter 10 value 336.640663 ## iter 20 value 192.698007 ## iter 30 value 176.310415 ## iter 40 value 169.146776 ## iter 50 value 167.977056 ## iter 60 value 167.864131 ## iter 70 value 167.818274 ## iter 80 value 167.789085 ## iter 90 value 167.782966 ## iter 100 value 167.781768 ## final value 167.781768 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 573.463200 ## iter 10 value 397.445291 ## iter 20 value 213.985270 ## iter 30 value 199.773755 ## iter 40 value 194.808754 ## iter 50 value 193.492080 ## iter 60 value 193.448688 ## iter 70 value 193.405377 ## iter 80 value 193.401717 ## iter 90 value 193.401417 ## final value 193.401392 ## converged ## # weights: 360 (238 variable) ## initial value 598.890911 ## iter 10 value 363.396975 ## iter 20 value 225.028965 ## iter 30 value 204.240096 ## iter 40 value 196.046979 ## iter 50 value 194.663818 ## iter 60 value 194.509023 ## iter 70 value 194.490854 ## iter 80 value 194.462534 ## iter 90 value 194.455552 ## iter 100 value 194.453351 ## final value 194.453351 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.590352 ## iter 10 value 383.268216 ## iter 20 value 232.509896 ## iter 30 value 213.514564 ## iter 40 value 205.712196 ## iter 50 value 203.092395 ## iter 60 value 202.890636 ## iter 70 value 202.834091 ## iter 80 value 202.814905 ## iter 90 value 202.807340 ## iter 100 value 202.798237 ## final value 202.798237 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.258624 ## iter 10 value 342.787244 ## iter 20 value 213.568447 ## iter 30 value 195.780914 ## iter 40 value 187.331731 ## iter 50 value 185.509003 ## iter 60 value 185.326313 ## iter 70 value 185.291661 ## iter 80 value 185.273477 ## iter 90 value 185.270547 ## iter 100 value 185.270079 ## final value 185.270079 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.616809 ## iter 10 value 339.375739 ## iter 20 value 206.352399 ## iter 30 value 191.852962 ## iter 40 value 187.814789 ## iter 50 value 186.449834 ## iter 60 value 186.305730 ## iter 70 value 186.241241 ## iter 80 value 186.233087 ## iter 90 value 186.229452 ## iter 100 value 186.229245 ## final value 186.229245 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.000424 ## iter 10 value 426.298355 ## iter 20 value 228.594433 ## iter 30 value 210.793150 ## iter 40 value 201.811730 ## iter 50 value 200.361826 ## iter 60 value 200.263179 ## iter 70 value 200.195517 ## iter 80 value 200.173446 ## iter 90 value 200.172086 ## iter 100 value 200.171930 ## final value 200.171930 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 621.839933 ## iter 10 value 348.861302 ## iter 20 value 241.785483 ## iter 30 value 225.923873 ## iter 40 value 220.949404 ## iter 50 value 220.059380 ## iter 60 value 220.022312 ## iter 70 value 219.992307 ## iter 80 value 219.990415 ## iter 90 value 219.990288 ## final value 219.990283 ## converged ## # weights: 360 (238 variable) ## initial value 618.036757 ## iter 10 value 369.685775 ## iter 20 value 226.338138 ## iter 30 value 207.777153 ## iter 40 value 200.710167 ## iter 50 value 199.392710 ## iter 60 value 199.290373 ## iter 70 value 199.226444 ## iter 80 value 199.215015 ## iter 90 value 199.212661 ## iter 100 value 199.208043 ## final value 199.208043 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 620.422943 ## iter 10 value 415.124052 ## iter 20 value 236.017780 ## iter 30 value 224.136132 ## iter 40 value 220.219536 ## iter 50 value 218.243139 ## iter 60 value 218.225429 ## iter 70 value 218.195684 ## iter 80 value 218.193443 ## final value 218.193343 ## converged ## # weights: 360 (238 variable) ## initial value 588.713587 ## iter 10 value 361.786285 ## iter 20 value 216.679483 ## iter 30 value 204.421890 ## iter 40 value 202.109512 ## iter 50 value 200.911485 ## iter 60 value 200.533171 ## final value 200.532763 ## converged ## # weights: 360 (238 variable) ## initial value 583.895623 ## iter 10 value 333.945515 ## iter 20 value 202.407603 ## iter 30 value 188.312366 ## iter 40 value 183.096439 ## iter 50 value 182.852000 ## iter 60 value 182.763429 ## iter 70 value 182.754077 ## iter 80 value 182.753577 ## final value 182.753511 ## converged ## # weights: 360 (238 variable) ## initial value 587.829643 ## iter 10 value 348.289349 ## iter 20 value 217.965424 ## iter 30 value 201.095469 ## iter 40 value 196.517893 ## iter 50 value 195.059619 ## iter 60 value 195.016730 ## iter 70 value 194.967921 ## iter 80 value 194.964205 ## iter 90 value 194.963895 ## final value 194.963870 ## converged ## # weights: 360 (238 variable) ## initial value 600.013693 ## iter 10 value 391.830920 ## iter 20 value 213.452835 ## iter 30 value 199.010316 ## iter 40 value 194.707548 ## iter 50 value 194.010286 ## iter 60 value 193.887543 ## iter 70 value 193.833833 ## iter 80 value 193.818915 ## iter 90 value 193.807916 ## iter 100 value 193.807300 ## final value 193.807300 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 621.027400 ## iter 10 value 394.848458 ## iter 20 value 211.292039 ## iter 30 value 195.099071 ## iter 40 value 190.192862 ## iter 50 value 189.509212 ## iter 60 value 189.397585 ## iter 70 value 189.301036 ## iter 80 value 189.295593 ## iter 90 value 189.293587 ## iter 100 value 189.293466 ## final value 189.293466 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.266730 ## iter 10 value 334.495429 ## iter 20 value 188.927679 ## iter 30 value 177.129751 ## iter 40 value 175.344088 ## iter 50 value 174.823173 ## iter 60 value 174.649151 ## iter 70 value 174.645908 ## final value 174.645899 ## converged ## # weights: 360 (238 variable) ## initial value 575.457731 ## iter 10 value 353.114209 ## iter 20 value 198.356629 ## iter 30 value 180.388400 ## iter 40 value 174.752070 ## iter 50 value 173.511311 ## iter 60 value 173.432877 ## iter 70 value 173.395280 ## iter 80 value 173.370783 ## iter 90 value 173.356078 ## iter 100 value 173.354627 ## final value 173.354627 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.194073 ## iter 10 value 331.943618 ## iter 20 value 195.408085 ## iter 30 value 180.393767 ## iter 40 value 176.140309 ## iter 50 value 174.446807 ## iter 60 value 174.091813 ## iter 70 value 174.051495 ## iter 80 value 174.016794 ## iter 90 value 174.000224 ## iter 100 value 173.996871 ## final value 173.996871 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.758038 ## iter 10 value 412.312057 ## iter 20 value 239.591850 ## iter 30 value 222.945423 ## iter 40 value 215.300042 ## iter 50 value 213.391663 ## iter 60 value 213.264063 ## iter 70 value 213.185019 ## iter 80 value 213.166586 ## iter 90 value 213.165639 ## final value 213.165554 ## converged ## # weights: 360 (238 variable) ## initial value 623.554208 ## iter 10 value 410.297577 ## iter 20 value 234.843643 ## iter 30 value 218.041673 ## iter 40 value 208.787976 ## iter 50 value 206.453327 ## iter 60 value 206.300444 ## iter 70 value 206.237022 ## iter 80 value 206.194495 ## iter 90 value 206.191373 ## iter 100 value 206.191063 ## final value 206.191063 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.283032 ## iter 10 value 344.707407 ## iter 20 value 220.093650 ## iter 30 value 206.612843 ## iter 40 value 201.825266 ## iter 50 value 200.599910 ## iter 60 value 200.494678 ## iter 70 value 200.440702 ## iter 80 value 200.437974 ## iter 90 value 200.437763 ## final value 200.437760 ## converged ## # weights: 360 (238 variable) ## initial value 600.978055 ## iter 10 value 327.768911 ## iter 20 value 197.317696 ## iter 30 value 186.482515 ## iter 40 value 180.817708 ## iter 50 value 176.207254 ## iter 60 value 176.105057 ## iter 70 value 176.097585 ## iter 80 value 176.095828 ## iter 90 value 176.095249 ## final value 176.095153 ## converged ## # weights: 360 (238 variable) ## initial value 592.833713 ## iter 10 value 342.554180 ## iter 20 value 230.642845 ## iter 30 value 215.274854 ## iter 40 value 209.658029 ## iter 50 value 208.651577 ## iter 60 value 208.504357 ## iter 70 value 208.425006 ## iter 80 value 208.419414 ## iter 90 value 208.419023 ## final value 208.418928 ## converged ## # weights: 360 (238 variable) ## initial value 618.392158 ## iter 10 value 346.625033 ## iter 20 value 217.147560 ## iter 30 value 201.539574 ## iter 40 value 197.969955 ## iter 50 value 196.929617 ## iter 60 value 196.876911 ## iter 70 value 196.815125 ## iter 80 value 196.803293 ## iter 90 value 196.802903 ## final value 196.802891 ## converged ## # weights: 360 (238 variable) ## initial value 595.284167 ## iter 10 value 364.723005 ## iter 20 value 203.606411 ## iter 30 value 191.033264 ## iter 40 value 187.190365 ## iter 50 value 186.720868 ## iter 60 value 186.694034 ## iter 70 value 186.654110 ## iter 80 value 186.651820 ## iter 90 value 186.651657 ## final value 186.651654 ## converged ## # weights: 360 (238 variable) ## initial value 594.565565 ## iter 10 value 378.158756 ## iter 20 value 196.266521 ## iter 30 value 173.754101 ## iter 40 value 167.003519 ## iter 50 value 165.397185 ## iter 60 value 165.132920 ## iter 70 value 164.984943 ## iter 80 value 164.949505 ## iter 90 value 164.947423 ## iter 100 value 164.947032 ## final value 164.947032 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.940922 ## iter 10 value 416.693290 ## iter 20 value 213.389723 ## iter 30 value 196.912373 ## iter 40 value 188.962910 ## iter 50 value 187.329481 ## iter 60 value 187.214394 ## iter 70 value 187.166554 ## iter 80 value 187.158945 ## iter 90 value 187.158363 ## iter 100 value 187.158192 ## final value 187.158192 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.552407 ## iter 10 value 372.334210 ## iter 20 value 239.335522 ## iter 30 value 224.604747 ## iter 40 value 216.419140 ## iter 50 value 214.754517 ## iter 60 value 214.702827 ## iter 70 value 214.651964 ## iter 80 value 214.648372 ## iter 90 value 214.648067 ## final value 214.648060 ## converged ## # weights: 360 (238 variable) ## initial value 590.751073 ## iter 10 value 324.195778 ## iter 20 value 174.108992 ## iter 30 value 158.944202 ## iter 40 value 154.476297 ## iter 50 value 153.713961 ## iter 60 value 153.624738 ## iter 70 value 153.558421 ## iter 80 value 153.536052 ## iter 90 value 153.528868 ## iter 100 value 153.525202 ## final value 153.525202 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.055216 ## iter 10 value 355.355802 ## iter 20 value 215.628242 ## iter 30 value 203.249395 ## iter 40 value 200.050338 ## iter 50 value 199.239898 ## iter 60 value 199.206590 ## iter 70 value 199.175372 ## iter 80 value 199.169973 ## iter 90 value 199.169691 ## final value 199.169661 ## converged ## # weights: 360 (238 variable) ## initial value 636.457299 ## iter 10 value 369.390001 ## iter 20 value 217.173705 ## iter 30 value 193.622316 ## iter 40 value 183.957896 ## iter 50 value 183.109183 ## iter 60 value 182.977700 ## iter 70 value 182.925472 ## iter 80 value 182.889137 ## iter 90 value 182.885703 ## iter 100 value 182.885082 ## final value 182.885082 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.303910 ## iter 10 value 357.124667 ## iter 20 value 225.668312 ## iter 30 value 213.180701 ## iter 40 value 208.565057 ## iter 50 value 207.387492 ## iter 60 value 207.371010 ## iter 70 value 207.341653 ## iter 80 value 207.338568 ## iter 90 value 207.338403 ## iter 90 value 207.338402 ## iter 90 value 207.338402 ## final value 207.338402 ## converged ## # weights: 360 (238 variable) ## initial value 583.884856 ## iter 10 value 360.154502 ## iter 20 value 204.462034 ## iter 30 value 188.044903 ## iter 40 value 185.163177 ## iter 50 value 184.258916 ## iter 60 value 184.066343 ## iter 70 value 184.031567 ## iter 80 value 183.999934 ## iter 90 value 183.998259 ## iter 100 value 183.998026 ## final value 183.998026 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 562.540577 ## iter 10 value 368.508042 ## iter 20 value 225.635238 ## iter 30 value 211.304788 ## iter 40 value 206.281314 ## iter 50 value 205.195049 ## iter 60 value 205.105054 ## iter 70 value 205.042815 ## iter 80 value 205.038866 ## iter 90 value 205.038526 ## final value 205.038521 ## converged ## # weights: 360 (238 variable) ## initial value 578.114945 ## iter 10 value 347.820729 ## iter 20 value 214.972324 ## iter 30 value 203.792491 ## iter 40 value 198.140494 ## iter 50 value 195.908057 ## iter 60 value 195.856391 ## iter 70 value 195.832861 ## iter 80 value 195.818546 ## iter 90 value 195.817522 ## final value 195.817443 ## converged ## # weights: 360 (238 variable) ## initial value 595.210450 ## iter 10 value 375.543154 ## iter 20 value 236.387130 ## iter 30 value 219.369839 ## iter 40 value 212.101126 ## iter 50 value 211.007849 ## iter 60 value 210.862775 ## iter 70 value 210.811997 ## iter 80 value 210.809509 ## iter 90 value 210.809394 ## iter 90 value 210.809393 ## iter 90 value 210.809393 ## final value 210.809393 ## converged ## # weights: 360 (238 variable) ## initial value 592.774168 ## iter 10 value 339.508042 ## iter 20 value 197.968379 ## iter 30 value 184.461797 ## iter 40 value 181.978214 ## iter 50 value 181.533069 ## iter 60 value 181.430412 ## iter 70 value 181.415836 ## iter 80 value 181.415501 ## iter 90 value 181.414782 ## iter 100 value 181.414462 ## final value 181.414462 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.540273 ## iter 10 value 384.139747 ## iter 20 value 201.311508 ## iter 30 value 182.626957 ## iter 40 value 178.366430 ## iter 50 value 177.107747 ## iter 60 value 176.996118 ## iter 70 value 176.923337 ## iter 80 value 176.898112 ## iter 90 value 176.895466 ## iter 100 value 176.895164 ## final value 176.895164 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.199858 ## iter 10 value 404.221868 ## iter 20 value 238.152056 ## iter 30 value 221.607099 ## iter 40 value 217.907227 ## iter 50 value 216.281098 ## iter 60 value 216.171564 ## iter 70 value 216.119338 ## iter 80 value 216.102081 ## iter 90 value 216.099041 ## iter 100 value 216.098670 ## final value 216.098670 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.798141 ## iter 10 value 388.459589 ## iter 20 value 211.671285 ## iter 30 value 197.050930 ## iter 40 value 194.090536 ## iter 50 value 191.622318 ## iter 60 value 191.398571 ## iter 70 value 191.383574 ## iter 80 value 191.374619 ## iter 90 value 191.366431 ## iter 100 value 191.365895 ## final value 191.365895 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.387801 ## iter 10 value 361.934303 ## iter 20 value 210.129045 ## iter 30 value 189.009227 ## iter 40 value 181.747363 ## iter 50 value 179.850266 ## iter 60 value 179.701034 ## iter 70 value 179.615350 ## iter 80 value 179.592102 ## iter 90 value 179.579114 ## iter 100 value 179.577440 ## final value 179.577440 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.446499 ## iter 10 value 352.173037 ## iter 20 value 208.849798 ## iter 30 value 192.207151 ## iter 40 value 185.899390 ## iter 50 value 183.755162 ## iter 60 value 183.629266 ## iter 70 value 183.609288 ## iter 80 value 183.608294 ## final value 183.608243 ## converged ## # weights: 360 (238 variable) ## initial value 616.082985 ## iter 10 value 328.950212 ## iter 20 value 197.242401 ## iter 30 value 178.694282 ## iter 40 value 171.750230 ## iter 50 value 169.683718 ## iter 60 value 169.465411 ## iter 70 value 169.391543 ## iter 80 value 169.343533 ## iter 90 value 169.334468 ## iter 100 value 169.331431 ## final value 169.331431 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.990080 ## iter 10 value 409.424628 ## iter 20 value 225.223209 ## iter 30 value 209.591461 ## iter 40 value 202.189785 ## iter 50 value 200.563134 ## iter 60 value 200.432938 ## iter 70 value 200.364639 ## iter 80 value 200.359583 ## iter 90 value 200.358955 ## iter 100 value 200.358830 ## final value 200.358830 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 635.522930 ## iter 10 value 363.450018 ## iter 20 value 229.854797 ## iter 30 value 213.613362 ## iter 40 value 208.613846 ## iter 50 value 205.270740 ## iter 60 value 205.052915 ## iter 70 value 205.012058 ## iter 80 value 205.006142 ## iter 90 value 205.005818 ## final value 205.005805 ## converged ## # weights: 360 (238 variable) ## initial value 574.453489 ## iter 10 value 365.449965 ## iter 20 value 220.032109 ## iter 30 value 202.079500 ## iter 40 value 198.090634 ## iter 50 value 196.899605 ## iter 60 value 196.781829 ## iter 70 value 196.725604 ## iter 80 value 196.690454 ## iter 90 value 196.688322 ## iter 100 value 196.688075 ## final value 196.688075 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.620379 ## iter 10 value 352.114082 ## iter 20 value 211.803668 ## iter 30 value 197.327921 ## iter 40 value 195.283596 ## iter 50 value 194.919951 ## iter 60 value 194.881304 ## iter 70 value 194.841060 ## iter 80 value 194.835818 ## iter 90 value 194.834830 ## iter 100 value 194.834553 ## final value 194.834553 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.437954 ## iter 10 value 357.028786 ## iter 20 value 219.498413 ## iter 30 value 204.634473 ## iter 40 value 199.948863 ## iter 50 value 199.426995 ## iter 60 value 199.332050 ## iter 70 value 199.289361 ## iter 80 value 199.287350 ## final value 199.287233 ## converged ## # weights: 360 (238 variable) ## initial value 607.162253 ## iter 10 value 327.526684 ## iter 20 value 182.507520 ## iter 30 value 170.275219 ## iter 40 value 168.868993 ## iter 50 value 168.174604 ## iter 60 value 168.027165 ## iter 70 value 168.013263 ## iter 80 value 167.994994 ## iter 90 value 167.991782 ## iter 100 value 167.991620 ## final value 167.991620 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 620.358235 ## iter 10 value 380.580476 ## iter 20 value 214.100176 ## iter 30 value 196.086166 ## iter 40 value 189.290561 ## iter 50 value 188.275188 ## iter 60 value 188.197842 ## iter 70 value 188.128225 ## iter 80 value 188.114447 ## iter 90 value 188.113695 ## final value 188.113640 ## converged ## # weights: 360 (238 variable) ## initial value 587.472704 ## iter 10 value 336.136611 ## iter 20 value 200.139979 ## iter 30 value 187.277231 ## iter 40 value 184.660894 ## iter 50 value 183.566713 ## iter 60 value 183.487329 ## iter 70 value 183.485452 ## iter 80 value 183.476904 ## iter 90 value 183.475622 ## final value 183.475563 ## converged ## # weights: 360 (238 variable) ## initial value 600.596507 ## iter 10 value 401.724270 ## iter 20 value 232.246989 ## iter 30 value 207.450496 ## iter 40 value 195.608762 ## iter 50 value 194.417902 ## iter 60 value 194.329732 ## iter 70 value 194.270298 ## iter 80 value 194.264110 ## iter 90 value 194.263655 ## final value 194.263637 ## converged ## # weights: 360 (238 variable) ## initial value 574.015583 ## iter 10 value 291.200599 ## iter 20 value 180.234351 ## iter 30 value 165.280611 ## iter 40 value 158.396173 ## iter 50 value 157.196696 ## iter 60 value 157.104689 ## iter 70 value 157.064550 ## iter 80 value 157.045525 ## iter 90 value 157.031695 ## iter 100 value 157.027611 ## final value 157.027611 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.183450 ## iter 10 value 369.262259 ## iter 20 value 181.981815 ## iter 30 value 160.946454 ## iter 40 value 155.976277 ## iter 50 value 154.917366 ## iter 60 value 154.783785 ## iter 70 value 154.734158 ## iter 80 value 154.702308 ## iter 90 value 154.691505 ## iter 100 value 154.689290 ## final value 154.689290 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 565.609441 ## iter 10 value 340.902613 ## iter 20 value 195.223734 ## iter 30 value 182.319667 ## iter 40 value 178.119909 ## iter 50 value 174.417892 ## iter 60 value 174.180943 ## iter 70 value 174.149358 ## iter 80 value 174.140918 ## iter 90 value 174.140446 ## final value 174.140414 ## converged ## # weights: 360 (238 variable) ## initial value 594.137216 ## iter 10 value 375.967852 ## iter 20 value 203.556274 ## iter 30 value 188.234869 ## iter 40 value 181.100872 ## iter 50 value 178.420230 ## iter 60 value 178.256824 ## iter 70 value 178.177511 ## iter 80 value 178.149785 ## iter 90 value 178.147399 ## iter 100 value 178.147004 ## final value 178.147004 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.449666 ## iter 10 value 370.363742 ## iter 20 value 222.357166 ## iter 30 value 203.733156 ## iter 40 value 195.070317 ## iter 50 value 193.175586 ## iter 60 value 193.032675 ## iter 70 value 193.011200 ## iter 80 value 193.006180 ## iter 90 value 193.004817 ## iter 100 value 193.004744 ## final value 193.004744 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.861975 ## iter 10 value 346.078008 ## iter 20 value 199.434966 ## iter 30 value 184.551416 ## iter 40 value 179.166798 ## iter 50 value 178.388102 ## iter 60 value 178.225196 ## iter 70 value 178.201359 ## iter 80 value 178.199886 ## iter 90 value 178.199755 ## final value 178.199749 ## converged ## # weights: 360 (238 variable) ## initial value 604.651924 ## iter 10 value 386.117748 ## iter 20 value 243.872287 ## iter 30 value 228.308543 ## iter 40 value 223.203183 ## iter 50 value 221.736811 ## iter 60 value 221.669729 ## iter 70 value 221.628031 ## iter 80 value 221.624703 ## iter 90 value 221.624468 ## iter 90 value 221.624466 ## iter 90 value 221.624466 ## final value 221.624466 ## converged ## # weights: 360 (238 variable) ## initial value 617.343643 ## iter 10 value 396.840669 ## iter 20 value 220.443913 ## iter 30 value 202.768016 ## iter 40 value 195.705495 ## iter 50 value 194.662115 ## iter 60 value 194.554168 ## iter 70 value 194.472573 ## iter 80 value 194.464623 ## iter 90 value 194.464061 ## final value 194.464036 ## converged ## # weights: 360 (238 variable) ## initial value 590.373920 ## iter 10 value 350.242925 ## iter 20 value 220.792000 ## iter 30 value 204.877342 ## iter 40 value 199.953994 ## iter 50 value 198.788834 ## iter 60 value 198.743996 ## iter 70 value 198.683501 ## iter 80 value 198.676442 ## iter 90 value 198.676074 ## final value 198.676048 ## converged ## # weights: 360 (238 variable) ## initial value 615.921269 ## iter 10 value 392.998177 ## iter 20 value 220.806162 ## iter 30 value 204.733697 ## iter 40 value 200.818368 ## iter 50 value 199.308995 ## iter 60 value 199.174856 ## iter 70 value 199.113532 ## iter 80 value 199.099283 ## iter 90 value 199.079606 ## iter 100 value 199.077784 ## final value 199.077784 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 553.623581 ## iter 10 value 335.966949 ## iter 20 value 213.368914 ## iter 30 value 200.826684 ## iter 40 value 195.403305 ## iter 50 value 194.038747 ## iter 60 value 193.947592 ## iter 70 value 193.923894 ## iter 80 value 193.922372 ## iter 90 value 193.922228 ## final value 193.922222 ## converged ## # weights: 360 (238 variable) ## initial value 596.458144 ## iter 10 value 371.145673 ## iter 20 value 206.121641 ## iter 30 value 189.866940 ## iter 40 value 186.471754 ## iter 50 value 185.878699 ## iter 60 value 185.788590 ## iter 70 value 185.741833 ## iter 80 value 185.722607 ## iter 90 value 185.721590 ## final value 185.721469 ## converged ## # weights: 360 (238 variable) ## initial value 621.089801 ## iter 10 value 371.541880 ## iter 20 value 233.264572 ## iter 30 value 215.443871 ## iter 40 value 208.019192 ## iter 50 value 206.908134 ## iter 60 value 206.768685 ## iter 70 value 206.709630 ## iter 80 value 206.707173 ## iter 90 value 206.706980 ## final value 206.706962 ## converged ## # weights: 360 (238 variable) ## initial value 586.365962 ## iter 10 value 355.111328 ## iter 20 value 222.286334 ## iter 30 value 209.663327 ## iter 40 value 204.228438 ## iter 50 value 200.952265 ## iter 60 value 200.653301 ## iter 70 value 200.640286 ## iter 80 value 200.638121 ## iter 90 value 200.637959 ## final value 200.637952 ## converged ## # weights: 360 (238 variable) ## initial value 631.829395 ## iter 10 value 364.637092 ## iter 20 value 215.825256 ## iter 30 value 203.307984 ## iter 40 value 199.617663 ## iter 50 value 198.027574 ## iter 60 value 197.901530 ## iter 70 value 197.874594 ## iter 80 value 197.873083 ## final value 197.873057 ## converged ## # weights: 360 (238 variable) ## initial value 580.948595 ## iter 10 value 370.627445 ## iter 20 value 219.289377 ## iter 30 value 207.160424 ## iter 40 value 202.991528 ## iter 50 value 200.594112 ## iter 60 value 200.528967 ## iter 70 value 200.517793 ## iter 80 value 200.513776 ## iter 90 value 200.513407 ## final value 200.513394 ## converged ## # weights: 360 (238 variable) ## initial value 588.995710 ## iter 10 value 408.639009 ## iter 20 value 267.978575 ## iter 30 value 251.328974 ## iter 40 value 242.937471 ## iter 50 value 240.531245 ## iter 60 value 240.358897 ## iter 70 value 240.337439 ## iter 80 value 240.336582 ## final value 240.336551 ## converged ## # weights: 360 (238 variable) ## initial value 606.677106 ## iter 10 value 329.464729 ## iter 20 value 207.028915 ## iter 30 value 192.013607 ## iter 40 value 185.526388 ## iter 50 value 184.254684 ## iter 60 value 184.159930 ## iter 70 value 184.096919 ## iter 80 value 184.084039 ## iter 90 value 184.083303 ## iter 100 value 184.083197 ## final value 184.083197 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.590292 ## iter 10 value 356.650890 ## iter 20 value 207.548841 ## iter 30 value 193.595162 ## iter 40 value 189.747415 ## iter 50 value 187.019621 ## iter 60 value 186.346513 ## iter 70 value 186.307632 ## iter 80 value 186.297736 ## iter 90 value 186.296936 ## iter 100 value 186.295445 ## final value 186.295445 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.076452 ## iter 10 value 356.248385 ## iter 20 value 214.980397 ## iter 30 value 197.929478 ## iter 40 value 190.082413 ## iter 50 value 187.994221 ## iter 60 value 187.636876 ## iter 70 value 187.598813 ## iter 80 value 187.582747 ## iter 90 value 187.580845 ## iter 100 value 187.580722 ## final value 187.580722 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 567.257140 ## iter 10 value 341.536032 ## iter 20 value 194.771870 ## iter 30 value 181.092630 ## iter 40 value 178.772391 ## iter 50 value 177.798839 ## iter 60 value 177.327604 ## iter 70 value 177.265286 ## iter 80 value 177.258310 ## iter 90 value 177.257951 ## iter 100 value 177.257460 ## final value 177.257460 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.235118 ## iter 10 value 343.491202 ## iter 20 value 182.852197 ## iter 30 value 170.080558 ## iter 40 value 165.910607 ## iter 50 value 165.120292 ## iter 60 value 165.066055 ## iter 70 value 165.042126 ## iter 80 value 165.017011 ## iter 90 value 165.014404 ## iter 100 value 165.014217 ## final value 165.014217 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.893662 ## iter 10 value 341.407183 ## iter 20 value 203.363337 ## iter 30 value 191.803195 ## iter 40 value 187.994727 ## iter 50 value 187.359796 ## iter 60 value 187.286978 ## iter 70 value 187.224347 ## iter 80 value 187.210627 ## iter 90 value 187.209423 ## final value 187.209282 ## converged ## # weights: 360 (238 variable) ## initial value 587.750324 ## iter 10 value 346.668679 ## iter 20 value 201.208096 ## iter 30 value 187.687523 ## iter 40 value 183.482908 ## iter 50 value 181.727691 ## iter 60 value 181.694434 ## iter 70 value 181.654754 ## iter 80 value 181.650652 ## iter 90 value 181.650382 ## final value 181.650373 ## converged ## # weights: 360 (238 variable) ## initial value 623.986622 ## iter 10 value 395.615533 ## iter 20 value 233.053571 ## iter 30 value 214.432068 ## iter 40 value 206.729295 ## iter 50 value 205.008966 ## iter 60 value 204.916426 ## iter 70 value 204.852947 ## iter 80 value 204.849428 ## iter 90 value 204.849008 ## final value 204.848990 ## converged ## # weights: 360 (238 variable) ## initial value 586.886045 ## iter 10 value 372.464843 ## iter 20 value 226.239285 ## iter 30 value 209.188338 ## iter 40 value 203.242302 ## iter 50 value 202.256898 ## iter 60 value 202.135808 ## iter 70 value 202.086965 ## iter 80 value 202.048016 ## iter 90 value 202.043229 ## iter 100 value 202.042766 ## final value 202.042766 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.596763 ## iter 10 value 413.794922 ## iter 20 value 230.282895 ## iter 30 value 210.508802 ## iter 40 value 202.842997 ## iter 50 value 199.641201 ## iter 60 value 199.073698 ## iter 70 value 198.992377 ## iter 80 value 198.982737 ## iter 90 value 198.981636 ## iter 100 value 198.981544 ## final value 198.981544 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.121846 ## iter 10 value 348.715093 ## iter 20 value 195.053662 ## iter 30 value 179.045388 ## iter 40 value 173.027556 ## iter 50 value 170.783247 ## iter 60 value 170.612368 ## iter 70 value 170.565106 ## iter 80 value 170.559166 ## iter 90 value 170.559065 ## iter 100 value 170.558946 ## final value 170.558946 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.966261 ## iter 10 value 387.590940 ## iter 20 value 220.362876 ## iter 30 value 204.982394 ## iter 40 value 202.903821 ## iter 50 value 202.352900 ## iter 60 value 202.336244 ## iter 70 value 202.316100 ## iter 80 value 202.309679 ## iter 90 value 202.309045 ## final value 202.308964 ## converged ## # weights: 360 (238 variable) ## initial value 620.749231 ## iter 10 value 350.065535 ## iter 20 value 215.921144 ## iter 30 value 201.792446 ## iter 40 value 194.546092 ## iter 50 value 193.519155 ## iter 60 value 193.438790 ## iter 70 value 193.393637 ## iter 80 value 193.391020 ## iter 90 value 193.390867 ## final value 193.390863 ## converged ## # weights: 360 (238 variable) ## initial value 563.361021 ## iter 10 value 284.978667 ## iter 20 value 170.707396 ## iter 30 value 154.973553 ## iter 40 value 151.288933 ## iter 50 value 149.712213 ## iter 60 value 149.609481 ## iter 70 value 149.564450 ## iter 80 value 149.545432 ## iter 90 value 149.528730 ## iter 100 value 149.527153 ## final value 149.527153 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.132378 ## iter 10 value 370.549538 ## iter 20 value 217.114458 ## iter 30 value 200.153963 ## iter 40 value 196.024419 ## iter 50 value 194.573455 ## iter 60 value 194.488631 ## iter 70 value 194.416379 ## iter 80 value 194.403688 ## iter 90 value 194.402940 ## final value 194.402895 ## converged ## # weights: 360 (238 variable) ## initial value 582.755373 ## iter 10 value 325.563990 ## iter 20 value 189.417073 ## iter 30 value 178.098941 ## iter 40 value 175.587058 ## iter 50 value 174.747483 ## iter 60 value 174.695795 ## iter 70 value 174.650405 ## iter 80 value 174.646116 ## iter 90 value 174.645742 ## iter 100 value 174.645649 ## final value 174.645649 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 630.735067 ## iter 10 value 378.239879 ## iter 20 value 229.171207 ## iter 30 value 210.836872 ## iter 40 value 205.266301 ## iter 50 value 203.924333 ## iter 60 value 203.832017 ## iter 70 value 203.770228 ## iter 80 value 203.758037 ## iter 90 value 203.754578 ## iter 100 value 203.754279 ## final value 203.754279 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.899306 ## iter 10 value 380.089671 ## iter 20 value 233.121591 ## iter 30 value 218.910620 ## iter 40 value 213.782386 ## iter 50 value 211.974130 ## iter 60 value 211.843293 ## iter 70 value 211.820481 ## iter 80 value 211.802557 ## iter 90 value 211.801632 ## final value 211.801578 ## converged ## # weights: 360 (238 variable) ## initial value 597.974010 ## iter 10 value 377.147784 ## iter 20 value 207.700467 ## iter 30 value 192.652366 ## iter 40 value 186.536173 ## iter 50 value 185.415628 ## iter 60 value 185.321328 ## iter 70 value 185.278149 ## iter 80 value 185.248071 ## iter 90 value 185.240964 ## iter 100 value 185.240439 ## final value 185.240439 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.710874 ## iter 10 value 383.773752 ## iter 20 value 213.847431 ## iter 30 value 197.039267 ## iter 40 value 191.571399 ## iter 50 value 189.776115 ## iter 60 value 189.623424 ## iter 70 value 189.559409 ## iter 80 value 189.555580 ## iter 90 value 189.555376 ## final value 189.555364 ## converged ## # weights: 360 (238 variable) ## initial value 569.450409 ## iter 10 value 288.886921 ## iter 20 value 189.259902 ## iter 30 value 171.555052 ## iter 40 value 161.415057 ## iter 50 value 160.187197 ## iter 60 value 160.092942 ## iter 70 value 160.028936 ## iter 80 value 160.017119 ## iter 90 value 160.016114 ## iter 100 value 160.015947 ## final value 160.015947 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 569.443708 ## iter 10 value 341.227575 ## iter 20 value 171.571948 ## iter 30 value 153.543932 ## iter 40 value 150.104804 ## iter 50 value 149.289895 ## iter 60 value 149.212122 ## iter 70 value 149.161695 ## iter 80 value 149.140278 ## iter 90 value 149.135629 ## iter 100 value 149.133797 ## final value 149.133797 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.407628 ## iter 10 value 361.869517 ## iter 20 value 223.666169 ## iter 30 value 210.448682 ## iter 40 value 206.636641 ## iter 50 value 205.937225 ## iter 60 value 205.877599 ## iter 70 value 205.824022 ## iter 80 value 205.815501 ## iter 90 value 205.815079 ## final value 205.815060 ## converged ## # weights: 360 (238 variable) ## initial value 615.890508 ## iter 10 value 342.617710 ## iter 20 value 211.478532 ## iter 30 value 195.471386 ## iter 40 value 190.846096 ## iter 50 value 190.210875 ## iter 60 value 190.097469 ## iter 70 value 190.030399 ## iter 80 value 190.017879 ## iter 90 value 190.017088 ## iter 100 value 190.016926 ## final value 190.016926 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.123770 ## iter 10 value 358.094896 ## iter 20 value 199.430151 ## iter 30 value 182.810904 ## iter 40 value 176.901316 ## iter 50 value 175.061931 ## iter 60 value 174.869759 ## iter 70 value 174.806685 ## iter 80 value 174.773847 ## iter 90 value 174.757520 ## iter 100 value 174.755400 ## final value 174.755400 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.027109 ## iter 10 value 338.698209 ## iter 20 value 192.544088 ## iter 30 value 175.838919 ## iter 40 value 168.604484 ## iter 50 value 167.507673 ## iter 60 value 167.410455 ## iter 70 value 167.358161 ## iter 80 value 167.352758 ## iter 90 value 167.352233 ## final value 167.352218 ## converged ## # weights: 360 (238 variable) ## initial value 610.024248 ## iter 10 value 377.384635 ## iter 20 value 227.604787 ## iter 30 value 216.505799 ## iter 40 value 212.151964 ## iter 50 value 210.691360 ## iter 60 value 210.661852 ## iter 70 value 210.642108 ## iter 80 value 210.634725 ## iter 90 value 210.634250 ## final value 210.634230 ## converged ## # weights: 360 (238 variable) ## initial value 584.726613 ## iter 10 value 352.729479 ## iter 20 value 217.731736 ## iter 30 value 201.928447 ## iter 40 value 198.277361 ## iter 50 value 197.640077 ## iter 60 value 197.601517 ## iter 70 value 197.579926 ## iter 80 value 197.579028 ## final value 197.578992 ## converged ## # weights: 360 (238 variable) ## initial value 589.381433 ## iter 10 value 403.940925 ## iter 20 value 223.273485 ## iter 30 value 206.943381 ## iter 40 value 202.462009 ## iter 50 value 201.809295 ## iter 60 value 201.735690 ## iter 70 value 201.672056 ## iter 80 value 201.667662 ## iter 90 value 201.667291 ## final value 201.667275 ## converged ## # weights: 360 (238 variable) ## initial value 641.346234 ## iter 10 value 393.711374 ## iter 20 value 230.370432 ## iter 30 value 214.207973 ## iter 40 value 206.027635 ## iter 50 value 204.508076 ## iter 60 value 204.440825 ## iter 70 value 204.433838 ## iter 80 value 204.433485 ## final value 204.433476 ## converged ## # weights: 360 (238 variable) ## initial value 608.497617 ## iter 10 value 380.993143 ## iter 20 value 201.265760 ## iter 30 value 185.105967 ## iter 40 value 182.738011 ## iter 50 value 181.235811 ## iter 60 value 180.348448 ## iter 70 value 180.304189 ## iter 80 value 180.295752 ## iter 90 value 180.292143 ## iter 100 value 180.290856 ## final value 180.290856 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.867593 ## iter 10 value 381.333918 ## iter 20 value 238.368775 ## iter 30 value 222.157143 ## iter 40 value 213.940934 ## iter 50 value 212.574778 ## iter 60 value 212.480012 ## iter 70 value 212.422843 ## iter 80 value 212.417727 ## iter 90 value 212.416805 ## iter 100 value 212.416697 ## final value 212.416697 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.839173 ## iter 10 value 347.413976 ## iter 20 value 179.832189 ## iter 30 value 156.467025 ## iter 40 value 146.657002 ## iter 50 value 145.504942 ## iter 60 value 145.156232 ## iter 70 value 145.129155 ## iter 80 value 145.099777 ## iter 90 value 145.083176 ## iter 100 value 145.076036 ## final value 145.076036 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 568.627658 ## iter 10 value 341.361468 ## iter 20 value 210.763849 ## iter 30 value 196.694589 ## iter 40 value 193.146324 ## iter 50 value 191.499473 ## iter 60 value 191.395312 ## iter 70 value 191.322116 ## iter 80 value 191.310151 ## iter 90 value 191.304661 ## iter 100 value 191.304177 ## final value 191.304177 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.350004 ## iter 10 value 341.221377 ## iter 20 value 216.506270 ## iter 30 value 198.597928 ## iter 40 value 192.798265 ## iter 50 value 190.948883 ## iter 60 value 190.759858 ## iter 70 value 190.665592 ## iter 80 value 190.644853 ## iter 90 value 190.643417 ## final value 190.643256 ## converged ## # weights: 360 (238 variable) ## initial value 622.986225 ## iter 10 value 386.213277 ## iter 20 value 239.477773 ## iter 30 value 220.490159 ## iter 40 value 212.316125 ## iter 50 value 210.357658 ## iter 60 value 210.227653 ## iter 70 value 210.216061 ## iter 80 value 210.215570 ## final value 210.215543 ## converged ## # weights: 360 (238 variable) ## initial value 622.803306 ## iter 10 value 362.597699 ## iter 20 value 205.535122 ## iter 30 value 189.897814 ## iter 40 value 187.681710 ## iter 50 value 186.264179 ## iter 60 value 186.101064 ## iter 70 value 186.084140 ## iter 80 value 186.077377 ## iter 90 value 186.077073 ## final value 186.077047 ## converged ## # weights: 360 (238 variable) ## initial value 603.354573 ## iter 10 value 372.050220 ## iter 20 value 216.501577 ## iter 30 value 202.264139 ## iter 40 value 199.356567 ## iter 50 value 198.498964 ## iter 60 value 198.450371 ## iter 70 value 198.403652 ## iter 80 value 198.395854 ## iter 90 value 198.395345 ## final value 198.395333 ## converged ## # weights: 360 (238 variable) ## initial value 585.270536 ## iter 10 value 377.055603 ## iter 20 value 224.063950 ## iter 30 value 206.187857 ## iter 40 value 199.681128 ## iter 50 value 198.181109 ## iter 60 value 198.041464 ## iter 70 value 197.972038 ## iter 80 value 197.943299 ## iter 90 value 197.928811 ## iter 100 value 197.925022 ## final value 197.925022 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.809429 ## iter 10 value 351.377432 ## iter 20 value 209.417042 ## iter 30 value 194.432037 ## iter 40 value 190.971456 ## iter 50 value 189.645607 ## iter 60 value 189.526221 ## iter 70 value 189.470593 ## iter 80 value 189.454375 ## iter 90 value 189.442576 ## iter 100 value 189.441725 ## final value 189.441725 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.388087 ## iter 10 value 341.952630 ## iter 20 value 199.755325 ## iter 30 value 187.092607 ## iter 40 value 183.134123 ## iter 50 value 181.100090 ## iter 60 value 180.965525 ## iter 70 value 180.895869 ## iter 80 value 180.880332 ## iter 90 value 180.879345 ## iter 100 value 180.879190 ## final value 180.879190 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.904793 ## iter 10 value 349.733323 ## iter 20 value 204.043259 ## iter 30 value 187.391898 ## iter 40 value 183.824143 ## iter 50 value 182.320922 ## iter 60 value 182.239765 ## iter 70 value 182.213609 ## iter 80 value 182.177902 ## iter 90 value 182.172213 ## iter 100 value 182.171920 ## final value 182.171920 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 577.438529 ## iter 10 value 331.069923 ## iter 20 value 202.079549 ## iter 30 value 185.120767 ## iter 40 value 181.320799 ## iter 50 value 180.069420 ## iter 60 value 179.953597 ## iter 70 value 179.903760 ## iter 80 value 179.896423 ## iter 90 value 179.883155 ## iter 100 value 179.881411 ## final value 179.881411 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.796918 ## iter 10 value 380.651175 ## iter 20 value 218.591759 ## iter 30 value 204.041696 ## iter 40 value 198.992317 ## iter 50 value 198.396825 ## iter 60 value 198.235451 ## iter 70 value 198.186831 ## iter 80 value 198.184130 ## iter 90 value 198.183510 ## final value 198.183486 ## converged ## # weights: 360 (238 variable) ## initial value 617.493164 ## iter 10 value 355.291257 ## iter 20 value 204.682594 ## iter 30 value 189.555385 ## iter 40 value 183.737423 ## iter 50 value 182.588434 ## iter 60 value 182.454583 ## iter 70 value 182.407744 ## iter 80 value 182.376005 ## iter 90 value 182.369985 ## iter 100 value 182.360374 ## final value 182.360374 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.082426 ## iter 10 value 360.065272 ## iter 20 value 183.250513 ## iter 30 value 167.456509 ## iter 40 value 163.466300 ## iter 50 value 162.792641 ## iter 60 value 162.676182 ## iter 70 value 162.648569 ## iter 80 value 162.615948 ## iter 90 value 162.612883 ## iter 100 value 162.607333 ## final value 162.607333 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.700009 ## iter 10 value 369.473600 ## iter 20 value 218.032884 ## iter 30 value 195.835737 ## iter 40 value 186.214844 ## iter 50 value 184.569839 ## iter 60 value 184.414752 ## iter 70 value 184.379173 ## iter 80 value 184.348675 ## iter 90 value 184.331971 ## iter 100 value 184.324858 ## final value 184.324858 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.894883 ## iter 10 value 348.958509 ## iter 20 value 188.788975 ## iter 30 value 170.105930 ## iter 40 value 162.896418 ## iter 50 value 161.241403 ## iter 60 value 161.018748 ## iter 70 value 160.930343 ## iter 80 value 160.879020 ## iter 90 value 160.849566 ## iter 100 value 160.845215 ## final value 160.845215 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.734816 ## iter 10 value 360.065063 ## iter 20 value 215.752603 ## iter 30 value 201.931002 ## iter 40 value 197.863711 ## iter 50 value 196.635202 ## iter 60 value 196.518948 ## iter 70 value 196.427154 ## iter 80 value 196.417204 ## iter 90 value 196.416427 ## final value 196.416395 ## converged ## # weights: 360 (238 variable) ## initial value 590.123766 ## iter 10 value 376.516977 ## iter 20 value 217.279258 ## iter 30 value 205.092407 ## iter 40 value 201.380594 ## iter 50 value 200.459538 ## iter 60 value 200.438286 ## iter 70 value 200.409584 ## iter 80 value 200.406936 ## iter 90 value 200.406800 ## final value 200.406795 ## converged ## # weights: 360 (238 variable) ## initial value 594.948651 ## iter 10 value 365.573429 ## iter 20 value 202.272133 ## iter 30 value 189.281587 ## iter 40 value 184.297437 ## iter 50 value 183.843642 ## iter 60 value 183.776001 ## iter 70 value 183.732034 ## iter 80 value 183.729931 ## iter 90 value 183.729654 ## final value 183.729647 ## converged ## # weights: 360 (238 variable) ## initial value 591.969764 ## iter 10 value 381.289143 ## iter 20 value 222.656326 ## iter 30 value 209.285408 ## iter 40 value 206.880807 ## iter 50 value 205.713567 ## iter 60 value 205.502631 ## iter 70 value 205.489491 ## iter 80 value 205.469632 ## iter 90 value 205.462085 ## iter 100 value 205.461712 ## final value 205.461712 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.711025 ## iter 10 value 379.828443 ## iter 20 value 217.191255 ## iter 30 value 205.518080 ## iter 40 value 200.202159 ## iter 50 value 198.976134 ## iter 60 value 198.895892 ## iter 70 value 198.837886 ## iter 80 value 198.834378 ## iter 90 value 198.834057 ## final value 198.834047 ## converged ## # weights: 360 (238 variable) ## initial value 624.885396 ## iter 10 value 369.368089 ## iter 20 value 219.532641 ## iter 30 value 201.606117 ## iter 40 value 197.575854 ## iter 50 value 196.265239 ## iter 60 value 196.166808 ## iter 70 value 196.128369 ## iter 80 value 196.117292 ## iter 90 value 196.104139 ## iter 100 value 196.098949 ## final value 196.098949 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 629.693253 ## iter 10 value 371.400134 ## iter 20 value 224.253394 ## iter 30 value 206.861274 ## iter 40 value 199.348662 ## iter 50 value 198.220571 ## iter 60 value 198.139703 ## iter 70 value 198.064047 ## iter 80 value 198.057205 ## iter 90 value 198.056827 ## final value 198.056823 ## converged ## # weights: 360 (238 variable) ## initial value 575.104857 ## iter 10 value 374.198971 ## iter 20 value 219.003848 ## iter 30 value 205.093675 ## iter 40 value 200.804477 ## iter 50 value 199.767951 ## iter 60 value 199.699779 ## iter 70 value 199.637910 ## iter 80 value 199.628751 ## iter 90 value 199.628172 ## final value 199.628097 ## converged ## # weights: 360 (238 variable) ## initial value 601.028921 ## iter 10 value 362.782760 ## iter 20 value 226.894603 ## iter 30 value 215.694616 ## iter 40 value 213.761827 ## iter 50 value 213.203537 ## iter 60 value 212.985713 ## iter 70 value 212.979888 ## iter 80 value 212.978852 ## iter 90 value 212.978337 ## final value 212.978295 ## converged ## # weights: 360 (238 variable) ## initial value 594.850435 ## iter 10 value 368.489262 ## iter 20 value 237.489991 ## iter 30 value 221.269899 ## iter 40 value 215.555808 ## iter 50 value 214.058441 ## iter 60 value 213.982621 ## iter 70 value 213.906430 ## iter 80 value 213.899876 ## iter 90 value 213.899506 ## final value 213.899502 ## converged ## # weights: 360 (238 variable) ## initial value 559.407665 ## iter 10 value 357.013816 ## iter 20 value 212.308048 ## iter 30 value 197.577052 ## iter 40 value 191.928520 ## iter 50 value 189.597529 ## iter 60 value 189.460278 ## iter 70 value 189.440764 ## iter 80 value 189.439855 ## final value 189.439753 ## converged ## # weights: 360 (238 variable) ## initial value 584.925901 ## iter 10 value 346.716111 ## iter 20 value 186.829886 ## iter 30 value 168.244296 ## iter 40 value 159.992712 ## iter 50 value 157.333225 ## iter 60 value 157.153312 ## iter 70 value 157.064273 ## iter 80 value 157.035220 ## iter 90 value 157.032998 ## iter 100 value 157.032717 ## final value 157.032717 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.340405 ## iter 10 value 361.939232 ## iter 20 value 205.936187 ## iter 30 value 187.191524 ## iter 40 value 178.619456 ## iter 50 value 177.415694 ## iter 60 value 177.280163 ## iter 70 value 177.236449 ## iter 80 value 177.198969 ## iter 90 value 177.196542 ## iter 100 value 177.196324 ## final value 177.196324 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.844776 ## iter 10 value 350.415343 ## iter 20 value 186.133413 ## iter 30 value 171.221603 ## iter 40 value 167.842579 ## iter 50 value 166.605258 ## iter 60 value 166.532385 ## iter 70 value 166.502402 ## iter 80 value 166.473258 ## iter 90 value 166.467415 ## iter 100 value 166.466965 ## final value 166.466965 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.874436 ## iter 10 value 371.099980 ## iter 20 value 203.359120 ## iter 30 value 189.097220 ## iter 40 value 184.636795 ## iter 50 value 183.201351 ## iter 60 value 183.136555 ## iter 70 value 183.109269 ## iter 80 value 183.084149 ## iter 90 value 183.080068 ## iter 100 value 183.079434 ## final value 183.079434 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 631.491242 ## iter 10 value 343.827741 ## iter 20 value 182.244964 ## iter 30 value 169.736754 ## iter 40 value 167.431756 ## iter 50 value 165.972169 ## iter 60 value 165.792298 ## iter 70 value 165.756712 ## iter 80 value 165.717830 ## iter 90 value 165.716284 ## iter 100 value 165.714265 ## final value 165.714265 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.812361 ## iter 10 value 355.052573 ## iter 20 value 216.584628 ## iter 30 value 198.063755 ## iter 40 value 194.543999 ## iter 50 value 192.292212 ## iter 60 value 192.212110 ## iter 70 value 192.135719 ## iter 80 value 192.129528 ## iter 90 value 192.129015 ## final value 192.128999 ## converged ## # weights: 360 (238 variable) ## initial value 599.018680 ## iter 10 value 372.804569 ## iter 20 value 216.122188 ## iter 30 value 200.885761 ## iter 40 value 190.478206 ## iter 50 value 189.145276 ## iter 60 value 189.062265 ## iter 70 value 188.997403 ## iter 80 value 188.985829 ## iter 90 value 188.984476 ## iter 100 value 188.984193 ## final value 188.984193 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.246457 ## iter 10 value 370.559549 ## iter 20 value 212.536628 ## iter 30 value 197.037562 ## iter 40 value 187.914695 ## iter 50 value 186.657629 ## iter 60 value 186.572344 ## iter 70 value 186.544943 ## iter 80 value 186.541297 ## iter 90 value 186.540993 ## final value 186.540980 ## converged ## # weights: 360 (238 variable) ## initial value 612.474044 ## iter 10 value 347.986771 ## iter 20 value 196.358134 ## iter 30 value 183.322889 ## iter 40 value 181.970060 ## iter 50 value 180.828030 ## iter 60 value 180.481644 ## iter 70 value 180.480707 ## iter 80 value 180.477894 ## iter 90 value 180.477448 ## final value 180.477393 ## converged ## # weights: 360 (238 variable) ## initial value 616.321714 ## iter 10 value 379.686268 ## iter 20 value 219.318827 ## iter 30 value 203.874281 ## iter 40 value 200.862104 ## iter 50 value 199.251164 ## iter 60 value 199.168240 ## iter 70 value 199.100673 ## iter 80 value 199.092555 ## iter 90 value 199.092166 ## final value 199.092081 ## converged ## # weights: 360 (238 variable) ## initial value 605.181785 ## iter 10 value 378.229768 ## iter 20 value 218.477132 ## iter 30 value 198.924872 ## iter 40 value 193.745122 ## iter 50 value 192.765981 ## iter 60 value 192.670359 ## iter 70 value 192.607475 ## iter 80 value 192.600305 ## iter 90 value 192.599641 ## final value 192.599604 ## converged ## # weights: 360 (238 variable) ## initial value 605.250668 ## iter 10 value 362.180119 ## iter 20 value 230.942769 ## iter 30 value 214.768066 ## iter 40 value 209.655506 ## iter 50 value 208.371177 ## iter 60 value 208.178355 ## iter 70 value 208.123846 ## iter 80 value 208.120669 ## final value 208.120472 ## converged ## # weights: 360 (238 variable) ## initial value 580.161879 ## iter 10 value 371.773403 ## iter 20 value 196.082677 ## iter 30 value 181.981670 ## iter 40 value 177.785321 ## iter 50 value 176.872985 ## iter 60 value 176.843108 ## iter 70 value 176.818078 ## iter 80 value 176.816436 ## iter 90 value 176.816277 ## final value 176.816274 ## converged ## # weights: 360 (238 variable) ## initial value 584.968088 ## iter 10 value 363.506181 ## iter 20 value 199.059332 ## iter 30 value 184.148906 ## iter 40 value 179.220177 ## iter 50 value 177.702406 ## iter 60 value 177.657392 ## iter 70 value 177.630198 ## iter 80 value 177.612029 ## iter 90 value 177.608065 ## iter 100 value 177.607717 ## final value 177.607717 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.389445 ## iter 10 value 360.148021 ## iter 20 value 208.362504 ## iter 30 value 192.982395 ## iter 40 value 188.704831 ## iter 50 value 187.545798 ## iter 60 value 187.453943 ## iter 70 value 187.363641 ## iter 80 value 187.347855 ## iter 90 value 187.346912 ## iter 100 value 187.346732 ## final value 187.346732 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 563.513069 ## iter 10 value 312.152023 ## iter 20 value 207.747470 ## iter 30 value 194.907681 ## iter 40 value 191.216877 ## iter 50 value 188.462773 ## iter 60 value 188.383484 ## iter 70 value 188.330558 ## iter 80 value 188.320181 ## iter 90 value 188.319498 ## final value 188.319467 ## converged ## # weights: 360 (238 variable) ## initial value 616.665909 ## iter 10 value 363.843792 ## iter 20 value 208.500699 ## iter 30 value 188.720820 ## iter 40 value 184.450760 ## iter 50 value 183.334339 ## iter 60 value 183.230944 ## iter 70 value 183.167760 ## iter 80 value 183.140392 ## iter 90 value 183.137757 ## iter 100 value 183.137608 ## final value 183.137608 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.403791 ## iter 10 value 340.984633 ## iter 20 value 192.045943 ## iter 30 value 175.175325 ## iter 40 value 168.593896 ## iter 50 value 167.658525 ## iter 60 value 167.601059 ## iter 70 value 167.576871 ## iter 80 value 167.556446 ## iter 90 value 167.546957 ## iter 100 value 167.546449 ## final value 167.546449 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.401652 ## iter 10 value 346.339731 ## iter 20 value 227.545545 ## iter 30 value 212.405765 ## iter 40 value 205.463514 ## iter 50 value 204.710611 ## iter 60 value 204.647291 ## iter 70 value 204.610375 ## iter 80 value 204.601452 ## iter 90 value 204.599055 ## iter 100 value 204.598782 ## final value 204.598782 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 570.413013 ## iter 10 value 329.679644 ## iter 20 value 181.774343 ## iter 30 value 166.267877 ## iter 40 value 161.342594 ## iter 50 value 159.224299 ## iter 60 value 158.821037 ## iter 70 value 158.758863 ## iter 80 value 158.749308 ## iter 90 value 158.746515 ## iter 100 value 158.746100 ## final value 158.746100 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.455641 ## iter 10 value 410.209887 ## iter 20 value 208.983578 ## iter 30 value 192.600604 ## iter 40 value 186.827329 ## iter 50 value 183.293148 ## iter 60 value 182.914616 ## iter 70 value 182.857458 ## iter 80 value 182.851832 ## iter 90 value 182.848081 ## iter 100 value 182.846054 ## final value 182.846054 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 556.166648 ## iter 10 value 324.519632 ## iter 20 value 186.290880 ## iter 30 value 172.563736 ## iter 40 value 168.658434 ## iter 50 value 166.351183 ## iter 60 value 165.988616 ## iter 70 value 165.879964 ## iter 80 value 165.848040 ## iter 90 value 165.844838 ## iter 100 value 165.844576 ## final value 165.844576 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.355738 ## iter 10 value 392.493310 ## iter 20 value 224.048935 ## iter 30 value 204.455061 ## iter 40 value 197.796681 ## iter 50 value 196.598144 ## iter 60 value 196.464989 ## iter 70 value 196.380269 ## iter 80 value 196.365188 ## iter 90 value 196.360124 ## iter 100 value 196.359541 ## final value 196.359541 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.414086 ## iter 10 value 367.664078 ## iter 20 value 220.809227 ## iter 30 value 204.505352 ## iter 40 value 199.946583 ## iter 50 value 197.797818 ## iter 60 value 197.731746 ## iter 70 value 197.693910 ## iter 80 value 197.676292 ## iter 90 value 197.675223 ## final value 197.675154 ## converged ## # weights: 360 (238 variable) ## initial value 632.101192 ## iter 10 value 369.477831 ## iter 20 value 206.574778 ## iter 30 value 188.769381 ## iter 40 value 183.885382 ## iter 50 value 181.572892 ## iter 60 value 181.392386 ## iter 70 value 181.358095 ## iter 80 value 181.326042 ## iter 90 value 181.317659 ## iter 100 value 181.309649 ## final value 181.309649 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.402240 ## iter 10 value 346.704956 ## iter 20 value 220.884188 ## iter 30 value 204.788667 ## iter 40 value 199.894467 ## iter 50 value 197.233905 ## iter 60 value 197.104782 ## iter 70 value 197.092296 ## iter 80 value 197.091414 ## final value 197.091298 ## converged ## # weights: 360 (238 variable) ## initial value 631.454658 ## iter 10 value 401.624475 ## iter 20 value 241.244012 ## iter 30 value 225.002466 ## iter 40 value 221.507956 ## iter 50 value 218.929813 ## iter 60 value 218.768562 ## iter 70 value 218.756439 ## iter 80 value 218.753053 ## iter 90 value 218.752852 ## final value 218.752843 ## converged ## # weights: 360 (238 variable) ## initial value 598.211639 ## iter 10 value 360.450326 ## iter 20 value 216.424159 ## iter 30 value 200.513130 ## iter 40 value 196.411441 ## iter 50 value 194.784232 ## iter 60 value 194.592059 ## iter 70 value 194.524256 ## iter 80 value 194.521352 ## iter 90 value 194.518629 ## final value 194.518133 ## converged ## # weights: 360 (238 variable) ## initial value 599.974033 ## iter 10 value 351.539068 ## iter 20 value 199.855306 ## iter 30 value 181.748205 ## iter 40 value 177.459224 ## iter 50 value 176.074614 ## iter 60 value 175.954722 ## iter 70 value 175.873263 ## iter 80 value 175.851798 ## iter 90 value 175.848795 ## iter 100 value 175.848401 ## final value 175.848401 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.403270 ## iter 10 value 363.282334 ## iter 20 value 226.688807 ## iter 30 value 210.866006 ## iter 40 value 203.183276 ## iter 50 value 201.867472 ## iter 60 value 201.798117 ## iter 70 value 201.739460 ## iter 80 value 201.735319 ## iter 90 value 201.735013 ## iter 100 value 201.734933 ## final value 201.734933 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.164812 ## iter 10 value 397.023116 ## iter 20 value 214.778826 ## iter 30 value 196.303748 ## iter 40 value 192.081436 ## iter 50 value 190.961693 ## iter 60 value 190.897854 ## iter 70 value 190.845344 ## iter 80 value 190.839215 ## iter 90 value 190.838753 ## final value 190.838710 ## converged ## # weights: 360 (238 variable) ## initial value 605.948616 ## iter 10 value 364.809997 ## iter 20 value 214.615189 ## iter 30 value 197.849691 ## iter 40 value 192.689501 ## iter 50 value 191.688066 ## iter 60 value 191.571909 ## iter 70 value 191.505677 ## iter 80 value 191.485688 ## iter 90 value 191.484189 ## iter 100 value 191.483940 ## final value 191.483940 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.588123 ## iter 10 value 345.113268 ## iter 20 value 202.788718 ## iter 30 value 186.920384 ## iter 40 value 177.514289 ## iter 50 value 176.351160 ## iter 60 value 176.243962 ## iter 70 value 176.205655 ## iter 80 value 176.169405 ## iter 90 value 176.164988 ## iter 100 value 176.164765 ## final value 176.164765 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.532619 ## iter 10 value 369.307728 ## iter 20 value 213.235066 ## iter 30 value 197.295820 ## iter 40 value 193.127548 ## iter 50 value 192.067576 ## iter 60 value 192.019518 ## iter 70 value 191.970124 ## iter 80 value 191.967837 ## final value 191.967750 ## converged ## # weights: 360 (238 variable) ## initial value 613.766451 ## iter 10 value 362.241152 ## iter 20 value 214.404078 ## iter 30 value 193.792039 ## iter 40 value 187.178970 ## iter 50 value 185.290715 ## iter 60 value 185.121672 ## iter 70 value 185.023200 ## iter 80 value 185.007501 ## iter 90 value 185.001455 ## iter 100 value 185.000894 ## final value 185.000894 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.526866 ## iter 10 value 369.294495 ## iter 20 value 218.410126 ## iter 30 value 205.832259 ## iter 40 value 203.295906 ## iter 50 value 201.849350 ## iter 60 value 201.822755 ## iter 70 value 201.805023 ## iter 80 value 201.800573 ## iter 90 value 201.800225 ## final value 201.800196 ## converged ## # weights: 360 (238 variable) ## initial value 634.310391 ## iter 10 value 371.700211 ## iter 20 value 222.598193 ## iter 30 value 208.987738 ## iter 40 value 206.436481 ## iter 50 value 205.021939 ## iter 60 value 205.011978 ## iter 70 value 205.006317 ## iter 80 value 205.001422 ## iter 90 value 205.001190 ## final value 205.001176 ## converged ## # weights: 360 (238 variable) ## initial value 634.061775 ## iter 10 value 421.004153 ## iter 20 value 218.770757 ## iter 30 value 201.255532 ## iter 40 value 193.976208 ## iter 50 value 193.268325 ## iter 60 value 193.150615 ## iter 70 value 193.097043 ## iter 80 value 193.047146 ## iter 90 value 193.043789 ## iter 100 value 193.039479 ## final value 193.039479 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.634116 ## iter 10 value 377.921636 ## iter 20 value 209.260086 ## iter 30 value 192.288020 ## iter 40 value 188.910893 ## iter 50 value 187.833035 ## iter 60 value 187.687869 ## iter 70 value 187.650459 ## iter 80 value 187.630415 ## iter 90 value 187.622664 ## iter 100 value 187.615103 ## final value 187.615103 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.725150 ## iter 10 value 352.807068 ## iter 20 value 204.939962 ## iter 30 value 190.896997 ## iter 40 value 188.821374 ## iter 50 value 188.345300 ## iter 60 value 188.289765 ## iter 70 value 188.224611 ## iter 80 value 188.201702 ## iter 90 value 188.200889 ## iter 100 value 188.199879 ## final value 188.199879 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.256945 ## iter 10 value 361.813082 ## iter 20 value 191.121279 ## iter 30 value 179.688112 ## iter 40 value 176.165030 ## iter 50 value 175.052093 ## iter 60 value 175.016070 ## iter 70 value 174.969409 ## iter 80 value 174.966547 ## iter 90 value 174.966334 ## final value 174.966299 ## converged ## # weights: 360 (238 variable) ## initial value 594.328484 ## iter 10 value 393.547583 ## iter 20 value 221.443742 ## iter 30 value 206.682631 ## iter 40 value 203.581154 ## iter 50 value 202.037028 ## iter 60 value 201.980394 ## iter 70 value 201.953477 ## iter 80 value 201.935305 ## iter 90 value 201.934373 ## iter 100 value 201.934308 ## final value 201.934308 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.943429 ## iter 10 value 374.146640 ## iter 20 value 215.953396 ## iter 30 value 197.142300 ## iter 40 value 190.950836 ## iter 50 value 189.349943 ## iter 60 value 189.167871 ## iter 70 value 189.090318 ## iter 80 value 189.081075 ## iter 90 value 189.079719 ## iter 100 value 189.079560 ## final value 189.079560 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.237743 ## iter 10 value 360.905270 ## iter 20 value 209.168867 ## iter 30 value 191.668965 ## iter 40 value 186.974161 ## iter 50 value 185.298626 ## iter 60 value 185.226410 ## iter 70 value 185.157798 ## iter 80 value 185.149505 ## iter 90 value 185.148949 ## final value 185.148905 ## converged ## # weights: 360 (238 variable) ## initial value 643.970379 ## iter 10 value 398.895738 ## iter 20 value 206.468939 ## iter 30 value 190.557268 ## iter 40 value 187.087844 ## iter 50 value 185.973401 ## iter 60 value 185.874088 ## iter 70 value 185.822205 ## iter 80 value 185.801181 ## iter 90 value 185.796058 ## iter 100 value 185.795036 ## final value 185.795036 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.299364 ## iter 10 value 400.253307 ## iter 20 value 229.079713 ## iter 30 value 214.360186 ## iter 40 value 210.083532 ## iter 50 value 209.323419 ## iter 60 value 209.264081 ## iter 70 value 209.211213 ## iter 80 value 209.195436 ## iter 90 value 209.194249 ## iter 100 value 209.194112 ## final value 209.194112 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.256553 ## iter 10 value 353.938393 ## iter 20 value 218.243247 ## iter 30 value 205.418533 ## iter 40 value 201.793091 ## iter 50 value 200.737501 ## iter 60 value 200.654397 ## iter 70 value 200.646037 ## iter 80 value 200.634883 ## iter 90 value 200.633262 ## final value 200.633147 ## converged ## # weights: 360 (238 variable) ## initial value 626.715794 ## iter 10 value 383.057913 ## iter 20 value 215.350898 ## iter 30 value 199.910539 ## iter 40 value 194.876295 ## iter 50 value 193.905638 ## iter 60 value 193.792832 ## iter 70 value 193.742583 ## iter 80 value 193.734939 ## iter 90 value 193.733912 ## iter 100 value 193.733690 ## final value 193.733690 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.165963 ## iter 10 value 369.839669 ## iter 20 value 236.370326 ## iter 30 value 219.735831 ## iter 40 value 214.079907 ## iter 50 value 212.145781 ## iter 60 value 212.009128 ## iter 70 value 211.946264 ## iter 80 value 211.919827 ## iter 90 value 211.913841 ## iter 100 value 211.913237 ## final value 211.913237 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 622.766723 ## iter 10 value 389.927677 ## iter 20 value 211.335192 ## iter 30 value 196.471173 ## iter 40 value 191.243127 ## iter 50 value 190.443634 ## iter 60 value 190.279423 ## iter 70 value 190.233602 ## iter 80 value 190.195969 ## iter 90 value 190.191552 ## iter 100 value 190.187300 ## final value 190.187300 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.893143 ## iter 10 value 343.807320 ## iter 20 value 212.180609 ## iter 30 value 198.210499 ## iter 40 value 194.763580 ## iter 50 value 191.216993 ## iter 60 value 191.070686 ## iter 70 value 190.998824 ## iter 80 value 190.985796 ## iter 90 value 190.984944 ## final value 190.984832 ## converged ## # weights: 360 (238 variable) ## initial value 594.390336 ## iter 10 value 323.877088 ## iter 20 value 206.735735 ## iter 30 value 193.777364 ## iter 40 value 186.864089 ## iter 50 value 185.806360 ## iter 60 value 185.701442 ## iter 70 value 185.664137 ## iter 80 value 185.632127 ## iter 90 value 185.629477 ## iter 100 value 185.629227 ## final value 185.629227 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.914391 ## iter 10 value 362.944904 ## iter 20 value 190.935770 ## iter 30 value 174.544543 ## iter 40 value 171.180784 ## iter 50 value 169.413611 ## iter 60 value 169.237029 ## iter 70 value 169.218743 ## iter 80 value 169.192051 ## iter 90 value 169.188246 ## iter 100 value 169.187440 ## final value 169.187440 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.948518 ## iter 10 value 346.142988 ## iter 20 value 205.674567 ## iter 30 value 189.862097 ## iter 40 value 186.224073 ## iter 50 value 185.315613 ## iter 60 value 185.265554 ## iter 70 value 185.217873 ## iter 80 value 185.205152 ## iter 90 value 185.202841 ## iter 100 value 185.202625 ## final value 185.202625 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 630.182685 ## iter 10 value 378.482821 ## iter 20 value 216.641878 ## iter 30 value 199.128359 ## iter 40 value 190.996354 ## iter 50 value 188.601525 ## iter 60 value 188.441146 ## iter 70 value 188.415084 ## iter 80 value 188.408258 ## iter 90 value 188.405661 ## iter 100 value 188.405389 ## final value 188.405389 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.805730 ## iter 10 value 359.068570 ## iter 20 value 231.779592 ## iter 30 value 216.396983 ## iter 40 value 211.225953 ## iter 50 value 210.017946 ## iter 60 value 209.833852 ## iter 70 value 209.799309 ## iter 80 value 209.781240 ## iter 90 value 209.769261 ## iter 100 value 209.758717 ## final value 209.758717 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.913508 ## iter 10 value 379.860905 ## iter 20 value 235.802575 ## iter 30 value 219.022575 ## iter 40 value 210.841264 ## iter 50 value 207.751406 ## iter 60 value 207.410242 ## iter 70 value 207.385706 ## iter 80 value 207.378589 ## iter 90 value 207.378035 ## final value 207.377992 ## converged ## # weights: 360 (238 variable) ## initial value 579.809005 ## iter 10 value 355.802550 ## iter 20 value 198.786907 ## iter 30 value 185.149932 ## iter 40 value 181.691257 ## iter 50 value 180.345239 ## iter 60 value 180.311642 ## iter 70 value 180.297186 ## iter 80 value 180.280263 ## iter 90 value 180.276162 ## iter 100 value 180.275982 ## final value 180.275982 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.226596 ## iter 10 value 345.770575 ## iter 20 value 201.382150 ## iter 30 value 183.883505 ## iter 40 value 178.549827 ## iter 50 value 177.221231 ## iter 60 value 177.080135 ## iter 70 value 177.046476 ## iter 80 value 177.021519 ## iter 90 value 177.019532 ## iter 100 value 177.019213 ## final value 177.019213 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.772983 ## iter 10 value 353.404345 ## iter 20 value 224.234524 ## iter 30 value 207.441066 ## iter 40 value 201.002015 ## iter 50 value 200.065711 ## iter 60 value 199.920730 ## iter 70 value 199.865703 ## iter 80 value 199.835062 ## iter 90 value 199.817114 ## iter 100 value 199.810941 ## final value 199.810941 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 566.525903 ## iter 10 value 385.019908 ## iter 20 value 209.362218 ## iter 30 value 196.208641 ## iter 40 value 192.470943 ## iter 50 value 191.392688 ## iter 60 value 191.300747 ## iter 70 value 191.216890 ## iter 80 value 191.212928 ## iter 90 value 191.212705 ## final value 191.212700 ## converged ## # weights: 360 (238 variable) ## initial value 599.817371 ## iter 10 value 360.245968 ## iter 20 value 191.022949 ## iter 30 value 177.142851 ## iter 40 value 174.430331 ## iter 50 value 173.707566 ## iter 60 value 173.600151 ## iter 70 value 173.581066 ## iter 80 value 173.554064 ## iter 90 value 173.549471 ## iter 100 value 173.549169 ## final value 173.549169 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 571.910312 ## iter 10 value 362.089878 ## iter 20 value 201.958559 ## iter 30 value 188.667631 ## iter 40 value 185.028786 ## iter 50 value 183.752040 ## iter 60 value 183.682950 ## iter 70 value 183.626793 ## iter 80 value 183.614840 ## iter 90 value 183.611985 ## iter 100 value 183.610453 ## final value 183.610453 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.929413 ## iter 10 value 376.734723 ## iter 20 value 235.898620 ## iter 30 value 218.957605 ## iter 40 value 211.590057 ## iter 50 value 209.459873 ## iter 60 value 209.328136 ## iter 70 value 209.278783 ## iter 80 value 209.274783 ## iter 90 value 209.274312 ## final value 209.274300 ## converged ## # weights: 360 (238 variable) ## initial value 610.158718 ## iter 10 value 388.361194 ## iter 20 value 204.570774 ## iter 30 value 193.803731 ## iter 40 value 189.209717 ## iter 50 value 188.751685 ## iter 60 value 188.649393 ## iter 70 value 188.628115 ## iter 80 value 188.626826 ## final value 188.626741 ## converged ## # weights: 360 (238 variable) ## initial value 599.069546 ## iter 10 value 424.743864 ## iter 20 value 228.039844 ## iter 30 value 213.536570 ## iter 40 value 208.843917 ## iter 50 value 203.883150 ## iter 60 value 203.442193 ## iter 70 value 203.409089 ## iter 80 value 203.392229 ## iter 90 value 203.390473 ## iter 100 value 203.390403 ## final value 203.390403 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.028199 ## iter 10 value 326.341192 ## iter 20 value 208.901202 ## iter 30 value 197.443158 ## iter 40 value 195.130781 ## iter 50 value 193.827847 ## iter 60 value 193.818367 ## iter 70 value 193.812528 ## iter 80 value 193.806003 ## iter 90 value 193.804293 ## iter 100 value 193.804218 ## final value 193.804218 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.857604 ## iter 10 value 399.758931 ## iter 20 value 206.297813 ## iter 30 value 187.788050 ## iter 40 value 182.509451 ## iter 50 value 181.204658 ## iter 60 value 181.096620 ## iter 70 value 181.063377 ## iter 80 value 181.031303 ## iter 90 value 181.029329 ## iter 100 value 181.025964 ## final value 181.025964 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.505408 ## iter 10 value 355.729165 ## iter 20 value 230.468746 ## iter 30 value 216.476346 ## iter 40 value 214.582271 ## iter 50 value 214.179516 ## iter 60 value 214.117188 ## iter 70 value 214.085326 ## iter 80 value 214.070742 ## iter 90 value 214.068884 ## iter 90 value 214.068883 ## iter 90 value 214.068883 ## final value 214.068883 ## converged ## # weights: 360 (238 variable) ## initial value 612.765396 ## iter 10 value 405.412487 ## iter 20 value 207.020664 ## iter 30 value 189.086763 ## iter 40 value 182.829126 ## iter 50 value 181.525240 ## iter 60 value 181.454148 ## iter 70 value 181.421577 ## iter 80 value 181.399907 ## iter 90 value 181.396520 ## iter 100 value 181.396117 ## final value 181.396117 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.466644 ## iter 10 value 334.181767 ## iter 20 value 229.992307 ## iter 30 value 210.397372 ## iter 40 value 202.819935 ## iter 50 value 201.535080 ## iter 60 value 201.461608 ## iter 70 value 201.398676 ## iter 80 value 201.391875 ## iter 90 value 201.391383 ## final value 201.391353 ## converged ## # weights: 360 (238 variable) ## initial value 592.103685 ## iter 10 value 331.006522 ## iter 20 value 192.631101 ## iter 30 value 171.795779 ## iter 40 value 163.486090 ## iter 50 value 160.754969 ## iter 60 value 160.358253 ## iter 70 value 160.314144 ## iter 80 value 160.303972 ## iter 90 value 160.302836 ## iter 100 value 160.302569 ## final value 160.302569 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.244272 ## iter 10 value 389.689352 ## iter 20 value 212.957298 ## iter 30 value 195.667981 ## iter 40 value 189.337996 ## iter 50 value 188.083329 ## iter 60 value 187.908776 ## iter 70 value 187.824719 ## iter 80 value 187.809147 ## iter 90 value 187.807917 ## iter 100 value 187.807742 ## final value 187.807742 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.757618 ## iter 10 value 354.902131 ## iter 20 value 215.947005 ## iter 30 value 202.838110 ## iter 40 value 198.473533 ## iter 50 value 197.225012 ## iter 60 value 197.118182 ## iter 70 value 197.103725 ## iter 80 value 197.092322 ## iter 90 value 197.090667 ## iter 100 value 197.090506 ## final value 197.090506 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.549745 ## iter 10 value 360.923221 ## iter 20 value 198.227310 ## iter 30 value 186.720642 ## iter 40 value 183.641266 ## iter 50 value 182.641244 ## iter 60 value 182.461261 ## iter 70 value 182.455459 ## iter 80 value 182.445040 ## iter 90 value 182.439773 ## iter 100 value 182.439359 ## final value 182.439359 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.131452 ## iter 10 value 391.381998 ## iter 20 value 211.419065 ## iter 30 value 198.852445 ## iter 40 value 195.798127 ## iter 50 value 194.906886 ## iter 60 value 194.860311 ## iter 70 value 194.835964 ## iter 80 value 194.819744 ## iter 90 value 194.818207 ## iter 100 value 194.818092 ## final value 194.818092 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.241778 ## iter 10 value 354.063848 ## iter 20 value 197.856373 ## iter 30 value 182.884140 ## iter 40 value 177.203041 ## iter 50 value 175.561015 ## iter 60 value 175.439829 ## iter 70 value 175.400116 ## iter 80 value 175.364694 ## iter 90 value 175.356438 ## iter 100 value 175.354310 ## final value 175.354310 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.007972 ## iter 10 value 365.197455 ## iter 20 value 224.151606 ## iter 30 value 208.722154 ## iter 40 value 204.567344 ## iter 50 value 202.337809 ## iter 60 value 202.240041 ## iter 70 value 202.185524 ## iter 80 value 202.169034 ## iter 90 value 202.167826 ## iter 100 value 202.167661 ## final value 202.167661 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.111039 ## iter 10 value 351.812051 ## iter 20 value 233.126196 ## iter 30 value 217.649203 ## iter 40 value 210.413470 ## iter 50 value 209.647470 ## iter 60 value 209.525202 ## iter 70 value 209.466142 ## iter 80 value 209.463584 ## iter 90 value 209.463311 ## final value 209.463305 ## converged ## # weights: 360 (238 variable) ## initial value 594.037242 ## iter 10 value 330.904530 ## iter 20 value 210.599826 ## iter 30 value 194.735258 ## iter 40 value 190.829059 ## iter 50 value 187.992279 ## iter 60 value 187.866093 ## iter 70 value 187.817874 ## iter 80 value 187.801559 ## iter 90 value 187.800530 ## final value 187.800426 ## converged ## # weights: 360 (238 variable) ## initial value 590.875985 ## iter 10 value 388.965020 ## iter 20 value 220.474731 ## iter 30 value 208.549613 ## iter 40 value 204.523176 ## iter 50 value 202.874635 ## iter 60 value 202.846724 ## iter 70 value 202.828771 ## iter 80 value 202.819043 ## iter 90 value 202.818684 ## final value 202.818656 ## converged ## # weights: 360 (238 variable) ## initial value 597.236182 ## iter 10 value 357.353256 ## iter 20 value 209.086788 ## iter 30 value 192.545367 ## iter 40 value 187.910487 ## iter 50 value 186.179188 ## iter 60 value 186.074096 ## iter 70 value 186.041595 ## iter 80 value 186.015573 ## iter 90 value 186.012895 ## iter 100 value 186.012723 ## final value 186.012723 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 577.314276 ## iter 10 value 382.564760 ## iter 20 value 218.545875 ## iter 30 value 200.476099 ## iter 40 value 194.411251 ## iter 50 value 192.179963 ## iter 60 value 191.885938 ## iter 70 value 191.814874 ## iter 80 value 191.799798 ## iter 90 value 191.791109 ## iter 100 value 191.775967 ## final value 191.775967 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.334130 ## iter 10 value 366.330665 ## iter 20 value 195.412337 ## iter 30 value 178.742251 ## iter 40 value 174.802038 ## iter 50 value 172.660018 ## iter 60 value 172.099314 ## iter 70 value 172.031869 ## iter 80 value 172.008780 ## iter 90 value 172.007134 ## iter 100 value 172.002993 ## final value 172.002993 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.795634 ## iter 10 value 382.905349 ## iter 20 value 218.050385 ## iter 30 value 203.930184 ## iter 40 value 197.700905 ## iter 50 value 195.800154 ## iter 60 value 195.721549 ## iter 70 value 195.664024 ## iter 80 value 195.658117 ## iter 90 value 195.657511 ## final value 195.657490 ## converged ## # weights: 360 (238 variable) ## initial value 595.950695 ## iter 10 value 377.131961 ## iter 20 value 221.860122 ## iter 30 value 208.763056 ## iter 40 value 206.550018 ## iter 50 value 205.864089 ## iter 60 value 205.768224 ## iter 70 value 205.759463 ## iter 80 value 205.755785 ## final value 205.755641 ## converged ## # weights: 360 (238 variable) ## initial value 622.683338 ## iter 10 value 402.610733 ## iter 20 value 213.342256 ## iter 30 value 197.834403 ## iter 40 value 193.806668 ## iter 50 value 192.449006 ## iter 60 value 192.328448 ## iter 70 value 192.299777 ## iter 80 value 192.279740 ## iter 90 value 192.275488 ## iter 100 value 192.275104 ## final value 192.275104 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.029705 ## iter 10 value 331.771615 ## iter 20 value 205.622310 ## iter 30 value 192.435042 ## iter 40 value 190.236287 ## iter 50 value 189.647009 ## iter 60 value 189.372207 ## iter 70 value 188.914382 ## iter 80 value 188.883753 ## iter 90 value 188.881713 ## iter 100 value 188.880585 ## final value 188.880585 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.564699 ## iter 10 value 372.341220 ## iter 20 value 249.885751 ## iter 30 value 236.897410 ## iter 40 value 232.055111 ## iter 50 value 229.164222 ## iter 60 value 228.635965 ## iter 70 value 228.586269 ## iter 80 value 228.582315 ## final value 228.582187 ## converged ## # weights: 360 (238 variable) ## initial value 606.983070 ## iter 10 value 418.882712 ## iter 20 value 234.888533 ## iter 30 value 219.701218 ## iter 40 value 212.962560 ## iter 50 value 211.221788 ## iter 60 value 211.060755 ## iter 70 value 211.046501 ## iter 80 value 211.044895 ## final value 211.044805 ## converged ## # weights: 360 (238 variable) ## initial value 576.161941 ## iter 10 value 386.739494 ## iter 20 value 218.702555 ## iter 30 value 206.946202 ## iter 40 value 204.809567 ## iter 50 value 204.500000 ## iter 60 value 204.447715 ## iter 70 value 204.378062 ## final value 204.377291 ## converged ## # weights: 360 (238 variable) ## initial value 590.702405 ## iter 10 value 363.133942 ## iter 20 value 216.246553 ## iter 30 value 203.178739 ## iter 40 value 200.910661 ## iter 50 value 198.647232 ## iter 60 value 198.069384 ## iter 70 value 198.020441 ## iter 80 value 198.012938 ## iter 90 value 198.010644 ## iter 100 value 198.010558 ## final value 198.010558 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.925933 ## iter 10 value 424.760460 ## iter 20 value 234.020264 ## iter 30 value 218.210143 ## iter 40 value 215.111860 ## iter 50 value 213.329333 ## iter 60 value 213.162868 ## iter 70 value 213.127839 ## iter 80 value 213.112579 ## iter 90 value 213.111898 ## final value 213.111867 ## converged ## # weights: 360 (238 variable) ## initial value 590.213742 ## iter 10 value 347.630536 ## iter 20 value 203.054093 ## iter 30 value 189.927306 ## iter 40 value 187.390514 ## iter 50 value 186.956207 ## iter 60 value 186.889323 ## iter 70 value 186.804280 ## iter 80 value 186.802560 ## iter 90 value 186.800824 ## final value 186.800729 ## converged ## # weights: 360 (238 variable) ## initial value 591.462644 ## iter 10 value 341.860354 ## iter 20 value 198.521276 ## iter 30 value 185.932189 ## iter 40 value 182.811760 ## iter 50 value 180.466172 ## iter 60 value 180.338156 ## iter 70 value 180.332153 ## iter 80 value 180.331572 ## final value 180.331528 ## converged ## # weights: 360 (238 variable) ## initial value 548.087344 ## iter 10 value 290.919859 ## iter 20 value 189.781802 ## iter 30 value 176.663451 ## iter 40 value 171.822477 ## iter 50 value 169.245439 ## iter 60 value 168.992314 ## iter 70 value 168.975406 ## iter 80 value 168.971143 ## iter 90 value 168.970517 ## final value 168.970476 ## converged ## # weights: 360 (238 variable) ## initial value 583.403994 ## iter 10 value 325.233677 ## iter 20 value 203.361470 ## iter 30 value 188.372998 ## iter 40 value 186.223977 ## iter 50 value 185.873870 ## iter 60 value 185.841390 ## iter 70 value 185.819875 ## iter 80 value 185.797369 ## iter 90 value 185.795776 ## final value 185.795668 ## converged ## # weights: 360 (238 variable) ## initial value 602.614218 ## iter 10 value 378.798298 ## iter 20 value 215.539317 ## iter 30 value 199.338576 ## iter 40 value 194.902785 ## iter 50 value 193.939534 ## iter 60 value 193.886172 ## iter 70 value 193.847555 ## iter 80 value 193.834430 ## iter 90 value 193.833048 ## iter 100 value 193.832874 ## final value 193.832874 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.760271 ## iter 10 value 364.184736 ## iter 20 value 234.456162 ## iter 30 value 209.469113 ## iter 40 value 202.234848 ## iter 50 value 200.555981 ## iter 60 value 200.250400 ## iter 70 value 200.191772 ## iter 80 value 200.181167 ## iter 90 value 200.180292 ## iter 100 value 200.179155 ## final value 200.179155 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 621.625374 ## iter 10 value 367.481701 ## iter 20 value 202.452529 ## iter 30 value 187.399570 ## iter 40 value 182.753297 ## iter 50 value 180.284469 ## iter 60 value 180.198683 ## iter 70 value 180.193340 ## iter 80 value 180.193151 ## final value 180.193147 ## converged ## # weights: 360 (238 variable) ## initial value 585.384132 ## iter 10 value 359.800510 ## iter 20 value 214.847861 ## iter 30 value 196.361428 ## iter 40 value 190.402875 ## iter 50 value 189.727755 ## iter 60 value 189.609869 ## iter 70 value 189.558960 ## iter 80 value 189.551981 ## iter 90 value 189.551271 ## iter 100 value 189.551039 ## final value 189.551039 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 572.080817 ## iter 10 value 351.639218 ## iter 20 value 210.665188 ## iter 30 value 194.476958 ## iter 40 value 190.176416 ## iter 50 value 188.947737 ## iter 60 value 188.757534 ## iter 70 value 188.658715 ## iter 80 value 188.644191 ## iter 90 value 188.641824 ## iter 100 value 188.641601 ## final value 188.641601 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.153068 ## iter 10 value 310.218142 ## iter 20 value 195.817021 ## iter 30 value 182.557123 ## iter 40 value 177.480505 ## iter 50 value 176.611569 ## iter 60 value 176.566791 ## iter 70 value 176.519638 ## iter 80 value 176.516442 ## iter 90 value 176.516082 ## final value 176.516069 ## converged ## # weights: 360 (238 variable) ## initial value 561.412632 ## iter 10 value 355.345367 ## iter 20 value 215.306934 ## iter 30 value 201.320236 ## iter 40 value 196.549030 ## iter 50 value 195.224334 ## iter 60 value 195.199801 ## iter 70 value 195.171663 ## iter 80 value 195.166031 ## iter 90 value 195.165499 ## iter 100 value 195.165422 ## final value 195.165422 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.224062 ## iter 10 value 405.922893 ## iter 20 value 218.141968 ## iter 30 value 197.289389 ## iter 40 value 192.729374 ## iter 50 value 191.322702 ## iter 60 value 191.205322 ## iter 70 value 191.127235 ## iter 80 value 191.107921 ## iter 90 value 191.102652 ## iter 100 value 191.101506 ## final value 191.101506 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.704539 ## iter 10 value 352.018085 ## iter 20 value 195.807540 ## iter 30 value 182.841264 ## iter 40 value 178.976898 ## iter 50 value 178.429367 ## iter 60 value 178.310098 ## iter 70 value 178.251957 ## iter 80 value 178.248481 ## iter 90 value 178.248168 ## final value 178.248148 ## converged ## # weights: 360 (238 variable) ## initial value 606.863101 ## iter 10 value 369.541758 ## iter 20 value 204.078414 ## iter 30 value 188.898486 ## iter 40 value 185.925397 ## iter 50 value 184.719435 ## iter 60 value 184.616745 ## iter 70 value 184.582779 ## iter 80 value 184.574351 ## iter 90 value 184.573965 ## iter 100 value 184.573923 ## final value 184.573923 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.974212 ## iter 10 value 384.813679 ## iter 20 value 234.631161 ## iter 30 value 218.387378 ## iter 40 value 211.869545 ## iter 50 value 210.866295 ## iter 60 value 210.736723 ## iter 70 value 210.646162 ## iter 80 value 210.627823 ## iter 90 value 210.626417 ## iter 100 value 210.626172 ## final value 210.626172 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.525662 ## iter 10 value 345.203085 ## iter 20 value 217.399461 ## iter 30 value 197.717282 ## iter 40 value 189.610811 ## iter 50 value 188.474795 ## iter 60 value 188.327323 ## iter 70 value 188.252739 ## iter 80 value 188.221512 ## iter 90 value 188.218078 ## iter 100 value 188.217706 ## final value 188.217706 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.764097 ## iter 10 value 357.888621 ## iter 20 value 206.129238 ## iter 30 value 192.222743 ## iter 40 value 185.685890 ## iter 50 value 184.596244 ## iter 60 value 184.487032 ## iter 70 value 184.437345 ## iter 80 value 184.432082 ## iter 90 value 184.431491 ## final value 184.431464 ## converged ## # weights: 360 (238 variable) ## initial value 601.202611 ## iter 10 value 369.098177 ## iter 20 value 187.030493 ## iter 30 value 173.343985 ## iter 40 value 168.602553 ## iter 50 value 166.255936 ## iter 60 value 166.157584 ## iter 70 value 166.102510 ## iter 80 value 166.076039 ## iter 90 value 166.072969 ## iter 100 value 166.072505 ## final value 166.072505 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.579293 ## iter 10 value 345.300722 ## iter 20 value 204.532208 ## iter 30 value 185.673565 ## iter 40 value 181.654947 ## iter 50 value 181.056985 ## iter 60 value 180.958913 ## iter 70 value 180.901840 ## iter 80 value 180.879129 ## iter 90 value 180.874936 ## iter 100 value 180.874262 ## final value 180.874262 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.087082 ## iter 10 value 412.519537 ## iter 20 value 233.075309 ## iter 30 value 212.838814 ## iter 40 value 204.222983 ## iter 50 value 201.110205 ## iter 60 value 200.956645 ## iter 70 value 200.901746 ## iter 80 value 200.857177 ## iter 90 value 200.852479 ## iter 100 value 200.851989 ## final value 200.851989 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.405615 ## iter 10 value 342.167407 ## iter 20 value 215.616813 ## iter 30 value 202.110526 ## iter 40 value 198.991194 ## iter 50 value 197.917977 ## iter 60 value 197.832036 ## iter 70 value 197.768362 ## iter 80 value 197.750793 ## iter 90 value 197.749651 ## iter 100 value 197.749481 ## final value 197.749481 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.557765 ## iter 10 value 379.170839 ## iter 20 value 215.291153 ## iter 30 value 200.325461 ## iter 40 value 196.579346 ## iter 50 value 196.000329 ## iter 60 value 195.912651 ## iter 70 value 195.895955 ## iter 80 value 195.877688 ## iter 90 value 195.876726 ## iter 100 value 195.876637 ## final value 195.876637 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.749053 ## iter 10 value 355.540316 ## iter 20 value 215.289972 ## iter 30 value 201.755535 ## iter 40 value 199.604397 ## iter 50 value 198.361027 ## iter 60 value 198.265519 ## iter 70 value 198.218802 ## iter 80 value 198.200561 ## iter 90 value 198.198364 ## iter 100 value 198.196139 ## final value 198.196139 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 645.284320 ## iter 10 value 394.012370 ## iter 20 value 238.705033 ## iter 30 value 217.145839 ## iter 40 value 212.095978 ## iter 50 value 210.834475 ## iter 60 value 210.704375 ## iter 70 value 210.663172 ## iter 80 value 210.628877 ## iter 90 value 210.622417 ## iter 100 value 210.619729 ## final value 210.619729 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.347186 ## iter 10 value 385.734644 ## iter 20 value 207.470185 ## iter 30 value 190.123755 ## iter 40 value 185.647057 ## iter 50 value 184.310887 ## iter 60 value 184.247730 ## iter 70 value 184.206706 ## iter 80 value 184.181310 ## iter 90 value 184.178497 ## iter 100 value 184.178241 ## final value 184.178241 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.452511 ## iter 10 value 399.669292 ## iter 20 value 199.568073 ## iter 30 value 181.532833 ## iter 40 value 176.325139 ## iter 50 value 175.152460 ## iter 60 value 175.044100 ## iter 70 value 174.976855 ## iter 80 value 174.951530 ## iter 90 value 174.949225 ## iter 100 value 174.949001 ## final value 174.949001 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.018449 ## iter 10 value 324.334815 ## iter 20 value 201.171040 ## iter 30 value 189.965886 ## iter 40 value 188.030785 ## iter 50 value 187.022251 ## iter 60 value 186.963009 ## iter 70 value 186.939215 ## iter 80 value 186.926834 ## iter 90 value 186.926382 ## final value 186.926341 ## converged ## # weights: 360 (238 variable) ## initial value 611.517702 ## iter 10 value 323.397350 ## iter 20 value 203.744655 ## iter 30 value 188.838291 ## iter 40 value 182.541518 ## iter 50 value 181.019547 ## iter 60 value 180.853935 ## iter 70 value 180.790795 ## iter 80 value 180.770442 ## iter 90 value 180.769356 ## iter 100 value 180.769214 ## final value 180.769214 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.886704 ## iter 10 value 385.096430 ## iter 20 value 216.992872 ## iter 30 value 198.784454 ## iter 40 value 192.814588 ## iter 50 value 191.838576 ## iter 60 value 191.700742 ## iter 70 value 191.669502 ## iter 80 value 191.667677 ## iter 90 value 191.667388 ## final value 191.667380 ## converged ## # weights: 360 (238 variable) ## initial value 587.498082 ## iter 10 value 355.971434 ## iter 20 value 209.279313 ## iter 30 value 194.905513 ## iter 40 value 189.950615 ## iter 50 value 189.083049 ## iter 60 value 189.010059 ## iter 70 value 188.956889 ## iter 80 value 188.945652 ## iter 90 value 188.944761 ## iter 100 value 188.944685 ## final value 188.944685 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.843953 ## iter 10 value 386.250201 ## iter 20 value 214.343234 ## iter 30 value 199.927997 ## iter 40 value 191.147094 ## iter 50 value 187.750352 ## iter 60 value 187.479086 ## iter 70 value 187.448301 ## iter 80 value 187.446304 ## final value 187.446161 ## converged ## # weights: 360 (238 variable) ## initial value 632.478895 ## iter 10 value 389.158046 ## iter 20 value 216.898854 ## iter 30 value 195.012593 ## iter 40 value 187.023802 ## iter 50 value 186.369938 ## iter 60 value 186.265958 ## iter 70 value 186.213602 ## iter 80 value 186.210618 ## iter 90 value 186.210221 ## final value 186.210215 ## converged ## # weights: 360 (238 variable) ## initial value 614.148329 ## iter 10 value 373.761420 ## iter 20 value 221.606456 ## iter 30 value 206.803068 ## iter 40 value 204.227430 ## iter 50 value 203.946621 ## iter 60 value 203.923011 ## iter 70 value 203.882291 ## iter 80 value 203.879254 ## iter 90 value 203.878653 ## iter 100 value 203.878597 ## final value 203.878597 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.501449 ## iter 10 value 362.313442 ## iter 20 value 208.797121 ## iter 30 value 189.710974 ## iter 40 value 181.309309 ## iter 50 value 180.290124 ## iter 60 value 180.207672 ## iter 70 value 180.156136 ## iter 80 value 180.144781 ## iter 90 value 180.143774 ## iter 100 value 180.143669 ## final value 180.143669 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.275716 ## iter 10 value 332.174450 ## iter 20 value 195.974921 ## iter 30 value 184.710488 ## iter 40 value 181.146575 ## iter 50 value 179.963414 ## iter 60 value 179.931598 ## iter 70 value 179.910920 ## iter 80 value 179.899997 ## iter 90 value 179.898625 ## iter 100 value 179.898488 ## final value 179.898488 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.986655 ## iter 10 value 343.193533 ## iter 20 value 215.422688 ## iter 30 value 203.663998 ## iter 40 value 201.280251 ## iter 50 value 200.037557 ## iter 60 value 199.973425 ## iter 70 value 199.929702 ## iter 80 value 199.919615 ## iter 90 value 199.919192 ## iter 100 value 199.919153 ## final value 199.919153 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 569.123572 ## iter 10 value 363.808435 ## iter 20 value 216.158819 ## iter 30 value 202.964857 ## iter 40 value 198.241971 ## iter 50 value 197.216539 ## iter 60 value 197.095290 ## iter 70 value 197.030964 ## iter 80 value 197.011481 ## iter 90 value 197.002478 ## iter 100 value 197.000963 ## final value 197.000963 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.988100 ## iter 10 value 375.902902 ## iter 20 value 187.420429 ## iter 30 value 173.927353 ## iter 40 value 165.405754 ## iter 50 value 164.717444 ## iter 60 value 164.664912 ## iter 70 value 164.640331 ## iter 80 value 164.637746 ## iter 90 value 164.637465 ## final value 164.637455 ## converged ## # weights: 360 (238 variable) ## initial value 583.956596 ## iter 10 value 366.285780 ## iter 20 value 217.663649 ## iter 30 value 206.681615 ## iter 40 value 204.469525 ## iter 50 value 203.664359 ## iter 60 value 203.493365 ## iter 70 value 203.490493 ## iter 80 value 203.486788 ## iter 90 value 203.480949 ## iter 100 value 203.479280 ## final value 203.479280 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.269564 ## iter 10 value 361.447111 ## iter 20 value 208.984587 ## iter 30 value 190.519698 ## iter 40 value 184.084845 ## iter 50 value 179.428260 ## iter 60 value 179.037415 ## iter 70 value 178.941591 ## iter 80 value 178.931303 ## iter 90 value 178.929916 ## iter 100 value 178.929730 ## final value 178.929730 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.944543 ## iter 10 value 333.371958 ## iter 20 value 187.214568 ## iter 30 value 170.563515 ## iter 40 value 166.314165 ## iter 50 value 165.294707 ## iter 60 value 165.148780 ## iter 70 value 165.088473 ## iter 80 value 165.042022 ## iter 90 value 165.030793 ## iter 100 value 165.024900 ## final value 165.024900 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.551938 ## iter 10 value 420.448557 ## iter 20 value 234.000205 ## iter 30 value 215.494722 ## iter 40 value 210.477517 ## iter 50 value 207.181230 ## iter 60 value 206.486609 ## iter 70 value 206.434819 ## iter 80 value 206.417765 ## iter 90 value 206.415761 ## iter 100 value 206.415661 ## final value 206.415661 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.932538 ## iter 10 value 362.941397 ## iter 20 value 193.876005 ## iter 30 value 179.255569 ## iter 40 value 177.345172 ## iter 50 value 176.979613 ## iter 60 value 176.900056 ## iter 70 value 176.890760 ## iter 80 value 176.889899 ## iter 90 value 176.889770 ## final value 176.889766 ## converged ## # weights: 360 (238 variable) ## initial value 623.098723 ## iter 10 value 389.774932 ## iter 20 value 226.637418 ## iter 30 value 207.830835 ## iter 40 value 198.977902 ## iter 50 value 197.044338 ## iter 60 value 196.752359 ## iter 70 value 196.714528 ## iter 80 value 196.673627 ## iter 90 value 196.659548 ## iter 100 value 196.658564 ## final value 196.658564 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.609804 ## iter 10 value 368.621447 ## iter 20 value 231.405227 ## iter 30 value 218.878790 ## iter 40 value 215.459612 ## iter 50 value 215.002098 ## iter 60 value 214.988329 ## iter 70 value 214.969352 ## iter 80 value 214.953023 ## iter 90 value 214.951117 ## final value 214.950924 ## converged ## # weights: 360 (238 variable) ## initial value 594.305304 ## iter 10 value 340.487016 ## iter 20 value 191.653610 ## iter 30 value 177.260762 ## iter 40 value 172.877188 ## iter 50 value 170.800426 ## iter 60 value 170.736378 ## iter 70 value 170.686917 ## iter 80 value 170.673902 ## iter 90 value 170.672826 ## iter 100 value 170.672766 ## final value 170.672766 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.610240 ## iter 10 value 318.153592 ## iter 20 value 210.980864 ## iter 30 value 195.102298 ## iter 40 value 187.992693 ## iter 50 value 187.080281 ## iter 60 value 187.000748 ## iter 70 value 186.942163 ## iter 80 value 186.922256 ## iter 90 value 186.917588 ## iter 100 value 186.917179 ## final value 186.917179 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.859900 ## iter 10 value 346.416516 ## iter 20 value 199.778977 ## iter 30 value 185.131580 ## iter 40 value 181.591517 ## iter 50 value 180.769255 ## iter 60 value 180.732204 ## iter 70 value 180.691547 ## iter 80 value 180.686395 ## iter 90 value 180.686125 ## final value 180.686105 ## converged ## # weights: 360 (238 variable) ## initial value 634.241289 ## iter 10 value 403.273276 ## iter 20 value 232.443681 ## iter 30 value 215.604330 ## iter 40 value 211.567686 ## iter 50 value 209.658382 ## iter 60 value 209.486157 ## iter 70 value 209.415584 ## iter 80 value 209.389670 ## iter 90 value 209.388939 ## final value 209.388908 ## converged ## # weights: 360 (238 variable) ## initial value 592.545327 ## iter 10 value 398.474937 ## iter 20 value 234.950416 ## iter 30 value 214.307108 ## iter 40 value 209.490866 ## iter 50 value 208.871411 ## iter 60 value 208.769352 ## iter 70 value 208.700313 ## iter 80 value 208.684561 ## iter 90 value 208.680230 ## iter 100 value 208.679729 ## final value 208.679729 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 561.671575 ## iter 10 value 334.396909 ## iter 20 value 205.112153 ## iter 30 value 191.352314 ## iter 40 value 188.676040 ## iter 50 value 187.860906 ## iter 60 value 187.760859 ## iter 70 value 187.672583 ## iter 80 value 187.666668 ## iter 90 value 187.666335 ## final value 187.666294 ## converged ## # weights: 360 (238 variable) ## initial value 621.467174 ## iter 10 value 376.938681 ## iter 20 value 223.685172 ## iter 30 value 204.338069 ## iter 40 value 197.020829 ## iter 50 value 195.576653 ## iter 60 value 195.501499 ## iter 70 value 195.458198 ## iter 80 value 195.445846 ## iter 90 value 195.444906 ## final value 195.444786 ## converged ## # weights: 360 (238 variable) ## initial value 589.903604 ## iter 10 value 324.721691 ## iter 20 value 191.065088 ## iter 30 value 177.092305 ## iter 40 value 175.130937 ## iter 50 value 174.436191 ## iter 60 value 174.373616 ## iter 70 value 174.337935 ## iter 80 value 174.313663 ## iter 90 value 174.310147 ## iter 100 value 174.309512 ## final value 174.309512 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.411918 ## iter 10 value 336.492420 ## iter 20 value 216.175695 ## iter 30 value 202.347350 ## iter 40 value 197.785572 ## iter 50 value 197.081840 ## iter 60 value 197.011504 ## iter 70 value 196.960757 ## iter 80 value 196.956601 ## iter 90 value 196.956301 ## final value 196.956263 ## converged ## # weights: 360 (238 variable) ## initial value 617.077010 ## iter 10 value 389.685869 ## iter 20 value 211.103451 ## iter 30 value 190.839478 ## iter 40 value 185.322393 ## iter 50 value 184.146581 ## iter 60 value 184.002424 ## iter 70 value 183.900637 ## iter 80 value 183.883689 ## iter 90 value 183.882820 ## final value 183.882748 ## converged ## # weights: 360 (238 variable) ## initial value 600.016550 ## iter 10 value 343.107269 ## iter 20 value 196.851780 ## iter 30 value 185.762668 ## iter 40 value 182.038937 ## iter 50 value 180.755784 ## iter 60 value 180.692484 ## iter 70 value 180.653123 ## iter 80 value 180.650188 ## iter 90 value 180.649916 ## final value 180.649908 ## converged ## # weights: 360 (238 variable) ## initial value 571.995235 ## iter 10 value 404.833492 ## iter 20 value 203.916607 ## iter 30 value 190.984311 ## iter 40 value 187.242417 ## iter 50 value 186.089508 ## iter 60 value 186.062710 ## iter 70 value 186.034172 ## iter 80 value 186.023506 ## iter 90 value 186.023028 ## final value 186.022988 ## converged ## # weights: 360 (238 variable) ## initial value 616.603727 ## iter 10 value 361.632205 ## iter 20 value 211.316937 ## iter 30 value 196.764517 ## iter 40 value 194.049472 ## iter 50 value 193.076927 ## iter 60 value 192.969631 ## iter 70 value 192.897282 ## iter 80 value 192.880644 ## iter 90 value 192.879362 ## iter 100 value 192.879058 ## final value 192.879058 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 574.350000 ## iter 10 value 362.333939 ## iter 20 value 195.981859 ## iter 30 value 176.580864 ## iter 40 value 169.266661 ## iter 50 value 167.324105 ## iter 60 value 167.045215 ## iter 70 value 167.008922 ## iter 80 value 167.003672 ## iter 90 value 167.002306 ## iter 100 value 167.002226 ## final value 167.002226 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.405008 ## iter 10 value 379.578274 ## iter 20 value 219.985217 ## iter 30 value 203.977927 ## iter 40 value 198.465802 ## iter 50 value 196.771879 ## iter 60 value 196.678845 ## iter 70 value 196.592954 ## iter 80 value 196.576752 ## iter 90 value 196.575750 ## iter 100 value 196.575643 ## final value 196.575643 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.998149 ## iter 10 value 359.041683 ## iter 20 value 199.323644 ## iter 30 value 183.638191 ## iter 40 value 180.824819 ## iter 50 value 179.353712 ## iter 60 value 179.284438 ## iter 70 value 179.270796 ## iter 80 value 179.257306 ## iter 90 value 179.253875 ## iter 100 value 179.253519 ## final value 179.253519 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.645070 ## iter 10 value 382.286626 ## iter 20 value 228.265456 ## iter 30 value 211.440052 ## iter 40 value 207.224318 ## iter 50 value 205.483763 ## iter 60 value 205.384221 ## iter 70 value 205.309983 ## iter 80 value 205.306441 ## iter 90 value 205.306185 ## final value 205.306138 ## converged ## # weights: 360 (238 variable) ## initial value 613.435989 ## iter 10 value 363.308119 ## iter 20 value 223.578062 ## iter 30 value 207.913244 ## iter 40 value 202.839026 ## iter 50 value 197.191682 ## iter 60 value 196.909155 ## iter 70 value 196.843326 ## iter 80 value 196.837978 ## iter 90 value 196.837338 ## final value 196.837280 ## converged ## # weights: 360 (238 variable) ## initial value 588.412787 ## iter 10 value 298.656948 ## iter 20 value 180.530759 ## iter 30 value 167.210530 ## iter 40 value 161.737606 ## iter 50 value 160.471616 ## iter 60 value 160.412877 ## iter 70 value 160.386722 ## iter 80 value 160.368256 ## iter 90 value 160.364683 ## iter 100 value 160.363762 ## final value 160.363762 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.761947 ## iter 10 value 328.834284 ## iter 20 value 194.177237 ## iter 30 value 176.547753 ## iter 40 value 171.245044 ## iter 50 value 169.634735 ## iter 60 value 169.281162 ## iter 70 value 169.210428 ## iter 80 value 169.155685 ## iter 90 value 169.133313 ## iter 100 value 169.130988 ## final value 169.130988 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 626.676244 ## iter 10 value 386.285379 ## iter 20 value 238.714677 ## iter 30 value 217.961422 ## iter 40 value 209.771661 ## iter 50 value 208.312376 ## iter 60 value 208.126856 ## iter 70 value 208.049347 ## iter 80 value 208.041707 ## iter 90 value 208.040960 ## iter 100 value 208.040794 ## final value 208.040794 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.507928 ## iter 10 value 358.366795 ## iter 20 value 239.977761 ## iter 30 value 216.451051 ## iter 40 value 207.034419 ## iter 50 value 206.146742 ## iter 60 value 205.999932 ## iter 70 value 205.955941 ## iter 80 value 205.953504 ## final value 205.953376 ## converged ## # weights: 360 (238 variable) ## initial value 624.133177 ## iter 10 value 383.939288 ## iter 20 value 202.214326 ## iter 30 value 182.828381 ## iter 40 value 179.855328 ## iter 50 value 178.014711 ## iter 60 value 177.887011 ## iter 70 value 177.863920 ## iter 80 value 177.847392 ## iter 90 value 177.846653 ## final value 177.846572 ## converged ## # weights: 360 (238 variable) ## initial value 603.415546 ## iter 10 value 390.573399 ## iter 20 value 208.962187 ## iter 30 value 193.023489 ## iter 40 value 189.047027 ## iter 50 value 186.742071 ## iter 60 value 186.306054 ## iter 70 value 186.242023 ## iter 80 value 186.217048 ## iter 90 value 186.214733 ## iter 100 value 186.214592 ## final value 186.214592 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.981707 ## iter 10 value 352.771700 ## iter 20 value 209.165666 ## iter 30 value 195.122063 ## iter 40 value 188.037173 ## iter 50 value 186.040072 ## iter 60 value 185.944903 ## iter 70 value 185.871298 ## iter 80 value 185.859732 ## iter 90 value 185.858805 ## final value 185.858717 ## converged ## # weights: 360 (238 variable) ## initial value 625.259034 ## iter 10 value 351.183140 ## iter 20 value 216.568150 ## iter 30 value 200.343626 ## iter 40 value 195.233987 ## iter 50 value 194.223963 ## iter 60 value 194.179112 ## iter 70 value 194.137552 ## iter 80 value 194.124703 ## iter 90 value 194.117624 ## iter 100 value 194.117214 ## final value 194.117214 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.778269 ## iter 10 value 369.101474 ## iter 20 value 224.560840 ## iter 30 value 210.563240 ## iter 40 value 207.209404 ## iter 50 value 205.445608 ## iter 60 value 205.322688 ## iter 70 value 205.308009 ## iter 80 value 205.287383 ## iter 90 value 205.284619 ## iter 100 value 205.284422 ## final value 205.284422 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.449571 ## iter 10 value 412.368266 ## iter 20 value 203.531829 ## iter 30 value 190.889355 ## iter 40 value 187.347356 ## iter 50 value 186.382693 ## iter 60 value 186.350994 ## iter 70 value 186.310283 ## iter 80 value 186.305909 ## iter 90 value 186.305601 ## final value 186.305565 ## converged ## # weights: 360 (238 variable) ## initial value 620.201793 ## iter 10 value 385.041814 ## iter 20 value 236.898409 ## iter 30 value 218.976403 ## iter 40 value 215.092578 ## iter 50 value 214.042262 ## iter 60 value 213.867401 ## iter 70 value 213.863470 ## iter 80 value 213.849769 ## iter 90 value 213.847403 ## iter 100 value 213.847319 ## final value 213.847319 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.453541 ## iter 10 value 392.876148 ## iter 20 value 216.059028 ## iter 30 value 200.282339 ## iter 40 value 197.218984 ## iter 50 value 194.790411 ## iter 60 value 194.354155 ## iter 70 value 194.276069 ## iter 80 value 194.256113 ## iter 90 value 194.253217 ## iter 100 value 194.249972 ## final value 194.249972 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.222331 ## iter 10 value 371.802576 ## iter 20 value 213.933503 ## iter 30 value 199.855123 ## iter 40 value 195.303227 ## iter 50 value 194.310225 ## iter 60 value 194.259260 ## iter 70 value 194.207535 ## iter 80 value 194.200850 ## iter 90 value 194.200402 ## final value 194.200382 ## converged ## # weights: 360 (238 variable) ## initial value 589.070965 ## iter 10 value 340.673159 ## iter 20 value 206.423307 ## iter 30 value 192.896088 ## iter 40 value 188.555574 ## iter 50 value 187.028343 ## iter 60 value 186.896531 ## iter 70 value 186.803726 ## iter 80 value 186.799242 ## iter 90 value 186.798864 ## final value 186.798827 ## converged ## # weights: 360 (238 variable) ## initial value 617.288932 ## iter 10 value 340.625137 ## iter 20 value 214.782985 ## iter 30 value 196.519655 ## iter 40 value 187.403528 ## iter 50 value 185.944152 ## iter 60 value 185.828189 ## iter 70 value 185.771400 ## iter 80 value 185.756171 ## iter 90 value 185.753810 ## iter 100 value 185.749845 ## final value 185.749845 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.012892 ## iter 10 value 368.904459 ## iter 20 value 206.309890 ## iter 30 value 190.736019 ## iter 40 value 185.270789 ## iter 50 value 183.236850 ## iter 60 value 183.132572 ## iter 70 value 183.083802 ## iter 80 value 183.061344 ## iter 90 value 183.046478 ## iter 100 value 183.045045 ## final value 183.045045 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.453384 ## iter 10 value 369.234035 ## iter 20 value 185.775268 ## iter 30 value 165.904203 ## iter 40 value 162.878458 ## iter 50 value 161.519157 ## iter 60 value 161.401931 ## iter 70 value 161.389633 ## iter 80 value 161.374917 ## iter 90 value 161.373893 ## final value 161.373814 ## converged ## # weights: 360 (238 variable) ## initial value 591.425621 ## iter 10 value 321.566721 ## iter 20 value 195.289044 ## iter 30 value 182.561744 ## iter 40 value 178.933092 ## iter 50 value 178.236340 ## iter 60 value 178.159569 ## iter 70 value 178.118727 ## iter 80 value 178.100643 ## iter 90 value 178.098959 ## final value 178.098807 ## converged ## # weights: 360 (238 variable) ## initial value 603.986055 ## iter 10 value 369.233635 ## iter 20 value 212.710597 ## iter 30 value 195.847055 ## iter 40 value 189.743576 ## iter 50 value 188.449255 ## iter 60 value 188.358941 ## iter 70 value 188.323693 ## iter 80 value 188.291950 ## iter 90 value 188.288921 ## iter 100 value 188.288618 ## final value 188.288618 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.567857 ## iter 10 value 368.883970 ## iter 20 value 212.463776 ## iter 30 value 200.029912 ## iter 40 value 194.099661 ## iter 50 value 192.046344 ## iter 60 value 191.910408 ## iter 70 value 191.887127 ## iter 80 value 191.886383 ## iter 90 value 191.886253 ## final value 191.886249 ## converged ## # weights: 360 (238 variable) ## initial value 618.307785 ## iter 10 value 348.232549 ## iter 20 value 183.315427 ## iter 30 value 166.275015 ## iter 40 value 162.217634 ## iter 50 value 160.424194 ## iter 60 value 159.993321 ## iter 70 value 159.913768 ## iter 80 value 159.887832 ## iter 90 value 159.879551 ## iter 100 value 159.876773 ## final value 159.876773 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.959471 ## iter 10 value 339.732594 ## iter 20 value 206.223120 ## iter 30 value 192.649282 ## iter 40 value 190.060239 ## iter 50 value 189.592117 ## iter 60 value 189.426535 ## iter 70 value 189.422806 ## iter 80 value 189.421113 ## iter 90 value 189.419323 ## iter 100 value 189.419244 ## final value 189.419244 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.419234 ## iter 10 value 386.088262 ## iter 20 value 201.923097 ## iter 30 value 185.562807 ## iter 40 value 181.155974 ## iter 50 value 178.815035 ## iter 60 value 178.560548 ## iter 70 value 178.434721 ## iter 80 value 178.420316 ## iter 90 value 178.409447 ## iter 100 value 178.408537 ## final value 178.408537 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.122339 ## iter 10 value 368.378305 ## iter 20 value 201.320418 ## iter 30 value 182.759183 ## iter 40 value 177.779165 ## iter 50 value 176.673382 ## iter 60 value 176.553148 ## iter 70 value 176.484839 ## iter 80 value 176.462730 ## iter 90 value 176.451620 ## iter 100 value 176.450087 ## final value 176.450087 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.661627 ## iter 10 value 319.486231 ## iter 20 value 198.679086 ## iter 30 value 184.746648 ## iter 40 value 180.254586 ## iter 50 value 179.226090 ## iter 60 value 179.153862 ## iter 70 value 179.090028 ## iter 80 value 179.080583 ## iter 90 value 179.079971 ## iter 100 value 179.079879 ## final value 179.079879 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 563.221277 ## iter 10 value 368.266572 ## iter 20 value 209.183448 ## iter 30 value 194.132322 ## iter 40 value 186.455358 ## iter 50 value 185.277796 ## iter 60 value 185.162921 ## iter 70 value 185.133622 ## iter 80 value 185.130795 ## iter 90 value 185.130598 ## final value 185.130592 ## converged ## # weights: 360 (238 variable) ## initial value 606.453209 ## iter 10 value 384.009790 ## iter 20 value 223.310714 ## iter 30 value 207.198863 ## iter 40 value 203.223176 ## iter 50 value 200.719714 ## iter 60 value 200.646177 ## iter 70 value 200.615798 ## iter 80 value 200.606358 ## iter 90 value 200.605895 ## final value 200.605834 ## converged ## # weights: 360 (238 variable) ## initial value 612.396592 ## iter 10 value 376.251928 ## iter 20 value 192.821947 ## iter 30 value 176.467594 ## iter 40 value 168.236326 ## iter 50 value 166.567173 ## iter 60 value 166.428660 ## iter 70 value 166.351146 ## iter 80 value 166.331309 ## iter 90 value 166.328104 ## iter 100 value 166.327670 ## final value 166.327670 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.110410 ## iter 10 value 361.936258 ## iter 20 value 212.512951 ## iter 30 value 200.113848 ## iter 40 value 194.667298 ## iter 50 value 193.258852 ## iter 60 value 193.128264 ## iter 70 value 193.054423 ## iter 80 value 193.043800 ## iter 90 value 193.042485 ## iter 100 value 193.042416 ## final value 193.042416 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.042195 ## iter 10 value 380.181132 ## iter 20 value 241.987643 ## iter 30 value 225.435696 ## iter 40 value 219.330172 ## iter 50 value 217.690679 ## iter 60 value 217.607426 ## iter 70 value 217.566022 ## iter 80 value 217.550234 ## iter 90 value 217.549254 ## final value 217.549137 ## converged ## # weights: 360 (238 variable) ## initial value 582.991904 ## iter 10 value 363.490251 ## iter 20 value 210.101091 ## iter 30 value 195.211260 ## iter 40 value 187.717003 ## iter 50 value 186.200468 ## iter 60 value 186.087181 ## iter 70 value 186.006368 ## iter 80 value 185.998639 ## iter 90 value 185.997906 ## iter 100 value 185.997791 ## final value 185.997791 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.483744 ## iter 10 value 391.486042 ## iter 20 value 219.035465 ## iter 30 value 204.549568 ## iter 40 value 195.434209 ## iter 50 value 192.669636 ## iter 60 value 192.454706 ## iter 70 value 192.423415 ## iter 80 value 192.417854 ## iter 90 value 192.417586 ## final value 192.417556 ## converged ## # weights: 360 (238 variable) ## initial value 596.204694 ## iter 10 value 358.514034 ## iter 20 value 221.914015 ## iter 30 value 207.502142 ## iter 40 value 202.240389 ## iter 50 value 200.597420 ## iter 60 value 200.499167 ## iter 70 value 200.424771 ## iter 80 value 200.417022 ## iter 90 value 200.416475 ## final value 200.416408 ## converged ## # weights: 360 (238 variable) ## initial value 594.433841 ## iter 10 value 384.233828 ## iter 20 value 205.980694 ## iter 30 value 189.635040 ## iter 40 value 186.992824 ## iter 50 value 186.442498 ## iter 60 value 186.389856 ## iter 70 value 186.314177 ## iter 80 value 186.301225 ## iter 90 value 186.298695 ## iter 100 value 186.298034 ## final value 186.298034 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 575.979572 ## iter 10 value 356.716703 ## iter 20 value 209.104158 ## iter 30 value 192.068192 ## iter 40 value 184.553541 ## iter 50 value 183.650987 ## iter 60 value 183.535701 ## iter 70 value 183.465193 ## iter 80 value 183.461880 ## iter 90 value 183.461644 ## final value 183.461640 ## converged ## # weights: 360 (238 variable) ## initial value 619.557456 ## iter 10 value 376.308078 ## iter 20 value 223.142800 ## iter 30 value 204.149799 ## iter 40 value 195.807683 ## iter 50 value 193.378032 ## iter 60 value 193.223395 ## iter 70 value 193.198141 ## iter 80 value 193.195091 ## iter 90 value 193.194826 ## final value 193.194807 ## converged ## # weights: 360 (238 variable) ## initial value 637.430890 ## iter 10 value 417.670368 ## iter 20 value 213.609471 ## iter 30 value 194.503249 ## iter 40 value 187.737383 ## iter 50 value 185.171625 ## iter 60 value 184.949455 ## iter 70 value 184.909890 ## iter 80 value 184.882131 ## iter 90 value 184.869298 ## iter 100 value 184.861032 ## final value 184.861032 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.711829 ## iter 10 value 416.040408 ## iter 20 value 224.211717 ## iter 30 value 212.338612 ## iter 40 value 209.550967 ## iter 50 value 207.874317 ## iter 60 value 207.761924 ## iter 70 value 207.742723 ## iter 80 value 207.728468 ## iter 90 value 207.727904 ## final value 207.727867 ## converged ## # weights: 360 (238 variable) ## initial value 595.230335 ## iter 10 value 347.812061 ## iter 20 value 186.431591 ## iter 30 value 169.001179 ## iter 40 value 159.929431 ## iter 50 value 158.145385 ## iter 60 value 157.817792 ## iter 70 value 157.778734 ## iter 80 value 157.765374 ## iter 90 value 157.763338 ## iter 100 value 157.763081 ## final value 157.763081 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.251153 ## iter 10 value 332.026587 ## iter 20 value 201.534166 ## iter 30 value 187.852494 ## iter 40 value 184.307811 ## iter 50 value 183.442076 ## iter 60 value 183.331749 ## iter 70 value 183.255998 ## iter 80 value 183.246222 ## iter 90 value 183.245530 ## final value 183.245471 ## converged ## # weights: 360 (238 variable) ## initial value 590.521573 ## iter 10 value 351.087051 ## iter 20 value 208.765882 ## iter 30 value 193.467225 ## iter 40 value 187.148041 ## iter 50 value 185.205308 ## iter 60 value 185.038379 ## iter 70 value 184.963901 ## iter 80 value 184.921516 ## iter 90 value 184.918265 ## iter 100 value 184.917885 ## final value 184.917885 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.942100 ## iter 10 value 371.636670 ## iter 20 value 236.066227 ## iter 30 value 220.499013 ## iter 40 value 215.459902 ## iter 50 value 214.928682 ## iter 60 value 214.831637 ## iter 70 value 214.798662 ## iter 80 value 214.797241 ## iter 90 value 214.797009 ## final value 214.796995 ## converged ## # weights: 360 (238 variable) ## initial value 574.768132 ## iter 10 value 354.644723 ## iter 20 value 212.629009 ## iter 30 value 195.408574 ## iter 40 value 189.900013 ## iter 50 value 188.801265 ## iter 60 value 188.634529 ## iter 70 value 188.561650 ## iter 80 value 188.556875 ## iter 90 value 188.556469 ## final value 188.556457 ## converged ## # weights: 360 (238 variable) ## initial value 570.966494 ## iter 10 value 373.232147 ## iter 20 value 204.435729 ## iter 30 value 190.578827 ## iter 40 value 187.996335 ## iter 50 value 187.393266 ## iter 60 value 187.329670 ## iter 70 value 187.318684 ## iter 80 value 187.298446 ## iter 90 value 187.294512 ## iter 100 value 187.294184 ## final value 187.294184 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.942042 ## iter 10 value 397.512427 ## iter 20 value 220.767852 ## iter 30 value 202.052550 ## iter 40 value 195.009404 ## iter 50 value 192.209938 ## iter 60 value 191.758458 ## iter 70 value 191.725156 ## iter 80 value 191.692569 ## iter 90 value 191.686847 ## iter 100 value 191.686242 ## final value 191.686242 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.121684 ## iter 10 value 384.059382 ## iter 20 value 236.714014 ## iter 30 value 218.791253 ## iter 40 value 214.791448 ## iter 50 value 213.044898 ## iter 60 value 212.982486 ## iter 70 value 212.918207 ## iter 80 value 212.913759 ## iter 90 value 212.913448 ## final value 212.913444 ## converged ## # weights: 360 (238 variable) ## initial value 588.048926 ## iter 10 value 363.459345 ## iter 20 value 225.034663 ## iter 30 value 211.578121 ## iter 40 value 209.092474 ## iter 50 value 208.232580 ## iter 60 value 208.122365 ## iter 70 value 208.104941 ## iter 80 value 208.088942 ## iter 90 value 208.081322 ## iter 100 value 208.080005 ## final value 208.080005 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 586.204247 ## iter 10 value 325.224157 ## iter 20 value 189.344204 ## iter 30 value 172.446061 ## iter 40 value 170.599600 ## iter 50 value 170.246372 ## iter 60 value 170.130851 ## iter 70 value 170.071665 ## iter 80 value 170.065097 ## iter 90 value 170.064691 ## iter 100 value 170.062291 ## final value 170.062291 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 644.279968 ## iter 10 value 363.933885 ## iter 20 value 211.731342 ## iter 30 value 195.483922 ## iter 40 value 190.484698 ## iter 50 value 189.606509 ## iter 60 value 189.507433 ## iter 70 value 189.446508 ## iter 80 value 189.435038 ## iter 90 value 189.424716 ## iter 100 value 189.423278 ## final value 189.423278 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.661683 ## iter 10 value 367.916910 ## iter 20 value 201.862958 ## iter 30 value 183.330122 ## iter 40 value 175.835850 ## iter 50 value 175.116723 ## iter 60 value 174.952789 ## iter 70 value 174.916814 ## iter 80 value 174.900398 ## iter 90 value 174.893276 ## iter 100 value 174.888226 ## final value 174.888226 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.988001 ## iter 10 value 397.204579 ## iter 20 value 210.700103 ## iter 30 value 188.716232 ## iter 40 value 180.862047 ## iter 50 value 179.337999 ## iter 60 value 179.083000 ## iter 70 value 179.032865 ## iter 80 value 178.985814 ## iter 90 value 178.981760 ## iter 100 value 178.981452 ## final value 178.981452 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.484339 ## iter 10 value 349.196401 ## iter 20 value 215.469040 ## iter 30 value 199.583416 ## iter 40 value 194.758855 ## iter 50 value 193.674767 ## iter 60 value 193.598228 ## iter 70 value 193.520461 ## iter 80 value 193.505546 ## iter 90 value 193.504348 ## iter 100 value 193.504170 ## final value 193.504170 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.703742 ## iter 10 value 324.789455 ## iter 20 value 189.587627 ## iter 30 value 178.490663 ## iter 40 value 176.603285 ## iter 50 value 176.232655 ## iter 60 value 176.140110 ## iter 70 value 176.062205 ## iter 80 value 176.056949 ## final value 176.056938 ## converged ## # weights: 360 (238 variable) ## initial value 580.136062 ## iter 10 value 357.053621 ## iter 20 value 185.907396 ## iter 30 value 168.706564 ## iter 40 value 163.149648 ## iter 50 value 161.574756 ## iter 60 value 161.415502 ## iter 70 value 161.336765 ## iter 80 value 161.310012 ## iter 90 value 161.306402 ## iter 100 value 161.306110 ## final value 161.306110 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.396685 ## iter 10 value 377.377388 ## iter 20 value 209.462173 ## iter 30 value 195.688930 ## iter 40 value 193.668192 ## iter 50 value 192.406950 ## iter 60 value 192.361631 ## iter 70 value 192.309043 ## iter 80 value 192.305925 ## iter 90 value 192.305676 ## final value 192.305666 ## converged ## # weights: 360 (238 variable) ## initial value 602.173455 ## iter 10 value 383.219058 ## iter 20 value 216.276212 ## iter 30 value 204.077148 ## iter 40 value 200.677432 ## iter 50 value 199.779584 ## iter 60 value 199.717283 ## iter 70 value 199.683850 ## iter 80 value 199.682729 ## final value 199.682625 ## converged ## # weights: 360 (238 variable) ## initial value 602.307705 ## iter 10 value 373.321604 ## iter 20 value 224.493022 ## iter 30 value 212.013830 ## iter 40 value 209.877581 ## iter 50 value 209.604899 ## iter 60 value 209.585387 ## iter 70 value 209.543217 ## iter 80 value 209.540599 ## final value 209.540466 ## converged ## # weights: 360 (238 variable) ## initial value 579.838667 ## iter 10 value 318.749364 ## iter 20 value 208.230192 ## iter 30 value 195.029177 ## iter 40 value 190.666591 ## iter 50 value 189.405143 ## iter 60 value 189.204411 ## iter 70 value 189.109860 ## iter 80 value 189.079755 ## iter 90 value 189.074238 ## iter 100 value 189.073519 ## final value 189.073519 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 548.933275 ## iter 10 value 315.210675 ## iter 20 value 203.222389 ## iter 30 value 192.182440 ## iter 40 value 189.861666 ## iter 50 value 186.532665 ## iter 60 value 186.449924 ## iter 70 value 186.418417 ## iter 80 value 186.417191 ## final value 186.417123 ## converged ## # weights: 360 (238 variable) ## initial value 611.910016 ## iter 10 value 355.745778 ## iter 20 value 227.297452 ## iter 30 value 213.327839 ## iter 40 value 210.017410 ## iter 50 value 208.900673 ## iter 60 value 208.803062 ## iter 70 value 208.770879 ## iter 80 value 208.760146 ## iter 90 value 208.759760 ## final value 208.759745 ## converged ## # weights: 360 (238 variable) ## initial value 618.930918 ## iter 10 value 370.777398 ## iter 20 value 216.473704 ## iter 30 value 201.396756 ## iter 40 value 197.926843 ## iter 50 value 196.145083 ## iter 60 value 195.979129 ## iter 70 value 195.957976 ## iter 80 value 195.937185 ## iter 90 value 195.925358 ## iter 100 value 195.924172 ## final value 195.924172 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.628567 ## iter 10 value 370.598325 ## iter 20 value 226.888439 ## iter 30 value 211.975850 ## iter 40 value 208.568705 ## iter 50 value 207.641551 ## iter 60 value 207.546783 ## iter 70 value 207.489914 ## iter 80 value 207.486826 ## iter 90 value 207.486592 ## final value 207.486583 ## converged ## # weights: 360 (238 variable) ## initial value 597.526435 ## iter 10 value 389.711560 ## iter 20 value 225.264128 ## iter 30 value 204.556275 ## iter 40 value 199.490903 ## iter 50 value 197.656928 ## iter 60 value 197.429250 ## iter 70 value 197.399003 ## iter 80 value 197.362925 ## iter 90 value 197.350889 ## iter 100 value 197.349905 ## final value 197.349905 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.847790 ## iter 10 value 365.298706 ## iter 20 value 202.172604 ## iter 30 value 189.215638 ## iter 40 value 187.005245 ## iter 50 value 185.609831 ## iter 60 value 185.566865 ## iter 70 value 185.518110 ## iter 80 value 185.512475 ## iter 90 value 185.512205 ## final value 185.512197 ## converged ## # weights: 360 (238 variable) ## initial value 577.798654 ## iter 10 value 373.838451 ## iter 20 value 194.553286 ## iter 30 value 180.214496 ## iter 40 value 175.760484 ## iter 50 value 173.994828 ## iter 60 value 173.825202 ## iter 70 value 173.721961 ## iter 80 value 173.704672 ## iter 90 value 173.703217 ## iter 100 value 173.702952 ## final value 173.702952 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.992525 ## iter 10 value 344.138562 ## iter 20 value 208.260559 ## iter 30 value 194.298366 ## iter 40 value 189.786762 ## iter 50 value 188.996408 ## iter 60 value 188.967119 ## iter 70 value 188.945635 ## iter 80 value 188.933656 ## iter 90 value 188.932477 ## final value 188.932337 ## converged ## # weights: 360 (238 variable) ## initial value 612.667070 ## iter 10 value 357.163989 ## iter 20 value 188.936887 ## iter 30 value 169.213015 ## iter 40 value 164.961877 ## iter 50 value 163.895880 ## iter 60 value 163.800633 ## iter 70 value 163.742748 ## iter 80 value 163.718659 ## iter 90 value 163.714384 ## iter 100 value 163.713358 ## final value 163.713358 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.868287 ## iter 10 value 366.321103 ## iter 20 value 226.186052 ## iter 30 value 213.446526 ## iter 40 value 210.604351 ## iter 50 value 209.423453 ## iter 60 value 209.338798 ## iter 70 value 209.283383 ## iter 80 value 209.278345 ## iter 90 value 209.277908 ## final value 209.277882 ## converged ## # weights: 360 (238 variable) ## initial value 585.829070 ## iter 10 value 370.097925 ## iter 20 value 204.829527 ## iter 30 value 193.315805 ## iter 40 value 190.246082 ## iter 50 value 189.044600 ## iter 60 value 189.035293 ## iter 70 value 189.033760 ## iter 80 value 189.031007 ## iter 90 value 189.030882 ## final value 189.030878 ## converged ## # weights: 360 (238 variable) ## initial value 592.202560 ## iter 10 value 320.605178 ## iter 20 value 200.544480 ## iter 30 value 187.439627 ## iter 40 value 184.899157 ## iter 50 value 184.333704 ## iter 60 value 184.205393 ## iter 70 value 184.176065 ## iter 80 value 184.158907 ## iter 90 value 184.154450 ## iter 100 value 184.154205 ## final value 184.154205 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.766145 ## iter 10 value 331.864333 ## iter 20 value 195.871748 ## iter 30 value 180.889539 ## iter 40 value 177.399808 ## iter 50 value 175.933009 ## iter 60 value 175.876785 ## iter 70 value 175.825301 ## iter 80 value 175.815362 ## iter 90 value 175.814601 ## iter 100 value 175.814499 ## final value 175.814499 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 587.300881 ## iter 10 value 385.102510 ## iter 20 value 205.392846 ## iter 30 value 190.532408 ## iter 40 value 184.299133 ## iter 50 value 183.688722 ## iter 60 value 183.652291 ## iter 70 value 183.618430 ## iter 80 value 183.608220 ## iter 90 value 183.607331 ## iter 100 value 183.605389 ## final value 183.605389 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.649370 ## iter 10 value 314.148024 ## iter 20 value 205.921485 ## iter 30 value 193.620472 ## iter 40 value 191.000123 ## iter 50 value 190.015124 ## iter 60 value 189.956898 ## iter 70 value 189.906531 ## iter 80 value 189.902256 ## iter 90 value 189.901977 ## final value 189.901964 ## converged ## # weights: 360 (238 variable) ## initial value 599.542388 ## iter 10 value 349.610135 ## iter 20 value 234.048182 ## iter 30 value 219.926790 ## iter 40 value 215.446797 ## iter 50 value 214.777003 ## iter 60 value 214.693788 ## iter 70 value 214.661826 ## iter 80 value 214.660889 ## final value 214.660849 ## converged ## # weights: 360 (238 variable) ## initial value 619.006502 ## iter 10 value 370.052012 ## iter 20 value 205.766433 ## iter 30 value 188.092090 ## iter 40 value 180.284680 ## iter 50 value 178.017816 ## iter 60 value 177.779438 ## iter 70 value 177.753963 ## iter 80 value 177.746624 ## iter 90 value 177.743932 ## iter 100 value 177.743534 ## final value 177.743534 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.102933 ## iter 10 value 342.396266 ## iter 20 value 215.772887 ## iter 30 value 200.361020 ## iter 40 value 194.782882 ## iter 50 value 192.908627 ## iter 60 value 192.565404 ## iter 70 value 192.508537 ## iter 80 value 192.468124 ## iter 90 value 192.463971 ## iter 100 value 192.463564 ## final value 192.463564 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.650033 ## iter 10 value 353.744216 ## iter 20 value 221.845905 ## iter 30 value 204.443157 ## iter 40 value 199.450070 ## iter 50 value 198.259170 ## iter 60 value 198.137061 ## iter 70 value 198.107096 ## iter 80 value 198.105903 ## final value 198.105873 ## converged ## # weights: 360 (238 variable) ## initial value 628.944110 ## iter 10 value 385.982852 ## iter 20 value 207.118838 ## iter 30 value 194.657770 ## iter 40 value 191.555619 ## iter 50 value 189.749218 ## iter 60 value 189.682508 ## iter 70 value 189.650958 ## iter 80 value 189.637861 ## iter 90 value 189.622070 ## iter 100 value 189.620049 ## final value 189.620049 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.751930 ## iter 10 value 359.115939 ## iter 20 value 195.381985 ## iter 30 value 178.086906 ## iter 40 value 174.254513 ## iter 50 value 173.138542 ## iter 60 value 173.074284 ## iter 70 value 173.038293 ## iter 80 value 173.015526 ## iter 90 value 173.013469 ## iter 100 value 173.013364 ## final value 173.013364 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.875102 ## iter 10 value 401.683518 ## iter 20 value 240.016139 ## iter 30 value 229.042356 ## iter 40 value 224.697659 ## iter 50 value 222.886433 ## iter 60 value 222.760637 ## iter 70 value 222.716735 ## iter 80 value 222.714714 ## final value 222.714512 ## converged ## # weights: 360 (238 variable) ## initial value 614.958226 ## iter 10 value 343.571041 ## iter 20 value 190.882411 ## iter 30 value 177.475840 ## iter 40 value 174.114355 ## iter 50 value 173.159328 ## iter 60 value 173.105097 ## iter 70 value 173.057556 ## iter 80 value 173.043064 ## iter 90 value 173.042277 ## final value 173.042213 ## converged ## # weights: 360 (238 variable) ## initial value 580.730411 ## iter 10 value 349.668700 ## iter 20 value 205.762260 ## iter 30 value 187.920042 ## iter 40 value 182.455243 ## iter 50 value 181.444131 ## iter 60 value 181.316817 ## iter 70 value 181.256089 ## iter 80 value 181.229291 ## iter 90 value 181.223002 ## iter 100 value 181.221257 ## final value 181.221257 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.600335 ## iter 10 value 318.454769 ## iter 20 value 200.407673 ## iter 30 value 185.237094 ## iter 40 value 182.676855 ## iter 50 value 181.831770 ## iter 60 value 181.677657 ## iter 70 value 181.635548 ## iter 80 value 181.608936 ## iter 90 value 181.595429 ## iter 100 value 181.589474 ## final value 181.589474 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 660.666649 ## iter 10 value 367.570954 ## iter 20 value 234.926610 ## iter 30 value 220.006612 ## iter 40 value 215.134135 ## iter 50 value 213.783923 ## iter 60 value 213.700441 ## iter 70 value 213.642387 ## iter 80 value 213.639377 ## iter 90 value 213.639083 ## final value 213.639079 ## converged ## # weights: 360 (238 variable) ## initial value 647.130428 ## iter 10 value 399.319353 ## iter 20 value 196.159364 ## iter 30 value 179.041556 ## iter 40 value 173.154002 ## iter 50 value 170.548678 ## iter 60 value 170.439406 ## iter 70 value 170.362736 ## iter 80 value 170.344942 ## iter 90 value 170.343762 ## iter 100 value 170.343604 ## final value 170.343604 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.216799 ## iter 10 value 352.069045 ## iter 20 value 229.212506 ## iter 30 value 214.660086 ## iter 40 value 210.487806 ## iter 50 value 209.418310 ## iter 60 value 209.340267 ## iter 70 value 209.285062 ## iter 80 value 209.282487 ## iter 90 value 209.282206 ## final value 209.282191 ## converged ## # weights: 360 (238 variable) ## initial value 581.759591 ## iter 10 value 340.117933 ## iter 20 value 205.859354 ## iter 30 value 192.664708 ## iter 40 value 190.185958 ## iter 50 value 189.572787 ## iter 60 value 189.491768 ## iter 70 value 189.475976 ## iter 80 value 189.463333 ## iter 90 value 189.459499 ## iter 100 value 189.459346 ## final value 189.459346 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.308998 ## iter 10 value 381.653915 ## iter 20 value 219.959551 ## iter 30 value 203.418533 ## iter 40 value 195.295115 ## iter 50 value 193.750339 ## iter 60 value 193.605800 ## iter 70 value 193.551105 ## iter 80 value 193.527655 ## iter 90 value 193.521444 ## iter 100 value 193.520389 ## final value 193.520389 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.084080 ## iter 10 value 351.253250 ## iter 20 value 213.251375 ## iter 30 value 196.971128 ## iter 40 value 191.376984 ## iter 50 value 190.814450 ## iter 60 value 190.693606 ## iter 70 value 190.649479 ## iter 80 value 190.644358 ## iter 90 value 190.643771 ## final value 190.643761 ## converged ## # weights: 360 (238 variable) ## initial value 619.861552 ## iter 10 value 353.555574 ## iter 20 value 197.775229 ## iter 30 value 185.304050 ## iter 40 value 182.665315 ## iter 50 value 181.935452 ## iter 60 value 181.741850 ## iter 70 value 181.737080 ## iter 80 value 181.734130 ## iter 90 value 181.731488 ## iter 100 value 181.731249 ## final value 181.731249 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.492697 ## iter 10 value 370.883457 ## iter 20 value 212.581379 ## iter 30 value 189.319832 ## iter 40 value 179.497661 ## iter 50 value 178.121447 ## iter 60 value 177.954529 ## iter 70 value 177.931648 ## iter 80 value 177.907578 ## iter 90 value 177.896981 ## iter 100 value 177.889302 ## final value 177.889302 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 631.639006 ## iter 10 value 378.192595 ## iter 20 value 209.955009 ## iter 30 value 191.283133 ## iter 40 value 184.535702 ## iter 50 value 181.126907 ## iter 60 value 180.909023 ## iter 70 value 180.849100 ## iter 80 value 180.808342 ## iter 90 value 180.795249 ## iter 100 value 180.786832 ## final value 180.786832 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 634.343789 ## iter 10 value 410.078276 ## iter 20 value 224.109624 ## iter 30 value 205.655241 ## iter 40 value 201.917675 ## iter 50 value 200.722741 ## iter 60 value 200.514275 ## iter 70 value 200.498007 ## iter 80 value 200.476054 ## iter 90 value 200.474957 ## iter 100 value 200.474856 ## final value 200.474856 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 568.047152 ## iter 10 value 321.672082 ## iter 20 value 198.247736 ## iter 30 value 182.791054 ## iter 40 value 179.806377 ## iter 50 value 177.600180 ## iter 60 value 177.425692 ## iter 70 value 177.413957 ## iter 80 value 177.412982 ## final value 177.412938 ## converged ## # weights: 360 (238 variable) ## initial value 586.977999 ## iter 10 value 366.310748 ## iter 20 value 187.092007 ## iter 30 value 171.198418 ## iter 40 value 167.816226 ## iter 50 value 166.628554 ## iter 60 value 166.562051 ## iter 70 value 166.507887 ## iter 80 value 166.500251 ## iter 90 value 166.499704 ## final value 166.499667 ## converged ## # weights: 360 (238 variable) ## initial value 596.436831 ## iter 10 value 393.505451 ## iter 20 value 206.350737 ## iter 30 value 192.495850 ## iter 40 value 186.629685 ## iter 50 value 185.534500 ## iter 60 value 185.497525 ## iter 70 value 185.455610 ## iter 80 value 185.451711 ## iter 90 value 185.451482 ## final value 185.451475 ## converged ## # weights: 360 (238 variable) ## initial value 605.705933 ## iter 10 value 357.601201 ## iter 20 value 207.460134 ## iter 30 value 191.291858 ## iter 40 value 186.387791 ## iter 50 value 184.687662 ## iter 60 value 184.487784 ## iter 70 value 184.404828 ## iter 80 value 184.374271 ## iter 90 value 184.364772 ## iter 100 value 184.360359 ## final value 184.360359 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.897932 ## iter 10 value 359.756789 ## iter 20 value 221.469283 ## iter 30 value 207.280228 ## iter 40 value 202.827880 ## iter 50 value 201.525726 ## iter 60 value 201.438553 ## iter 70 value 201.384953 ## iter 80 value 201.360850 ## iter 90 value 201.355569 ## iter 100 value 201.353464 ## final value 201.353464 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.807163 ## iter 10 value 348.679471 ## iter 20 value 208.131747 ## iter 30 value 192.918259 ## iter 40 value 188.208361 ## iter 50 value 187.257331 ## iter 60 value 187.161453 ## iter 70 value 187.102939 ## iter 80 value 187.078780 ## iter 90 value 187.077234 ## iter 100 value 187.077045 ## final value 187.077045 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.249765 ## iter 10 value 356.594459 ## iter 20 value 213.484343 ## iter 30 value 198.018425 ## iter 40 value 195.523745 ## iter 50 value 194.655712 ## iter 60 value 194.519889 ## iter 70 value 194.445113 ## iter 80 value 194.422823 ## iter 90 value 194.421918 ## iter 100 value 194.421668 ## final value 194.421668 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.944685 ## iter 10 value 366.658122 ## iter 20 value 216.455121 ## iter 30 value 199.464072 ## iter 40 value 193.863346 ## iter 50 value 192.419508 ## iter 60 value 192.347336 ## iter 70 value 192.279717 ## iter 80 value 192.274801 ## iter 90 value 192.274282 ## final value 192.274256 ## converged ## # weights: 360 (238 variable) ## initial value 589.650703 ## iter 10 value 315.904867 ## iter 20 value 170.619227 ## iter 30 value 158.943881 ## iter 40 value 157.000404 ## iter 50 value 156.582472 ## iter 60 value 156.304126 ## iter 70 value 156.300321 ## iter 80 value 156.299528 ## iter 90 value 156.297660 ## final value 156.297602 ## converged ## # weights: 360 (238 variable) ## initial value 586.688844 ## iter 10 value 365.814586 ## iter 20 value 230.545945 ## iter 30 value 217.417772 ## iter 40 value 211.199277 ## iter 50 value 209.485731 ## iter 60 value 209.428308 ## iter 70 value 209.377399 ## iter 80 value 209.374040 ## iter 90 value 209.373821 ## final value 209.373813 ## converged ## # weights: 360 (238 variable) ## initial value 634.282816 ## iter 10 value 424.925406 ## iter 20 value 223.715553 ## iter 30 value 200.996713 ## iter 40 value 194.063007 ## iter 50 value 191.432390 ## iter 60 value 191.235484 ## iter 70 value 191.142396 ## iter 80 value 191.129306 ## iter 90 value 191.113902 ## iter 100 value 191.112359 ## final value 191.112359 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.614936 ## iter 10 value 320.296955 ## iter 20 value 188.768067 ## iter 30 value 175.695781 ## iter 40 value 169.428415 ## iter 50 value 168.229980 ## iter 60 value 168.199389 ## iter 70 value 168.163046 ## iter 80 value 168.160681 ## iter 90 value 168.160526 ## final value 168.160522 ## converged ## # weights: 360 (238 variable) ## initial value 601.300937 ## iter 10 value 371.291709 ## iter 20 value 202.106939 ## iter 30 value 185.998609 ## iter 40 value 182.066237 ## iter 50 value 180.384694 ## iter 60 value 180.253720 ## iter 70 value 180.176562 ## iter 80 value 180.156914 ## iter 90 value 180.155383 ## iter 100 value 180.155092 ## final value 180.155092 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.129778 ## iter 10 value 431.374671 ## iter 20 value 209.605367 ## iter 30 value 189.494131 ## iter 40 value 181.757386 ## iter 50 value 178.834419 ## iter 60 value 178.367420 ## iter 70 value 178.286112 ## iter 80 value 178.263995 ## iter 90 value 178.258259 ## iter 100 value 178.257694 ## final value 178.257694 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.549670 ## iter 10 value 364.174807 ## iter 20 value 200.767190 ## iter 30 value 184.411833 ## iter 40 value 177.568125 ## iter 50 value 176.984513 ## iter 60 value 176.849453 ## iter 70 value 176.795754 ## iter 80 value 176.790099 ## iter 90 value 176.789324 ## iter 100 value 176.789190 ## final value 176.789190 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.226507 ## iter 10 value 346.059139 ## iter 20 value 211.907673 ## iter 30 value 195.645189 ## iter 40 value 191.041469 ## iter 50 value 190.034187 ## iter 60 value 189.985438 ## iter 70 value 189.949527 ## iter 80 value 189.934380 ## iter 90 value 189.933291 ## iter 100 value 189.933176 ## final value 189.933176 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.699973 ## iter 10 value 393.400223 ## iter 20 value 214.409195 ## iter 30 value 198.344663 ## iter 40 value 190.866611 ## iter 50 value 189.770061 ## iter 60 value 189.732807 ## iter 70 value 189.709544 ## iter 80 value 189.695884 ## iter 90 value 189.694301 ## iter 100 value 189.694106 ## final value 189.694106 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.930218 ## iter 10 value 331.113881 ## iter 20 value 216.891455 ## iter 30 value 195.579215 ## iter 40 value 188.340899 ## iter 50 value 186.690378 ## iter 60 value 186.556057 ## iter 70 value 186.518554 ## iter 80 value 186.512393 ## iter 90 value 186.512014 ## iter 100 value 186.511968 ## final value 186.511968 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 630.361979 ## iter 10 value 349.202059 ## iter 20 value 195.557855 ## iter 30 value 173.437024 ## iter 40 value 165.850737 ## iter 50 value 164.817347 ## iter 60 value 164.708192 ## iter 70 value 164.650256 ## iter 80 value 164.634182 ## iter 90 value 164.624112 ## iter 100 value 164.621332 ## final value 164.621332 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.671598 ## iter 10 value 385.314003 ## iter 20 value 201.690141 ## iter 30 value 186.481546 ## iter 40 value 183.696754 ## iter 50 value 181.814475 ## iter 60 value 181.215931 ## iter 70 value 181.191567 ## iter 80 value 181.184746 ## iter 90 value 181.178775 ## iter 100 value 181.175437 ## final value 181.175437 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.179422 ## iter 10 value 340.755614 ## iter 20 value 195.735948 ## iter 30 value 181.771749 ## iter 40 value 178.063710 ## iter 50 value 177.321820 ## iter 60 value 177.242639 ## iter 70 value 177.203098 ## iter 80 value 177.179374 ## iter 90 value 177.175328 ## iter 100 value 177.174974 ## final value 177.174974 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 610.264185 ## iter 10 value 375.028773 ## iter 20 value 207.095200 ## iter 30 value 194.474888 ## iter 40 value 191.594097 ## iter 50 value 190.373493 ## iter 60 value 190.304711 ## iter 70 value 190.259388 ## iter 80 value 190.244959 ## iter 90 value 190.241476 ## iter 100 value 190.238321 ## final value 190.238321 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.572176 ## iter 10 value 392.883413 ## iter 20 value 218.295818 ## iter 30 value 199.801441 ## iter 40 value 193.980086 ## iter 50 value 192.809455 ## iter 60 value 192.687303 ## iter 70 value 192.616081 ## iter 80 value 192.587402 ## iter 90 value 192.582226 ## iter 100 value 192.581485 ## final value 192.581485 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.861395 ## iter 10 value 381.053220 ## iter 20 value 245.654057 ## iter 30 value 230.638280 ## iter 40 value 226.250563 ## iter 50 value 225.658841 ## iter 60 value 225.545763 ## iter 70 value 225.530615 ## iter 80 value 225.529651 ## iter 90 value 225.528823 ## iter 100 value 225.528691 ## final value 225.528691 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.285703 ## iter 10 value 376.803408 ## iter 20 value 207.562107 ## iter 30 value 193.799300 ## iter 40 value 188.681900 ## iter 50 value 187.641857 ## iter 60 value 187.605438 ## iter 70 value 187.555683 ## iter 80 value 187.546783 ## iter 90 value 187.546228 ## final value 187.546221 ## converged ## # weights: 360 (238 variable) ## initial value 611.277325 ## iter 10 value 375.660501 ## iter 20 value 231.836291 ## iter 30 value 218.716086 ## iter 40 value 215.720587 ## iter 50 value 214.779434 ## iter 60 value 214.732807 ## iter 70 value 214.691940 ## iter 80 value 214.689866 ## iter 90 value 214.689663 ## final value 214.689651 ## converged ## # weights: 360 (238 variable) ## initial value 574.521933 ## iter 10 value 376.174223 ## iter 20 value 224.478639 ## iter 30 value 210.220767 ## iter 40 value 204.902677 ## iter 50 value 203.539762 ## iter 60 value 203.492188 ## iter 70 value 203.463905 ## iter 80 value 203.462260 ## final value 203.462206 ## converged ## # weights: 360 (238 variable) ## initial value 607.552371 ## iter 10 value 343.752540 ## iter 20 value 220.354669 ## iter 30 value 209.622921 ## iter 40 value 205.867617 ## iter 50 value 204.018394 ## iter 60 value 203.959289 ## iter 70 value 203.952058 ## iter 80 value 203.951624 ## final value 203.951609 ## converged ## # weights: 360 (238 variable) ## initial value 640.265419 ## iter 10 value 354.353863 ## iter 20 value 219.478657 ## iter 30 value 197.527904 ## iter 40 value 189.487376 ## iter 50 value 187.356599 ## iter 60 value 187.204744 ## iter 70 value 187.182325 ## iter 80 value 187.180531 ## iter 90 value 187.180378 ## final value 187.180372 ## converged ## # weights: 360 (238 variable) ## initial value 606.029694 ## iter 10 value 370.955299 ## iter 20 value 206.994856 ## iter 30 value 188.920986 ## iter 40 value 182.082896 ## iter 50 value 180.918714 ## iter 60 value 180.804886 ## iter 70 value 180.749657 ## iter 80 value 180.722325 ## iter 90 value 180.709996 ## iter 100 value 180.709074 ## final value 180.709074 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.163645 ## iter 10 value 371.382032 ## iter 20 value 208.392468 ## iter 30 value 196.646018 ## iter 40 value 194.543199 ## iter 50 value 193.951791 ## iter 60 value 193.602791 ## iter 70 value 193.588895 ## final value 193.588621 ## converged ## # weights: 360 (238 variable) ## initial value 632.035495 ## iter 10 value 380.628544 ## iter 20 value 211.478936 ## iter 30 value 193.993783 ## iter 40 value 189.290592 ## iter 50 value 188.058616 ## iter 60 value 187.980687 ## iter 70 value 187.926987 ## iter 80 value 187.910848 ## iter 90 value 187.909923 ## iter 100 value 187.909830 ## final value 187.909830 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 573.415850 ## iter 10 value 374.355376 ## iter 20 value 184.927688 ## iter 30 value 170.320752 ## iter 40 value 167.910740 ## iter 50 value 167.309543 ## iter 60 value 167.204791 ## iter 70 value 167.189092 ## iter 80 value 167.186348 ## iter 90 value 167.184273 ## iter 100 value 167.179182 ## final value 167.179182 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 564.532581 ## iter 10 value 332.228377 ## iter 20 value 188.476091 ## iter 30 value 175.962459 ## iter 40 value 171.065514 ## iter 50 value 169.780404 ## iter 60 value 169.631894 ## iter 70 value 169.537976 ## iter 80 value 169.531255 ## iter 90 value 169.530897 ## final value 169.530846 ## converged ## # weights: 360 (238 variable) ## initial value 619.819366 ## iter 10 value 381.488921 ## iter 20 value 232.887362 ## iter 30 value 220.835362 ## iter 40 value 215.478265 ## iter 50 value 213.807420 ## iter 60 value 213.773524 ## iter 70 value 213.744498 ## iter 80 value 213.742830 ## final value 213.742723 ## converged ## # weights: 360 (238 variable) ## initial value 584.769129 ## iter 10 value 399.095008 ## iter 20 value 220.579948 ## iter 30 value 203.469466 ## iter 40 value 199.108578 ## iter 50 value 198.362779 ## iter 60 value 198.280694 ## iter 70 value 198.241955 ## iter 80 value 198.227231 ## iter 90 value 198.211739 ## iter 100 value 198.206910 ## final value 198.206910 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.857462 ## iter 10 value 338.119677 ## iter 20 value 214.921808 ## iter 30 value 199.955013 ## iter 40 value 195.529061 ## iter 50 value 194.381761 ## iter 60 value 194.287291 ## iter 70 value 194.236486 ## iter 80 value 194.232909 ## iter 90 value 194.232628 ## final value 194.232611 ## converged ## # weights: 360 (238 variable) ## initial value 618.184191 ## iter 10 value 378.933951 ## iter 20 value 212.701741 ## iter 30 value 193.036243 ## iter 40 value 185.688479 ## iter 50 value 183.369385 ## iter 60 value 183.167082 ## iter 70 value 183.091382 ## iter 80 value 183.078801 ## iter 90 value 183.077617 ## iter 100 value 183.077432 ## final value 183.077432 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.765695 ## iter 10 value 387.690152 ## iter 20 value 243.923346 ## iter 30 value 228.649097 ## iter 40 value 221.938105 ## iter 50 value 220.023048 ## iter 60 value 219.915122 ## iter 70 value 219.842705 ## iter 80 value 219.834389 ## iter 90 value 219.833265 ## final value 219.833243 ## converged ## # weights: 360 (238 variable) ## initial value 627.584138 ## iter 10 value 407.433351 ## iter 20 value 224.902879 ## iter 30 value 211.493239 ## iter 40 value 208.234200 ## iter 50 value 206.474738 ## iter 60 value 206.448166 ## iter 70 value 206.438025 ## iter 80 value 206.433785 ## iter 90 value 206.433428 ## final value 206.433419 ## converged ## # weights: 360 (238 variable) ## initial value 641.027856 ## iter 10 value 387.195969 ## iter 20 value 203.361894 ## iter 30 value 188.403305 ## iter 40 value 185.007695 ## iter 50 value 183.953156 ## iter 60 value 183.907379 ## iter 70 value 183.878310 ## iter 80 value 183.868663 ## iter 90 value 183.868337 ## final value 183.868325 ## converged ## # weights: 360 (238 variable) ## initial value 609.243684 ## iter 10 value 383.770889 ## iter 20 value 232.884844 ## iter 30 value 215.111009 ## iter 40 value 211.417142 ## iter 50 value 210.229443 ## iter 60 value 210.130264 ## iter 70 value 210.086348 ## iter 80 value 210.047841 ## iter 90 value 210.045841 ## iter 100 value 210.045672 ## final value 210.045672 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.095874 ## iter 10 value 318.529729 ## iter 20 value 176.767609 ## iter 30 value 164.345827 ## iter 40 value 162.539276 ## iter 50 value 162.114308 ## iter 60 value 161.979554 ## iter 70 value 161.965382 ## iter 80 value 161.965120 ## iter 90 value 161.963871 ## iter 100 value 161.962715 ## final value 161.962715 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 608.602314 ## iter 10 value 386.704478 ## iter 20 value 212.858579 ## iter 30 value 198.208757 ## iter 40 value 192.148571 ## iter 50 value 188.372202 ## iter 60 value 188.175221 ## iter 70 value 188.156637 ## iter 80 value 188.131170 ## iter 90 value 188.121244 ## iter 100 value 188.120691 ## final value 188.120691 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.541357 ## iter 10 value 329.800027 ## iter 20 value 214.900378 ## iter 30 value 202.379916 ## iter 40 value 200.086977 ## iter 50 value 199.027599 ## iter 60 value 198.734080 ## iter 70 value 198.720436 ## iter 80 value 198.704939 ## iter 90 value 198.695687 ## iter 100 value 198.694785 ## final value 198.694785 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.359838 ## iter 10 value 333.597936 ## iter 20 value 214.167030 ## iter 30 value 197.416525 ## iter 40 value 192.465109 ## iter 50 value 191.841869 ## iter 60 value 191.737800 ## iter 70 value 191.662122 ## iter 80 value 191.643548 ## iter 90 value 191.642744 ## iter 100 value 191.642634 ## final value 191.642634 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.582671 ## iter 10 value 326.355327 ## iter 20 value 203.200209 ## iter 30 value 188.016615 ## iter 40 value 181.297011 ## iter 50 value 179.273238 ## iter 60 value 179.055036 ## iter 70 value 179.043034 ## iter 80 value 179.039278 ## iter 90 value 179.039123 ## iter 90 value 179.039121 ## iter 90 value 179.039121 ## final value 179.039121 ## converged ## # weights: 360 (238 variable) ## initial value 586.092847 ## iter 10 value 349.482801 ## iter 20 value 230.604341 ## iter 30 value 216.623638 ## iter 40 value 213.761280 ## iter 50 value 212.445459 ## iter 60 value 212.406226 ## iter 70 value 212.372829 ## iter 80 value 212.360248 ## iter 90 value 212.358882 ## iter 100 value 212.358733 ## final value 212.358733 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 629.233155 ## iter 10 value 383.960427 ## iter 20 value 213.266194 ## iter 30 value 195.871610 ## iter 40 value 190.375039 ## iter 50 value 189.367567 ## iter 60 value 189.229796 ## iter 70 value 189.177388 ## iter 80 value 189.136672 ## iter 90 value 189.123654 ## iter 100 value 189.122585 ## final value 189.122585 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.021457 ## iter 10 value 354.730307 ## iter 20 value 191.602338 ## iter 30 value 177.196469 ## iter 40 value 174.342561 ## iter 50 value 173.665633 ## iter 60 value 173.570813 ## iter 70 value 173.560634 ## iter 80 value 173.542419 ## iter 90 value 173.540972 ## iter 100 value 173.540864 ## final value 173.540864 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.223524 ## iter 10 value 336.390640 ## iter 20 value 220.131791 ## iter 30 value 204.890160 ## iter 40 value 202.000029 ## iter 50 value 200.800998 ## iter 60 value 200.681360 ## iter 70 value 200.613677 ## iter 80 value 200.598741 ## iter 90 value 200.596455 ## iter 100 value 200.596125 ## final value 200.596125 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 620.899301 ## iter 10 value 416.020156 ## iter 20 value 255.860078 ## iter 30 value 243.234144 ## iter 40 value 240.129225 ## iter 50 value 238.888576 ## iter 60 value 238.707094 ## iter 70 value 238.701397 ## iter 80 value 238.694808 ## iter 90 value 238.693723 ## final value 238.693657 ## converged ## # weights: 360 (238 variable) ## initial value 595.643304 ## iter 10 value 327.909216 ## iter 20 value 195.515927 ## iter 30 value 180.550548 ## iter 40 value 177.165682 ## iter 50 value 175.791585 ## iter 60 value 175.723441 ## iter 70 value 175.698706 ## iter 80 value 175.692514 ## iter 90 value 175.691955 ## final value 175.691932 ## converged ## # weights: 360 (238 variable) ## initial value 619.505602 ## iter 10 value 400.980391 ## iter 20 value 230.379769 ## iter 30 value 214.081799 ## iter 40 value 208.657155 ## iter 50 value 207.421666 ## iter 60 value 207.350467 ## iter 70 value 207.290345 ## iter 80 value 207.285633 ## iter 90 value 207.285428 ## iter 90 value 207.285426 ## iter 90 value 207.285426 ## final value 207.285426 ## converged ## # weights: 360 (238 variable) ## initial value 614.437594 ## iter 10 value 361.096790 ## iter 20 value 209.297409 ## iter 30 value 196.602560 ## iter 40 value 193.856575 ## iter 50 value 193.258315 ## iter 60 value 193.133371 ## iter 70 value 193.056077 ## iter 80 value 193.036101 ## iter 90 value 193.035471 ## final value 193.035373 ## converged ## # weights: 360 (238 variable) ## initial value 633.106202 ## iter 10 value 414.835696 ## iter 20 value 223.382263 ## iter 30 value 207.540232 ## iter 40 value 201.562959 ## iter 50 value 199.092484 ## iter 60 value 198.863750 ## iter 70 value 198.842614 ## iter 80 value 198.840130 ## iter 90 value 198.838816 ## iter 100 value 198.838749 ## final value 198.838749 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.775915 ## iter 10 value 369.423017 ## iter 20 value 220.311215 ## iter 30 value 202.823516 ## iter 40 value 192.952342 ## iter 50 value 191.646021 ## iter 60 value 191.549162 ## iter 70 value 191.543844 ## iter 80 value 191.543345 ## final value 191.543287 ## converged ## # weights: 360 (238 variable) ## initial value 619.108893 ## iter 10 value 380.106625 ## iter 20 value 224.099119 ## iter 30 value 210.818456 ## iter 40 value 204.368589 ## iter 50 value 202.354256 ## iter 60 value 202.268598 ## iter 70 value 202.259580 ## iter 80 value 202.258790 ## final value 202.258692 ## converged ## # weights: 360 (238 variable) ## initial value 596.012877 ## iter 10 value 373.040700 ## iter 20 value 219.988368 ## iter 30 value 206.368068 ## iter 40 value 201.679980 ## iter 50 value 199.592939 ## iter 60 value 199.412983 ## iter 70 value 199.372550 ## iter 80 value 199.348985 ## iter 90 value 199.343393 ## iter 100 value 199.342988 ## final value 199.342988 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.296489 ## iter 10 value 402.531265 ## iter 20 value 232.168913 ## iter 30 value 215.731957 ## iter 40 value 209.105300 ## iter 50 value 206.836277 ## iter 60 value 206.639506 ## iter 70 value 206.601049 ## iter 80 value 206.563370 ## iter 90 value 206.555860 ## iter 100 value 206.555066 ## final value 206.555066 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 574.132036 ## iter 10 value 350.736116 ## iter 20 value 209.205890 ## iter 30 value 195.276641 ## iter 40 value 192.016459 ## iter 50 value 190.889966 ## iter 60 value 190.554136 ## iter 70 value 190.532258 ## iter 80 value 190.524904 ## iter 90 value 190.509492 ## iter 100 value 190.508505 ## final value 190.508505 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.884406 ## iter 10 value 345.203266 ## iter 20 value 205.688996 ## iter 30 value 193.230899 ## iter 40 value 191.303841 ## iter 50 value 190.951105 ## iter 60 value 190.832723 ## iter 70 value 190.822125 ## iter 80 value 190.814868 ## iter 90 value 190.813504 ## iter 100 value 190.813401 ## final value 190.813401 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.807352 ## iter 10 value 327.506248 ## iter 20 value 163.287899 ## iter 30 value 148.328373 ## iter 40 value 144.942231 ## iter 50 value 144.607141 ## iter 60 value 144.405793 ## iter 70 value 144.338904 ## iter 80 value 144.338282 ## iter 90 value 144.338253 ## iter 100 value 144.337868 ## final value 144.337868 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 579.401749 ## iter 10 value 343.547710 ## iter 20 value 183.802974 ## iter 30 value 169.813210 ## iter 40 value 166.433840 ## iter 50 value 165.592556 ## iter 60 value 165.506990 ## iter 70 value 165.472639 ## iter 80 value 165.451654 ## iter 90 value 165.449206 ## iter 100 value 165.448912 ## final value 165.448912 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.031122 ## iter 10 value 360.851600 ## iter 20 value 199.594302 ## iter 30 value 183.132312 ## iter 40 value 176.625766 ## iter 50 value 174.518629 ## iter 60 value 174.452548 ## iter 70 value 174.445239 ## iter 80 value 174.424143 ## iter 90 value 174.419330 ## iter 100 value 174.419038 ## final value 174.419038 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.764838 ## iter 10 value 367.255864 ## iter 20 value 226.859155 ## iter 30 value 212.914592 ## iter 40 value 209.904448 ## iter 50 value 207.670282 ## iter 60 value 207.466155 ## iter 70 value 207.453551 ## iter 80 value 207.432123 ## iter 90 value 207.427741 ## iter 100 value 207.427511 ## final value 207.427511 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.831937 ## iter 10 value 335.704706 ## iter 20 value 200.211170 ## iter 30 value 186.612746 ## iter 40 value 183.352770 ## iter 50 value 179.959343 ## iter 60 value 179.554927 ## iter 70 value 179.524959 ## iter 80 value 179.514100 ## iter 90 value 179.509249 ## iter 100 value 179.509124 ## final value 179.509124 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.954222 ## iter 10 value 389.784731 ## iter 20 value 231.481237 ## iter 30 value 214.075674 ## iter 40 value 208.257673 ## iter 50 value 206.903078 ## iter 60 value 206.831654 ## iter 70 value 206.761923 ## iter 80 value 206.752809 ## iter 90 value 206.752039 ## iter 100 value 206.751934 ## final value 206.751934 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.840537 ## iter 10 value 332.836393 ## iter 20 value 201.143183 ## iter 30 value 179.920517 ## iter 40 value 171.998213 ## iter 50 value 171.024259 ## iter 60 value 170.894714 ## iter 70 value 170.828367 ## iter 80 value 170.809580 ## iter 90 value 170.798715 ## iter 100 value 170.796348 ## final value 170.796348 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.273627 ## iter 10 value 437.615826 ## iter 20 value 196.921140 ## iter 30 value 179.690505 ## iter 40 value 174.714250 ## iter 50 value 173.355608 ## iter 60 value 173.283038 ## iter 70 value 173.210679 ## iter 80 value 173.201584 ## iter 90 value 173.201055 ## iter 100 value 173.200979 ## final value 173.200979 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.887122 ## iter 10 value 358.972067 ## iter 20 value 215.932949 ## iter 30 value 197.338421 ## iter 40 value 190.844054 ## iter 50 value 190.125268 ## iter 60 value 189.969489 ## iter 70 value 189.906096 ## iter 80 value 189.898950 ## iter 90 value 189.898404 ## final value 189.898344 ## converged ## # weights: 360 (238 variable) ## initial value 616.969126 ## iter 10 value 369.097060 ## iter 20 value 240.323756 ## iter 30 value 226.905291 ## iter 40 value 217.978513 ## iter 50 value 214.979000 ## iter 60 value 214.894645 ## iter 70 value 214.880859 ## iter 80 value 214.878317 ## iter 90 value 214.878105 ## final value 214.878096 ## converged ## # weights: 360 (238 variable) ## initial value 553.426160 ## iter 10 value 309.608726 ## iter 20 value 188.606953 ## iter 30 value 174.625621 ## iter 40 value 171.368930 ## iter 50 value 170.241869 ## iter 60 value 170.147036 ## iter 70 value 170.103859 ## iter 80 value 170.081857 ## iter 90 value 170.071744 ## iter 100 value 170.069772 ## final value 170.069772 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.452121 ## iter 10 value 349.979354 ## iter 20 value 195.639556 ## iter 30 value 175.682723 ## iter 40 value 171.265571 ## iter 50 value 168.799352 ## iter 60 value 168.330681 ## iter 70 value 168.265264 ## iter 80 value 168.238398 ## iter 90 value 168.224053 ## iter 100 value 168.218362 ## final value 168.218362 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.873825 ## iter 10 value 349.959283 ## iter 20 value 231.703758 ## iter 30 value 213.747308 ## iter 40 value 208.090248 ## iter 50 value 206.764806 ## iter 60 value 206.659328 ## iter 70 value 206.586022 ## iter 80 value 206.581745 ## iter 90 value 206.581380 ## final value 206.581369 ## converged ## # weights: 360 (238 variable) ## initial value 576.927125 ## iter 10 value 358.473042 ## iter 20 value 220.760776 ## iter 30 value 205.520651 ## iter 40 value 202.668979 ## iter 50 value 200.641958 ## iter 60 value 200.459309 ## iter 70 value 200.424024 ## iter 80 value 200.419587 ## iter 90 value 200.417398 ## iter 100 value 200.417264 ## final value 200.417264 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.300952 ## iter 10 value 404.052518 ## iter 20 value 204.031079 ## iter 30 value 187.000769 ## iter 40 value 178.926586 ## iter 50 value 177.663836 ## iter 60 value 177.569588 ## iter 70 value 177.528165 ## iter 80 value 177.502469 ## iter 90 value 177.492065 ## iter 100 value 177.489989 ## final value 177.489989 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.802167 ## iter 10 value 324.672437 ## iter 20 value 182.357414 ## iter 30 value 170.719430 ## iter 40 value 168.759933 ## iter 50 value 168.399305 ## iter 60 value 168.374652 ## iter 70 value 168.327476 ## iter 80 value 168.324506 ## iter 90 value 168.324006 ## iter 100 value 168.323566 ## final value 168.323566 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.183416 ## iter 10 value 343.304056 ## iter 20 value 213.565561 ## iter 30 value 201.679126 ## iter 40 value 199.780758 ## iter 50 value 199.124542 ## iter 60 value 198.814533 ## iter 70 value 198.786205 ## iter 80 value 198.785258 ## iter 90 value 198.783082 ## iter 100 value 198.782279 ## final value 198.782279 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.570332 ## iter 10 value 361.402222 ## iter 20 value 222.244021 ## iter 30 value 208.440985 ## iter 40 value 200.877508 ## iter 50 value 199.009505 ## iter 60 value 198.926579 ## iter 70 value 198.887926 ## iter 80 value 198.870882 ## iter 90 value 198.855713 ## iter 100 value 198.854703 ## final value 198.854703 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 561.824392 ## iter 10 value 366.969592 ## iter 20 value 203.509871 ## iter 30 value 191.964537 ## iter 40 value 186.811006 ## iter 50 value 186.097483 ## iter 60 value 186.000483 ## iter 70 value 185.936620 ## iter 80 value 185.930748 ## iter 90 value 185.930121 ## iter 100 value 185.930072 ## final value 185.930072 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.052907 ## iter 10 value 374.543774 ## iter 20 value 198.175977 ## iter 30 value 184.432264 ## iter 40 value 181.637126 ## iter 50 value 180.304654 ## iter 60 value 180.183499 ## iter 70 value 180.130866 ## iter 80 value 180.102072 ## iter 90 value 180.099893 ## iter 100 value 180.099489 ## final value 180.099489 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 645.413626 ## iter 10 value 424.546580 ## iter 20 value 244.579604 ## iter 30 value 229.108490 ## iter 40 value 225.625807 ## iter 50 value 223.883607 ## iter 60 value 223.741385 ## iter 70 value 223.736911 ## iter 80 value 223.732742 ## iter 90 value 223.731787 ## iter 100 value 223.731534 ## final value 223.731534 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.091139 ## iter 10 value 372.417472 ## iter 20 value 231.679872 ## iter 30 value 214.908615 ## iter 40 value 209.201936 ## iter 50 value 207.603800 ## iter 60 value 207.455308 ## iter 70 value 207.403377 ## iter 80 value 207.364954 ## iter 90 value 207.362166 ## iter 100 value 207.361861 ## final value 207.361861 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 629.932311 ## iter 10 value 388.203253 ## iter 20 value 222.437654 ## iter 30 value 204.874324 ## iter 40 value 199.939392 ## iter 50 value 198.831998 ## iter 60 value 198.688728 ## iter 70 value 198.625042 ## iter 80 value 198.608707 ## iter 90 value 198.595955 ## iter 100 value 198.593875 ## final value 198.593875 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 567.404793 ## iter 10 value 322.321416 ## iter 20 value 193.510964 ## iter 30 value 181.491162 ## iter 40 value 179.830115 ## iter 50 value 178.938626 ## iter 60 value 178.846769 ## iter 70 value 178.846387 ## iter 80 value 178.843533 ## iter 90 value 178.843177 ## final value 178.843164 ## converged ## # weights: 360 (238 variable) ## initial value 603.524419 ## iter 10 value 381.126042 ## iter 20 value 215.665043 ## iter 30 value 198.862541 ## iter 40 value 193.508169 ## iter 50 value 192.049573 ## iter 60 value 191.903722 ## iter 70 value 191.811239 ## iter 80 value 191.789718 ## iter 90 value 191.786344 ## iter 100 value 191.786284 ## final value 191.786284 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 576.860000 ## iter 10 value 343.384677 ## iter 20 value 184.064569 ## iter 30 value 169.782791 ## iter 40 value 161.475758 ## iter 50 value 159.640627 ## iter 60 value 159.443699 ## iter 70 value 159.380069 ## iter 80 value 159.368132 ## iter 90 value 159.365918 ## iter 100 value 159.365388 ## final value 159.365388 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.183429 ## iter 10 value 367.793800 ## iter 20 value 256.545970 ## iter 30 value 239.602617 ## iter 40 value 233.646735 ## iter 50 value 232.536738 ## iter 60 value 232.419139 ## iter 70 value 232.354550 ## iter 80 value 232.349392 ## iter 90 value 232.348940 ## final value 232.348890 ## converged ## # weights: 360 (238 variable) ## initial value 609.151401 ## iter 10 value 377.109989 ## iter 20 value 223.111502 ## iter 30 value 209.330040 ## iter 40 value 206.522271 ## iter 50 value 205.010457 ## iter 60 value 204.416845 ## iter 70 value 204.258407 ## iter 80 value 204.224328 ## iter 90 value 204.218613 ## iter 100 value 204.217403 ## final value 204.217403 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.337077 ## iter 10 value 369.281208 ## iter 20 value 203.688807 ## iter 30 value 186.388371 ## iter 40 value 181.931825 ## iter 50 value 178.242931 ## iter 60 value 177.498409 ## iter 70 value 177.342680 ## iter 80 value 177.310742 ## iter 90 value 177.299300 ## iter 100 value 177.297673 ## final value 177.297673 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 566.920305 ## iter 10 value 352.163344 ## iter 20 value 210.791198 ## iter 30 value 195.264919 ## iter 40 value 190.197444 ## iter 50 value 189.209060 ## iter 60 value 189.153418 ## iter 70 value 189.090326 ## iter 80 value 189.081181 ## iter 90 value 189.080620 ## final value 189.080537 ## converged ## # weights: 360 (238 variable) ## initial value 594.615442 ## iter 10 value 350.893045 ## iter 20 value 208.873896 ## iter 30 value 192.012580 ## iter 40 value 184.583981 ## iter 50 value 182.897257 ## iter 60 value 182.779286 ## iter 70 value 182.726121 ## iter 80 value 182.717952 ## iter 90 value 182.717223 ## iter 100 value 182.717038 ## final value 182.717038 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 567.644730 ## iter 10 value 323.321445 ## iter 20 value 200.150344 ## iter 30 value 184.817186 ## iter 40 value 178.111587 ## iter 50 value 177.006135 ## iter 60 value 176.896738 ## iter 70 value 176.830257 ## iter 80 value 176.825522 ## iter 90 value 176.825035 ## final value 176.824999 ## converged ## # weights: 360 (238 variable) ## initial value 627.214015 ## iter 10 value 342.794540 ## iter 20 value 224.369249 ## iter 30 value 208.180749 ## iter 40 value 204.138639 ## iter 50 value 203.611940 ## iter 60 value 203.531698 ## iter 70 value 203.493055 ## iter 80 value 203.491478 ## iter 90 value 203.491270 ## final value 203.491267 ## converged ## # weights: 360 (238 variable) ## initial value 596.288519 ## iter 10 value 357.674099 ## iter 20 value 202.377703 ## iter 30 value 189.113573 ## iter 40 value 183.373884 ## iter 50 value 181.496911 ## iter 60 value 181.400258 ## iter 70 value 181.320466 ## iter 80 value 181.315090 ## iter 90 value 181.314759 ## final value 181.314750 ## converged ## # weights: 360 (238 variable) ## initial value 601.825305 ## iter 10 value 376.014633 ## iter 20 value 217.682070 ## iter 30 value 200.413622 ## iter 40 value 194.632770 ## iter 50 value 192.780988 ## iter 60 value 192.698650 ## iter 70 value 192.660441 ## iter 80 value 192.626644 ## iter 90 value 192.621563 ## iter 100 value 192.621039 ## final value 192.621039 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.448018 ## iter 10 value 373.565468 ## iter 20 value 225.422966 ## iter 30 value 211.972342 ## iter 40 value 208.478212 ## iter 50 value 207.051891 ## iter 60 value 207.000303 ## iter 70 value 206.953750 ## iter 80 value 206.951537 ## iter 90 value 206.951380 ## iter 90 value 206.951379 ## iter 90 value 206.951379 ## final value 206.951379 ## converged ## # weights: 360 (238 variable) ## initial value 621.583847 ## iter 10 value 361.007149 ## iter 20 value 206.355037 ## iter 30 value 188.272015 ## iter 40 value 185.917908 ## iter 50 value 185.518616 ## iter 60 value 185.365631 ## iter 70 value 185.307864 ## iter 80 value 185.303704 ## iter 90 value 185.302681 ## iter 100 value 185.301486 ## final value 185.301486 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.083237 ## iter 10 value 389.974280 ## iter 20 value 226.314386 ## iter 30 value 212.123299 ## iter 40 value 206.887157 ## iter 50 value 205.938017 ## iter 60 value 205.865042 ## iter 70 value 205.818690 ## iter 80 value 205.816169 ## iter 90 value 205.815916 ## iter 90 value 205.815914 ## iter 90 value 205.815914 ## final value 205.815914 ## converged ## # weights: 360 (238 variable) ## initial value 597.320994 ## iter 10 value 386.817073 ## iter 20 value 222.049861 ## iter 30 value 204.214595 ## iter 40 value 197.194462 ## iter 50 value 195.958414 ## iter 60 value 195.818308 ## iter 70 value 195.760736 ## iter 80 value 195.734228 ## iter 90 value 195.727701 ## iter 100 value 195.726601 ## final value 195.726601 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 565.470906 ## iter 10 value 344.131018 ## iter 20 value 204.359125 ## iter 30 value 191.675676 ## iter 40 value 188.027598 ## iter 50 value 186.575678 ## iter 60 value 186.548497 ## iter 70 value 186.529155 ## iter 80 value 186.517347 ## iter 90 value 186.516091 ## iter 100 value 186.515980 ## final value 186.515980 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.260878 ## iter 10 value 370.735159 ## iter 20 value 212.062023 ## iter 30 value 193.711966 ## iter 40 value 188.022522 ## iter 50 value 186.674594 ## iter 60 value 186.567308 ## iter 70 value 186.509491 ## iter 80 value 186.476524 ## iter 90 value 186.474873 ## final value 186.474737 ## converged ## # weights: 360 (238 variable) ## initial value 582.291539 ## iter 10 value 361.673165 ## iter 20 value 211.420633 ## iter 30 value 198.092548 ## iter 40 value 193.084006 ## iter 50 value 192.099266 ## iter 60 value 192.044928 ## iter 70 value 192.004296 ## iter 80 value 192.001679 ## iter 90 value 192.001439 ## final value 192.001420 ## converged ## # weights: 360 (238 variable) ## initial value 583.504407 ## iter 10 value 370.603974 ## iter 20 value 239.564206 ## iter 30 value 227.172209 ## iter 40 value 222.446154 ## iter 50 value 221.462215 ## iter 60 value 221.403915 ## iter 70 value 221.347178 ## iter 80 value 221.342408 ## iter 90 value 221.342102 ## final value 221.342090 ## converged ## # weights: 360 (238 variable) ## initial value 610.027215 ## iter 10 value 355.619419 ## iter 20 value 174.663038 ## iter 30 value 158.906960 ## iter 40 value 154.677433 ## iter 50 value 152.908695 ## iter 60 value 152.787524 ## iter 70 value 152.716149 ## iter 80 value 152.708141 ## iter 90 value 152.707456 ## iter 100 value 152.707317 ## final value 152.707317 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.787795 ## iter 10 value 362.627257 ## iter 20 value 217.176252 ## iter 30 value 202.095642 ## iter 40 value 195.788526 ## iter 50 value 194.729491 ## iter 60 value 194.699761 ## iter 70 value 194.662649 ## iter 80 value 194.660089 ## iter 90 value 194.659860 ## final value 194.659848 ## converged ## # weights: 360 (238 variable) ## initial value 604.531297 ## iter 10 value 356.417548 ## iter 20 value 222.119196 ## iter 30 value 203.597776 ## iter 40 value 198.944650 ## iter 50 value 197.994119 ## iter 60 value 197.915047 ## iter 70 value 197.871524 ## iter 80 value 197.841683 ## iter 90 value 197.835223 ## iter 100 value 197.834208 ## final value 197.834208 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 581.429568 ## iter 10 value 348.166301 ## iter 20 value 205.186675 ## iter 30 value 191.380485 ## iter 40 value 187.274937 ## iter 50 value 186.749269 ## iter 60 value 186.666883 ## iter 70 value 186.622792 ## iter 80 value 186.620206 ## iter 90 value 186.619929 ## final value 186.619926 ## converged ## # weights: 360 (238 variable) ## initial value 604.318496 ## iter 10 value 342.368949 ## iter 20 value 190.589059 ## iter 30 value 177.184729 ## iter 40 value 174.315348 ## iter 50 value 172.700869 ## iter 60 value 172.671236 ## iter 70 value 172.651218 ## iter 80 value 172.640004 ## iter 90 value 172.635710 ## iter 100 value 172.635318 ## final value 172.635318 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.492098 ## iter 10 value 349.670883 ## iter 20 value 216.054435 ## iter 30 value 201.899895 ## iter 40 value 197.408210 ## iter 50 value 196.235160 ## iter 60 value 196.215059 ## iter 70 value 196.204253 ## iter 80 value 196.191271 ## iter 90 value 196.190348 ## iter 100 value 196.190268 ## final value 196.190268 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.707458 ## iter 10 value 393.402858 ## iter 20 value 215.874941 ## iter 30 value 203.424597 ## iter 40 value 200.436580 ## iter 50 value 197.005084 ## iter 60 value 196.662192 ## iter 70 value 196.649004 ## iter 80 value 196.646422 ## iter 90 value 196.645889 ## final value 196.645831 ## converged ## # weights: 360 (238 variable) ## initial value 643.027880 ## iter 10 value 369.330695 ## iter 20 value 212.621086 ## iter 30 value 194.061955 ## iter 40 value 187.588971 ## iter 50 value 184.500845 ## iter 60 value 184.240708 ## iter 70 value 184.136504 ## iter 80 value 184.121271 ## iter 90 value 184.101631 ## iter 100 value 184.099605 ## final value 184.099605 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.327868 ## iter 10 value 357.119524 ## iter 20 value 202.000247 ## iter 30 value 187.242783 ## iter 40 value 182.971958 ## iter 50 value 181.007818 ## iter 60 value 181.000122 ## iter 70 value 180.991116 ## iter 80 value 180.988964 ## iter 90 value 180.988810 ## final value 180.988806 ## converged ## # weights: 360 (238 variable) ## initial value 604.475048 ## iter 10 value 376.301588 ## iter 20 value 215.705994 ## iter 30 value 201.585055 ## iter 40 value 198.363239 ## iter 50 value 197.929548 ## iter 60 value 197.751532 ## iter 70 value 197.688950 ## iter 80 value 197.686620 ## iter 90 value 197.686443 ## iter 100 value 197.685600 ## final value 197.685600 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 638.092474 ## iter 10 value 388.407394 ## iter 20 value 232.738931 ## iter 30 value 214.923911 ## iter 40 value 209.370593 ## iter 50 value 207.541568 ## iter 60 value 207.439693 ## iter 70 value 207.370781 ## iter 80 value 207.346262 ## iter 90 value 207.344409 ## iter 100 value 207.344154 ## final value 207.344154 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.034416 ## iter 10 value 335.016066 ## iter 20 value 210.730721 ## iter 30 value 194.495561 ## iter 40 value 191.912114 ## iter 50 value 191.367016 ## iter 60 value 191.238093 ## iter 70 value 191.193865 ## iter 80 value 191.190308 ## iter 90 value 191.184471 ## iter 100 value 191.184120 ## final value 191.184120 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.477861 ## iter 10 value 333.915856 ## iter 20 value 188.657746 ## iter 30 value 172.293486 ## iter 40 value 167.680392 ## iter 50 value 165.374521 ## iter 60 value 165.249679 ## iter 70 value 165.169864 ## iter 80 value 165.153286 ## iter 90 value 165.149314 ## iter 100 value 165.147058 ## final value 165.147058 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.187793 ## iter 10 value 342.917843 ## iter 20 value 216.181458 ## iter 30 value 201.247134 ## iter 40 value 196.294435 ## iter 50 value 195.671510 ## iter 60 value 195.630688 ## iter 70 value 195.598483 ## iter 80 value 195.585234 ## iter 90 value 195.584389 ## iter 100 value 195.584291 ## final value 195.584291 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.738286 ## iter 10 value 335.736177 ## iter 20 value 199.065412 ## iter 30 value 179.873767 ## iter 40 value 175.803880 ## iter 50 value 174.873117 ## iter 60 value 174.766743 ## iter 70 value 174.712671 ## iter 80 value 174.705658 ## iter 90 value 174.704900 ## final value 174.704842 ## converged ## # weights: 360 (238 variable) ## initial value 601.539885 ## iter 10 value 362.214598 ## iter 20 value 186.456740 ## iter 30 value 172.710155 ## iter 40 value 169.151181 ## iter 50 value 167.850846 ## iter 60 value 167.800585 ## iter 70 value 167.750283 ## iter 80 value 167.738453 ## iter 90 value 167.737724 ## iter 100 value 167.737628 ## final value 167.737628 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.966321 ## iter 10 value 387.459864 ## iter 20 value 223.303104 ## iter 30 value 209.843598 ## iter 40 value 207.493350 ## iter 50 value 205.522765 ## iter 60 value 205.408177 ## iter 70 value 205.350511 ## iter 80 value 205.332056 ## iter 90 value 205.329642 ## iter 100 value 205.329468 ## final value 205.329468 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 589.617415 ## iter 10 value 361.844197 ## iter 20 value 200.205997 ## iter 30 value 182.280096 ## iter 40 value 173.866436 ## iter 50 value 172.138308 ## iter 60 value 172.033738 ## iter 70 value 171.964908 ## iter 80 value 171.955016 ## iter 90 value 171.954172 ## iter 100 value 171.954114 ## final value 171.954114 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 577.411723 ## iter 10 value 328.049923 ## iter 20 value 193.585032 ## iter 30 value 179.225564 ## iter 40 value 172.595387 ## iter 50 value 169.745035 ## iter 60 value 169.511415 ## iter 70 value 169.466653 ## iter 80 value 169.455734 ## iter 90 value 169.455127 ## iter 100 value 169.455002 ## final value 169.455002 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.123477 ## iter 10 value 366.119098 ## iter 20 value 207.766291 ## iter 30 value 187.862852 ## iter 40 value 177.926115 ## iter 50 value 175.290226 ## iter 60 value 175.000902 ## iter 70 value 174.963251 ## iter 80 value 174.946286 ## iter 90 value 174.943791 ## iter 100 value 174.942032 ## final value 174.942032 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.902165 ## iter 10 value 380.701372 ## iter 20 value 215.962343 ## iter 30 value 203.906357 ## iter 40 value 201.071480 ## iter 50 value 198.459179 ## iter 60 value 198.197557 ## iter 70 value 198.143684 ## iter 80 value 198.134299 ## iter 90 value 198.133858 ## final value 198.133826 ## converged ## # weights: 360 (238 variable) ## initial value 582.465559 ## iter 10 value 317.555790 ## iter 20 value 210.320788 ## iter 30 value 194.723680 ## iter 40 value 189.070530 ## iter 50 value 187.890560 ## iter 60 value 187.704857 ## iter 70 value 187.662727 ## iter 80 value 187.660997 ## iter 90 value 187.655974 ## iter 100 value 187.654341 ## final value 187.654341 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.066879 ## iter 10 value 378.555216 ## iter 20 value 220.173461 ## iter 30 value 202.519696 ## iter 40 value 195.995708 ## iter 50 value 194.890632 ## iter 60 value 194.702327 ## iter 70 value 194.669861 ## iter 80 value 194.658897 ## iter 90 value 194.652933 ## iter 100 value 194.652435 ## final value 194.652435 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.451897 ## iter 10 value 388.593496 ## iter 20 value 203.145163 ## iter 30 value 186.840772 ## iter 40 value 181.833958 ## iter 50 value 180.160346 ## iter 60 value 180.061603 ## iter 70 value 180.030287 ## iter 80 value 180.007458 ## iter 90 value 179.995677 ## iter 100 value 179.994257 ## final value 179.994257 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.121230 ## iter 10 value 355.214298 ## iter 20 value 218.632354 ## iter 30 value 206.918798 ## iter 40 value 202.559109 ## iter 50 value 201.022661 ## iter 60 value 200.925633 ## iter 70 value 200.887035 ## iter 80 value 200.885035 ## final value 200.884907 ## converged ## # weights: 360 (238 variable) ## initial value 578.596247 ## iter 10 value 336.729711 ## iter 20 value 193.882529 ## iter 30 value 182.394517 ## iter 40 value 180.089737 ## iter 50 value 179.515786 ## iter 60 value 179.499602 ## iter 70 value 179.473033 ## iter 80 value 179.469868 ## iter 90 value 179.469468 ## final value 179.469453 ## converged ## # weights: 360 (238 variable) ## initial value 605.074890 ## iter 10 value 329.425244 ## iter 20 value 219.556878 ## iter 30 value 207.333596 ## iter 40 value 202.067122 ## iter 50 value 199.699098 ## iter 60 value 199.684246 ## iter 70 value 199.669738 ## iter 80 value 199.667841 ## iter 90 value 199.667655 ## final value 199.667652 ## converged ## # weights: 360 (238 variable) ## initial value 576.574031 ## iter 10 value 365.600462 ## iter 20 value 223.675543 ## iter 30 value 204.389152 ## iter 40 value 196.499463 ## iter 50 value 195.027363 ## iter 60 value 194.930927 ## iter 70 value 194.859452 ## iter 80 value 194.836994 ## iter 90 value 194.835357 ## iter 100 value 194.835070 ## final value 194.835070 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 576.923170 ## iter 10 value 315.062470 ## iter 20 value 203.651611 ## iter 30 value 186.953721 ## iter 40 value 180.998115 ## iter 50 value 178.627325 ## iter 60 value 178.307053 ## iter 70 value 178.239177 ## iter 80 value 178.227786 ## iter 90 value 178.226743 ## iter 100 value 178.226638 ## final value 178.226638 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.176135 ## iter 10 value 392.238132 ## iter 20 value 216.726449 ## iter 30 value 205.777219 ## iter 40 value 203.763894 ## iter 50 value 202.215271 ## iter 60 value 201.962602 ## iter 70 value 201.961469 ## iter 80 value 201.958921 ## iter 90 value 201.958110 ## final value 201.958021 ## converged ## # weights: 360 (238 variable) ## initial value 603.611539 ## iter 10 value 349.406793 ## iter 20 value 205.678326 ## iter 30 value 188.858776 ## iter 40 value 179.985056 ## iter 50 value 178.202242 ## iter 60 value 178.067197 ## iter 70 value 178.036548 ## iter 80 value 178.034995 ## iter 90 value 178.034839 ## final value 178.034835 ## converged ## # weights: 360 (238 variable) ## initial value 589.837028 ## iter 10 value 366.136125 ## iter 20 value 223.400649 ## iter 30 value 212.900319 ## iter 40 value 210.939772 ## iter 50 value 210.579355 ## iter 60 value 210.482326 ## iter 70 value 210.384474 ## iter 80 value 210.380681 ## iter 90 value 210.380164 ## final value 210.380150 ## converged ## # weights: 360 (238 variable) ## initial value 588.756543 ## iter 10 value 407.541893 ## iter 20 value 232.914790 ## iter 30 value 214.956662 ## iter 40 value 207.934684 ## iter 50 value 204.741843 ## iter 60 value 204.619690 ## iter 70 value 204.534842 ## iter 80 value 204.529318 ## iter 90 value 204.528881 ## final value 204.528870 ## converged ## # weights: 360 (238 variable) ## initial value 619.093952 ## iter 10 value 372.315474 ## iter 20 value 184.855047 ## iter 30 value 168.637422 ## iter 40 value 162.349793 ## iter 50 value 161.693832 ## iter 60 value 161.623715 ## iter 70 value 161.562754 ## iter 80 value 161.547437 ## iter 90 value 161.545602 ## iter 100 value 161.543521 ## final value 161.543521 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 625.033929 ## iter 10 value 365.737505 ## iter 20 value 188.361206 ## iter 30 value 174.355206 ## iter 40 value 170.203130 ## iter 50 value 167.823189 ## iter 60 value 167.597263 ## iter 70 value 167.548055 ## iter 80 value 167.524852 ## iter 90 value 167.520434 ## iter 100 value 167.514590 ## final value 167.514590 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.406585 ## iter 10 value 359.169166 ## iter 20 value 210.988749 ## iter 30 value 197.727592 ## iter 40 value 191.901400 ## iter 50 value 188.137541 ## iter 60 value 187.824962 ## iter 70 value 187.756208 ## iter 80 value 187.746948 ## iter 90 value 187.746483 ## final value 187.746420 ## converged ## # weights: 360 (238 variable) ## initial value 576.256971 ## iter 10 value 349.038634 ## iter 20 value 219.081226 ## iter 30 value 204.742828 ## iter 40 value 202.551950 ## iter 50 value 201.560440 ## iter 60 value 201.509405 ## iter 70 value 201.466452 ## iter 80 value 201.460651 ## iter 90 value 201.460400 ## final value 201.460393 ## converged ## # weights: 360 (238 variable) ## initial value 563.862208 ## iter 10 value 357.632670 ## iter 20 value 218.017534 ## iter 30 value 204.087154 ## iter 40 value 198.446131 ## iter 50 value 197.488137 ## iter 60 value 197.440431 ## iter 70 value 197.382574 ## iter 80 value 197.377816 ## iter 90 value 197.377388 ## final value 197.377356 ## converged ## # weights: 360 (238 variable) ## initial value 617.299259 ## iter 10 value 376.256730 ## iter 20 value 241.006766 ## iter 30 value 222.536092 ## iter 40 value 216.771583 ## iter 50 value 214.279609 ## iter 60 value 214.036898 ## iter 70 value 213.981393 ## iter 80 value 213.948222 ## iter 90 value 213.943948 ## iter 100 value 213.943599 ## final value 213.943599 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.456822 ## iter 10 value 338.607458 ## iter 20 value 194.948210 ## iter 30 value 180.468731 ## iter 40 value 175.119021 ## iter 50 value 173.066584 ## iter 60 value 172.945114 ## iter 70 value 172.921996 ## iter 80 value 172.912306 ## iter 90 value 172.911844 ## final value 172.911740 ## converged ## # weights: 360 (238 variable) ## initial value 617.061739 ## iter 10 value 360.562823 ## iter 20 value 216.136369 ## iter 30 value 203.504518 ## iter 40 value 198.422143 ## iter 50 value 196.584648 ## iter 60 value 196.537376 ## iter 70 value 196.511662 ## iter 80 value 196.504422 ## iter 90 value 196.503446 ## iter 100 value 196.503228 ## final value 196.503228 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.003394 ## iter 10 value 375.276342 ## iter 20 value 231.706623 ## iter 30 value 214.025173 ## iter 40 value 207.284587 ## iter 50 value 205.907299 ## iter 60 value 205.832377 ## iter 70 value 205.805565 ## iter 80 value 205.778487 ## iter 90 value 205.774823 ## iter 100 value 205.774560 ## final value 205.774560 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.664330 ## iter 10 value 388.189968 ## iter 20 value 230.850591 ## iter 30 value 212.306727 ## iter 40 value 206.708965 ## iter 50 value 205.340320 ## iter 60 value 205.245807 ## iter 70 value 205.178829 ## iter 80 value 205.169929 ## iter 90 value 205.169439 ## final value 205.169420 ## converged ## # weights: 360 (238 variable) ## initial value 600.993765 ## iter 10 value 388.530003 ## iter 20 value 216.152356 ## iter 30 value 201.386615 ## iter 40 value 198.481998 ## iter 50 value 197.667416 ## iter 60 value 197.556245 ## iter 70 value 197.484615 ## iter 80 value 197.472956 ## iter 90 value 197.472434 ## iter 100 value 197.472357 ## final value 197.472357 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 577.792941 ## iter 10 value 371.369327 ## iter 20 value 214.238783 ## iter 30 value 199.271750 ## iter 40 value 193.138171 ## iter 50 value 192.023677 ## iter 60 value 191.834342 ## iter 70 value 191.805020 ## iter 80 value 191.781383 ## iter 90 value 191.777921 ## iter 100 value 191.774021 ## final value 191.774021 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 603.286789 ## iter 10 value 418.418216 ## iter 20 value 226.733581 ## iter 30 value 212.171567 ## iter 40 value 207.815182 ## iter 50 value 206.147316 ## iter 60 value 206.090115 ## iter 70 value 206.049050 ## iter 80 value 206.044539 ## iter 90 value 206.044239 ## final value 206.044227 ## converged ## # weights: 360 (238 variable) ## initial value 583.474415 ## iter 10 value 342.892235 ## iter 20 value 216.777816 ## iter 30 value 203.124060 ## iter 40 value 197.292056 ## iter 50 value 195.338969 ## iter 60 value 195.196672 ## iter 70 value 195.181173 ## iter 80 value 195.179760 ## final value 195.179700 ## converged ## # weights: 360 (238 variable) ## initial value 576.914491 ## iter 10 value 347.883364 ## iter 20 value 201.050869 ## iter 30 value 185.949172 ## iter 40 value 182.740665 ## iter 50 value 180.998044 ## iter 60 value 180.419942 ## iter 70 value 180.382890 ## iter 80 value 180.375904 ## iter 90 value 180.371356 ## iter 100 value 180.370282 ## final value 180.370282 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.980814 ## iter 10 value 355.003074 ## iter 20 value 196.534223 ## iter 30 value 179.331661 ## iter 40 value 174.412072 ## iter 50 value 172.449813 ## iter 60 value 172.266681 ## iter 70 value 172.149183 ## iter 80 value 172.142891 ## iter 90 value 172.142485 ## final value 172.142474 ## converged ## # weights: 360 (238 variable) ## initial value 569.898643 ## iter 10 value 343.249125 ## iter 20 value 195.508431 ## iter 30 value 181.005391 ## iter 40 value 175.163998 ## iter 50 value 174.203057 ## iter 60 value 174.076392 ## iter 70 value 174.023960 ## iter 80 value 174.003586 ## iter 90 value 174.002026 ## iter 100 value 174.001839 ## final value 174.001839 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.306488 ## iter 10 value 411.200592 ## iter 20 value 220.537364 ## iter 30 value 204.232305 ## iter 40 value 201.167652 ## iter 50 value 200.034281 ## iter 60 value 199.734863 ## iter 70 value 199.719050 ## iter 80 value 199.686741 ## iter 90 value 199.684326 ## iter 100 value 199.684156 ## final value 199.684156 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.603105 ## iter 10 value 347.820059 ## iter 20 value 197.028878 ## iter 30 value 180.343256 ## iter 40 value 176.515835 ## iter 50 value 175.749556 ## iter 60 value 175.636997 ## iter 70 value 175.618288 ## iter 80 value 175.588818 ## iter 90 value 175.581277 ## iter 100 value 175.580844 ## final value 175.580844 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.057735 ## iter 10 value 340.763050 ## iter 20 value 207.807637 ## iter 30 value 194.294348 ## iter 40 value 190.141086 ## iter 50 value 188.967784 ## iter 60 value 188.885047 ## iter 70 value 188.816422 ## iter 80 value 188.801813 ## iter 90 value 188.794073 ## iter 100 value 188.793645 ## final value 188.793645 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.992369 ## iter 10 value 356.588900 ## iter 20 value 199.629508 ## iter 30 value 177.360211 ## iter 40 value 170.195697 ## iter 50 value 169.193841 ## iter 60 value 169.049910 ## iter 70 value 168.974444 ## iter 80 value 168.952370 ## iter 90 value 168.944947 ## iter 100 value 168.940238 ## final value 168.940238 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.276927 ## iter 10 value 361.297956 ## iter 20 value 199.459702 ## iter 30 value 187.078191 ## iter 40 value 184.292671 ## iter 50 value 182.703597 ## iter 60 value 182.665923 ## iter 70 value 182.637868 ## iter 80 value 182.624259 ## iter 90 value 182.623205 ## iter 100 value 182.623108 ## final value 182.623108 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 623.021820 ## iter 10 value 336.612207 ## iter 20 value 175.014429 ## iter 30 value 158.728909 ## iter 40 value 156.422971 ## iter 50 value 155.131714 ## iter 60 value 154.740313 ## iter 70 value 154.683187 ## iter 80 value 154.651789 ## iter 90 value 154.646527 ## iter 100 value 154.640624 ## final value 154.640624 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.680857 ## iter 10 value 375.634219 ## iter 20 value 204.932216 ## iter 30 value 189.257712 ## iter 40 value 187.308638 ## iter 50 value 186.093469 ## iter 60 value 185.991736 ## iter 70 value 185.940473 ## iter 80 value 185.927557 ## iter 90 value 185.927071 ## final value 185.927000 ## converged ## # weights: 360 (238 variable) ## initial value 602.252226 ## iter 10 value 363.078710 ## iter 20 value 226.546163 ## iter 30 value 213.348514 ## iter 40 value 210.202308 ## iter 50 value 209.273159 ## iter 60 value 209.258468 ## iter 70 value 209.232464 ## iter 80 value 209.230986 ## final value 209.230931 ## converged ## # weights: 360 (238 variable) ## initial value 630.593456 ## iter 10 value 400.278508 ## iter 20 value 222.302694 ## iter 30 value 199.420570 ## iter 40 value 191.359701 ## iter 50 value 190.564007 ## iter 60 value 190.432823 ## iter 70 value 190.376796 ## iter 80 value 190.348537 ## iter 90 value 190.345209 ## iter 100 value 190.344860 ## final value 190.344860 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 619.309939 ## iter 10 value 374.095595 ## iter 20 value 183.219141 ## iter 30 value 163.813075 ## iter 40 value 157.983822 ## iter 50 value 157.132106 ## iter 60 value 157.013011 ## iter 70 value 156.931268 ## iter 80 value 156.917031 ## iter 90 value 156.916161 ## iter 100 value 156.915842 ## final value 156.915842 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 578.418601 ## iter 10 value 341.413179 ## iter 20 value 190.424011 ## iter 30 value 173.733381 ## iter 40 value 165.597971 ## iter 50 value 162.394791 ## iter 60 value 161.631618 ## iter 70 value 161.558509 ## iter 80 value 161.534362 ## iter 90 value 161.524873 ## iter 100 value 161.524361 ## final value 161.524361 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 598.561657 ## iter 10 value 358.490832 ## iter 20 value 201.981705 ## iter 30 value 183.500999 ## iter 40 value 179.421290 ## iter 50 value 178.588924 ## iter 60 value 178.492933 ## iter 70 value 178.421215 ## iter 80 value 178.417862 ## iter 90 value 178.417600 ## final value 178.417593 ## converged ## # weights: 360 (238 variable) ## initial value 587.718574 ## iter 10 value 378.701111 ## iter 20 value 218.368099 ## iter 30 value 202.101708 ## iter 40 value 199.831364 ## iter 50 value 198.961359 ## iter 60 value 198.882726 ## iter 70 value 198.847504 ## iter 80 value 198.838288 ## iter 90 value 198.834867 ## iter 100 value 198.832430 ## final value 198.832430 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 643.163668 ## iter 10 value 430.012157 ## iter 20 value 228.731449 ## iter 30 value 210.422369 ## iter 40 value 204.421627 ## iter 50 value 203.554859 ## iter 60 value 203.494559 ## iter 70 value 203.425376 ## iter 80 value 203.414521 ## iter 90 value 203.413713 ## iter 100 value 203.413507 ## final value 203.413507 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 636.299099 ## iter 10 value 407.887352 ## iter 20 value 203.070575 ## iter 30 value 188.533178 ## iter 40 value 184.853750 ## iter 50 value 183.227562 ## iter 60 value 183.141724 ## iter 70 value 183.071022 ## iter 80 value 183.063993 ## iter 90 value 183.063603 ## final value 183.063544 ## converged ## # weights: 360 (238 variable) ## initial value 588.803673 ## iter 10 value 348.988326 ## iter 20 value 211.719148 ## iter 30 value 199.247781 ## iter 40 value 196.433367 ## iter 50 value 194.312753 ## iter 60 value 194.179047 ## iter 70 value 194.159561 ## iter 80 value 194.154575 ## iter 90 value 194.152864 ## final value 194.152852 ## converged ## # weights: 360 (238 variable) ## initial value 611.956378 ## iter 10 value 370.006910 ## iter 20 value 221.814462 ## iter 30 value 204.414563 ## iter 40 value 199.936990 ## iter 50 value 197.921335 ## iter 60 value 197.746754 ## iter 70 value 197.689418 ## iter 80 value 197.663319 ## iter 90 value 197.660846 ## iter 100 value 197.653264 ## final value 197.653264 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 591.473411 ## iter 10 value 327.542657 ## iter 20 value 196.662967 ## iter 30 value 179.287707 ## iter 40 value 173.094881 ## iter 50 value 172.066813 ## iter 60 value 171.893402 ## iter 70 value 171.814879 ## iter 80 value 171.800802 ## iter 90 value 171.787850 ## iter 100 value 171.786165 ## final value 171.786165 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 571.564469 ## iter 10 value 349.368240 ## iter 20 value 202.728280 ## iter 30 value 189.406908 ## iter 40 value 185.731965 ## iter 50 value 184.805897 ## iter 60 value 184.718726 ## iter 70 value 184.668621 ## iter 80 value 184.659892 ## iter 90 value 184.659174 ## iter 100 value 184.659045 ## final value 184.659045 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.837456 ## iter 10 value 371.108233 ## iter 20 value 207.017277 ## iter 30 value 189.549881 ## iter 40 value 186.155639 ## iter 50 value 185.102677 ## iter 60 value 184.818051 ## iter 70 value 184.776351 ## iter 80 value 184.758112 ## iter 90 value 184.733992 ## iter 100 value 184.728910 ## final value 184.728910 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.331354 ## iter 10 value 371.852983 ## iter 20 value 212.236778 ## iter 30 value 199.691185 ## iter 40 value 195.231308 ## iter 50 value 194.412875 ## iter 60 value 194.348620 ## iter 70 value 194.309455 ## iter 80 value 194.307032 ## iter 90 value 194.306748 ## final value 194.306741 ## converged ## # weights: 360 (238 variable) ## initial value 610.120377 ## iter 10 value 381.011473 ## iter 20 value 210.196537 ## iter 30 value 195.401258 ## iter 40 value 191.973385 ## iter 50 value 190.389432 ## iter 60 value 190.244599 ## iter 70 value 190.241281 ## iter 80 value 190.231750 ## iter 90 value 190.231160 ## final value 190.231135 ## converged ## # weights: 360 (238 variable) ## initial value 605.520158 ## iter 10 value 356.865250 ## iter 20 value 213.954654 ## iter 30 value 200.870103 ## iter 40 value 196.586138 ## iter 50 value 196.036542 ## iter 60 value 195.974030 ## iter 70 value 195.923827 ## iter 80 value 195.907846 ## iter 90 value 195.905284 ## iter 100 value 195.905093 ## final value 195.905093 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.728160 ## iter 10 value 333.182810 ## iter 20 value 199.411013 ## iter 30 value 184.753080 ## iter 40 value 180.382916 ## iter 50 value 179.818022 ## iter 60 value 179.712511 ## iter 70 value 179.655252 ## iter 80 value 179.650813 ## iter 90 value 179.650595 ## final value 179.650534 ## converged ## # weights: 360 (238 variable) ## initial value 603.717335 ## iter 10 value 333.614386 ## iter 20 value 198.051234 ## iter 30 value 183.131741 ## iter 40 value 180.162767 ## iter 50 value 177.456827 ## iter 60 value 177.421302 ## iter 70 value 177.396457 ## iter 80 value 177.392588 ## iter 90 value 177.392286 ## final value 177.392276 ## converged ## # weights: 360 (238 variable) ## initial value 570.672286 ## iter 10 value 304.327399 ## iter 20 value 196.278695 ## iter 30 value 185.831949 ## iter 40 value 182.788781 ## iter 50 value 180.885948 ## iter 60 value 180.829231 ## iter 70 value 180.794870 ## iter 80 value 180.787377 ## iter 90 value 180.786614 ## final value 180.786568 ## converged ## # weights: 360 (238 variable) ## initial value 598.778304 ## iter 10 value 367.683233 ## iter 20 value 213.578183 ## iter 30 value 200.644329 ## iter 40 value 197.454419 ## iter 50 value 194.374174 ## iter 60 value 194.336921 ## iter 70 value 194.314850 ## iter 80 value 194.309455 ## iter 90 value 194.309056 ## final value 194.309033 ## converged ## # weights: 360 (238 variable) ## initial value 619.604367 ## iter 10 value 329.013797 ## iter 20 value 205.243351 ## iter 30 value 189.380445 ## iter 40 value 183.964613 ## iter 50 value 182.736889 ## iter 60 value 182.618423 ## iter 70 value 182.568401 ## iter 80 value 182.546347 ## iter 90 value 182.544539 ## iter 100 value 182.544417 ## final value 182.544417 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.839905 ## iter 10 value 369.979886 ## iter 20 value 206.157121 ## iter 30 value 193.483623 ## iter 40 value 190.995592 ## iter 50 value 190.334841 ## iter 60 value 190.290451 ## iter 70 value 190.263914 ## iter 80 value 190.248028 ## iter 90 value 190.246128 ## iter 100 value 190.246032 ## final value 190.246032 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.187647 ## iter 10 value 387.119098 ## iter 20 value 242.850080 ## iter 30 value 223.915715 ## iter 40 value 216.290813 ## iter 50 value 214.415082 ## iter 60 value 214.369244 ## iter 70 value 214.318600 ## iter 80 value 214.312994 ## iter 90 value 214.312680 ## final value 214.312675 ## converged ## # weights: 360 (238 variable) ## initial value 625.243984 ## iter 10 value 385.290534 ## iter 20 value 222.820983 ## iter 30 value 201.208656 ## iter 40 value 190.999456 ## iter 50 value 188.142294 ## iter 60 value 187.961557 ## iter 70 value 187.926221 ## iter 80 value 187.918451 ## iter 90 value 187.917678 ## final value 187.917607 ## converged ## # weights: 360 (238 variable) ## initial value 597.491719 ## iter 10 value 350.536085 ## iter 20 value 200.255329 ## iter 30 value 179.901509 ## iter 40 value 174.035379 ## iter 50 value 173.238722 ## iter 60 value 173.110828 ## iter 70 value 173.056701 ## iter 80 value 173.028319 ## iter 90 value 173.015641 ## iter 100 value 173.008461 ## final value 173.008461 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.354334 ## iter 10 value 372.066790 ## iter 20 value 227.320233 ## iter 30 value 214.728965 ## iter 40 value 211.363068 ## iter 50 value 210.284281 ## iter 60 value 210.253007 ## iter 70 value 210.243449 ## iter 80 value 210.228728 ## iter 90 value 210.228188 ## final value 210.228157 ## converged ## # weights: 360 (238 variable) ## initial value 580.981773 ## iter 10 value 326.424567 ## iter 20 value 203.413204 ## iter 30 value 189.214790 ## iter 40 value 185.192559 ## iter 50 value 184.524062 ## iter 60 value 184.439708 ## iter 70 value 184.394696 ## iter 80 value 184.387991 ## iter 90 value 184.387480 ## final value 184.387435 ## converged ## # weights: 360 (238 variable) ## initial value 606.050458 ## iter 10 value 394.267352 ## iter 20 value 210.497757 ## iter 30 value 192.538877 ## iter 40 value 188.745064 ## iter 50 value 187.927538 ## iter 60 value 187.737161 ## iter 70 value 187.693078 ## iter 80 value 187.688641 ## iter 90 value 187.688277 ## iter 90 value 187.688276 ## iter 90 value 187.688275 ## final value 187.688275 ## converged ## # weights: 360 (238 variable) ## initial value 607.177854 ## iter 10 value 381.187013 ## iter 20 value 204.174629 ## iter 30 value 184.279484 ## iter 40 value 176.615060 ## iter 50 value 175.245024 ## iter 60 value 175.088894 ## iter 70 value 175.020663 ## iter 80 value 174.991181 ## iter 90 value 174.983655 ## iter 100 value 174.983209 ## final value 174.983209 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.283745 ## iter 10 value 380.423483 ## iter 20 value 240.855376 ## iter 30 value 222.153081 ## iter 40 value 216.901509 ## iter 50 value 215.261626 ## iter 60 value 215.115384 ## iter 70 value 215.048053 ## iter 80 value 215.017866 ## iter 90 value 215.012171 ## iter 100 value 215.011571 ## final value 215.011571 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.895663 ## iter 10 value 400.536004 ## iter 20 value 209.936678 ## iter 30 value 193.466327 ## iter 40 value 190.323289 ## iter 50 value 188.629174 ## iter 60 value 188.402271 ## iter 70 value 188.362615 ## iter 80 value 188.327394 ## iter 90 value 188.320418 ## iter 100 value 188.319770 ## final value 188.319770 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.537798 ## iter 10 value 398.747780 ## iter 20 value 215.335616 ## iter 30 value 199.218688 ## iter 40 value 195.132432 ## iter 50 value 193.461420 ## iter 60 value 193.417616 ## iter 70 value 193.399208 ## iter 80 value 193.380428 ## iter 90 value 193.378100 ## iter 100 value 193.377944 ## final value 193.377944 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.015828 ## iter 10 value 363.639627 ## iter 20 value 206.147449 ## iter 30 value 190.836324 ## iter 40 value 187.276287 ## iter 50 value 185.306294 ## iter 60 value 185.033601 ## iter 70 value 184.981874 ## iter 80 value 184.952369 ## iter 90 value 184.941940 ## iter 100 value 184.931757 ## final value 184.931757 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.675484 ## iter 10 value 333.898259 ## iter 20 value 207.746832 ## iter 30 value 196.936034 ## iter 40 value 194.819461 ## iter 50 value 194.469676 ## iter 60 value 194.404249 ## iter 70 value 194.336274 ## iter 80 value 194.328601 ## iter 90 value 194.327406 ## final value 194.327308 ## converged ## # weights: 360 (238 variable) ## initial value 597.305284 ## iter 10 value 342.685345 ## iter 20 value 228.247529 ## iter 30 value 215.118557 ## iter 40 value 213.093540 ## iter 50 value 210.422995 ## iter 60 value 210.220676 ## iter 70 value 210.193975 ## iter 80 value 210.154328 ## iter 90 value 210.152020 ## iter 100 value 210.151886 ## final value 210.151886 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.725727 ## iter 10 value 346.553853 ## iter 20 value 225.926713 ## iter 30 value 211.653676 ## iter 40 value 207.596704 ## iter 50 value 206.056244 ## iter 60 value 205.965410 ## iter 70 value 205.907780 ## iter 80 value 205.905315 ## final value 205.905232 ## converged ## # weights: 360 (238 variable) ## initial value 611.665465 ## iter 10 value 386.797274 ## iter 20 value 224.955641 ## iter 30 value 212.730569 ## iter 40 value 209.392783 ## iter 50 value 207.536365 ## iter 60 value 207.497154 ## iter 70 value 207.462580 ## iter 80 value 207.460764 ## final value 207.460706 ## converged ## # weights: 360 (238 variable) ## initial value 623.616609 ## iter 10 value 357.599266 ## iter 20 value 223.865686 ## iter 30 value 207.067777 ## iter 40 value 202.344898 ## iter 50 value 200.718077 ## iter 60 value 200.620873 ## iter 70 value 200.578677 ## iter 80 value 200.550959 ## iter 90 value 200.544939 ## iter 100 value 200.544446 ## final value 200.544446 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 577.213753 ## iter 10 value 334.287673 ## iter 20 value 202.127747 ## iter 30 value 185.188713 ## iter 40 value 182.896740 ## iter 50 value 182.105708 ## iter 60 value 181.487287 ## iter 70 value 181.472418 ## iter 80 value 181.472034 ## iter 90 value 181.470600 ## iter 100 value 181.468621 ## final value 181.468621 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 631.789735 ## iter 10 value 377.961944 ## iter 20 value 226.446883 ## iter 30 value 205.438184 ## iter 40 value 198.250939 ## iter 50 value 195.722374 ## iter 60 value 195.485659 ## iter 70 value 195.427280 ## iter 80 value 195.398197 ## iter 90 value 195.376273 ## iter 100 value 195.372525 ## final value 195.372525 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.712811 ## iter 10 value 312.733262 ## iter 20 value 200.652453 ## iter 30 value 189.343847 ## iter 40 value 187.141739 ## iter 50 value 186.708920 ## iter 60 value 186.563983 ## iter 70 value 186.562196 ## iter 80 value 186.559598 ## iter 90 value 186.558808 ## final value 186.558789 ## converged ## # weights: 360 (238 variable) ## initial value 563.035392 ## iter 10 value 379.458539 ## iter 20 value 204.760845 ## iter 30 value 189.976878 ## iter 40 value 184.382949 ## iter 50 value 182.578775 ## iter 60 value 182.440100 ## iter 70 value 182.401960 ## iter 80 value 182.365762 ## iter 90 value 182.363693 ## iter 100 value 182.363505 ## final value 182.363505 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.189098 ## iter 10 value 343.492920 ## iter 20 value 198.952156 ## iter 30 value 183.113111 ## iter 40 value 179.634386 ## iter 50 value 178.421888 ## iter 60 value 178.334771 ## iter 70 value 178.261221 ## iter 80 value 178.245017 ## iter 90 value 178.244236 ## iter 100 value 178.244112 ## final value 178.244112 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.038205 ## iter 10 value 382.385197 ## iter 20 value 196.399321 ## iter 30 value 177.416667 ## iter 40 value 169.660944 ## iter 50 value 168.352353 ## iter 60 value 167.984295 ## iter 70 value 167.948236 ## iter 80 value 167.937115 ## iter 90 value 167.928129 ## iter 100 value 167.921701 ## final value 167.921701 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 596.862214 ## iter 10 value 355.011427 ## iter 20 value 221.194163 ## iter 30 value 206.794285 ## iter 40 value 200.323124 ## iter 50 value 198.783818 ## iter 60 value 198.686224 ## iter 70 value 198.617478 ## iter 80 value 198.604707 ## iter 90 value 198.595784 ## iter 100 value 198.595143 ## final value 198.595143 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.536264 ## iter 10 value 376.146531 ## iter 20 value 208.605336 ## iter 30 value 192.771494 ## iter 40 value 185.621140 ## iter 50 value 184.357700 ## iter 60 value 184.300273 ## iter 70 value 184.260728 ## iter 80 value 184.250731 ## iter 90 value 184.249853 ## iter 100 value 184.249703 ## final value 184.249703 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 620.913144 ## iter 10 value 393.747177 ## iter 20 value 210.588909 ## iter 30 value 192.556130 ## iter 40 value 185.288887 ## iter 50 value 184.067440 ## iter 60 value 184.024253 ## iter 70 value 183.983445 ## iter 80 value 183.973521 ## iter 90 value 183.972841 ## final value 183.972743 ## converged ## # weights: 360 (238 variable) ## initial value 628.224958 ## iter 10 value 376.026710 ## iter 20 value 221.001782 ## iter 30 value 201.622875 ## iter 40 value 190.503207 ## iter 50 value 188.229988 ## iter 60 value 187.820585 ## iter 70 value 187.619800 ## iter 80 value 187.565529 ## iter 90 value 187.554043 ## iter 100 value 187.546187 ## final value 187.546187 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.770896 ## iter 10 value 319.033116 ## iter 20 value 214.434042 ## iter 30 value 200.834288 ## iter 40 value 195.667617 ## iter 50 value 194.626574 ## iter 60 value 194.534220 ## iter 70 value 194.475324 ## iter 80 value 194.470998 ## iter 90 value 194.470399 ## iter 100 value 194.470301 ## final value 194.470301 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 584.553252 ## iter 10 value 379.517760 ## iter 20 value 201.188578 ## iter 30 value 186.260897 ## iter 40 value 183.648024 ## iter 50 value 182.781841 ## iter 60 value 182.719991 ## iter 70 value 182.701602 ## iter 80 value 182.695384 ## iter 90 value 182.681233 ## iter 100 value 182.679270 ## final value 182.679270 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 592.543569 ## iter 10 value 330.578444 ## iter 20 value 213.509019 ## iter 30 value 195.925889 ## iter 40 value 190.170230 ## iter 50 value 188.882195 ## iter 60 value 188.778833 ## iter 70 value 188.716798 ## iter 80 value 188.689383 ## iter 90 value 188.686171 ## iter 100 value 188.685854 ## final value 188.685854 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.498366 ## iter 10 value 368.748409 ## iter 20 value 198.718404 ## iter 30 value 183.914509 ## iter 40 value 180.381373 ## iter 50 value 179.603216 ## iter 60 value 179.523386 ## iter 70 value 179.448846 ## iter 80 value 179.441843 ## iter 90 value 179.441362 ## final value 179.441313 ## converged ## # weights: 360 (238 variable) ## initial value 603.027406 ## iter 10 value 345.522106 ## iter 20 value 206.873073 ## iter 30 value 193.507985 ## iter 40 value 190.604637 ## iter 50 value 189.726937 ## iter 60 value 189.714618 ## iter 70 value 189.690646 ## iter 80 value 189.684988 ## iter 90 value 189.684727 ## final value 189.684693 ## converged ## # weights: 360 (238 variable) ## initial value 586.182055 ## iter 10 value 326.448662 ## iter 20 value 185.458872 ## iter 30 value 171.205762 ## iter 40 value 166.264450 ## iter 50 value 164.827470 ## iter 60 value 164.760082 ## iter 70 value 164.684102 ## iter 80 value 164.679849 ## iter 90 value 164.679537 ## final value 164.679526 ## converged ## # weights: 360 (238 variable) ## initial value 585.595505 ## iter 10 value 384.674381 ## iter 20 value 208.945599 ## iter 30 value 196.819948 ## iter 40 value 192.608695 ## iter 50 value 191.150662 ## iter 60 value 191.067082 ## iter 70 value 191.028951 ## iter 80 value 191.012719 ## iter 90 value 191.012062 ## final value 191.012036 ## converged ## # weights: 360 (238 variable) ## initial value 601.490997 ## iter 10 value 352.236266 ## iter 20 value 206.445111 ## iter 30 value 190.431639 ## iter 40 value 187.132967 ## iter 50 value 184.954018 ## iter 60 value 184.652731 ## iter 70 value 184.620166 ## iter 80 value 184.607361 ## iter 90 value 184.606432 ## iter 100 value 184.606381 ## final value 184.606381 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.566515 ## iter 10 value 342.801285 ## iter 20 value 202.082993 ## iter 30 value 185.941376 ## iter 40 value 181.357463 ## iter 50 value 179.924272 ## iter 60 value 179.852867 ## iter 70 value 179.814289 ## iter 80 value 179.792710 ## iter 90 value 179.790207 ## iter 100 value 179.789890 ## final value 179.789890 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 571.836375 ## iter 10 value 408.103825 ## iter 20 value 234.222128 ## iter 30 value 212.454717 ## iter 40 value 204.699832 ## iter 50 value 201.847216 ## iter 60 value 201.683474 ## iter 70 value 201.652344 ## iter 80 value 201.647890 ## iter 90 value 201.647271 ## final value 201.647258 ## converged ## # weights: 360 (238 variable) ## initial value 584.227843 ## iter 10 value 379.509372 ## iter 20 value 200.869720 ## iter 30 value 183.876245 ## iter 40 value 177.628727 ## iter 50 value 175.012519 ## iter 60 value 174.782845 ## iter 70 value 174.760390 ## iter 80 value 174.752366 ## iter 90 value 174.751886 ## final value 174.751840 ## converged ## # weights: 360 (238 variable) ## initial value 621.520237 ## iter 10 value 390.228435 ## iter 20 value 206.694251 ## iter 30 value 186.486544 ## iter 40 value 179.636394 ## iter 50 value 178.552860 ## iter 60 value 178.448835 ## iter 70 value 178.377103 ## iter 80 value 178.346901 ## iter 90 value 178.345311 ## iter 100 value 178.345097 ## final value 178.345097 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 602.949734 ## iter 10 value 321.140203 ## iter 20 value 194.609571 ## iter 30 value 176.546922 ## iter 40 value 169.073367 ## iter 50 value 166.951905 ## iter 60 value 166.679974 ## iter 70 value 166.641172 ## iter 80 value 166.634431 ## iter 90 value 166.633112 ## iter 100 value 166.633025 ## final value 166.633025 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 569.550493 ## iter 10 value 345.276371 ## iter 20 value 225.924329 ## iter 30 value 210.578989 ## iter 40 value 205.953703 ## iter 50 value 205.268123 ## iter 60 value 205.076760 ## iter 70 value 205.016326 ## iter 80 value 204.997081 ## iter 90 value 204.995680 ## iter 100 value 204.995484 ## final value 204.995484 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 588.614382 ## iter 10 value 357.686439 ## iter 20 value 197.090239 ## iter 30 value 178.052355 ## iter 40 value 171.739678 ## iter 50 value 170.958602 ## iter 60 value 170.872484 ## iter 70 value 170.831607 ## iter 80 value 170.829243 ## iter 90 value 170.829046 ## final value 170.829043 ## converged ## # weights: 360 (238 variable) ## initial value 581.393863 ## iter 10 value 323.402763 ## iter 20 value 197.486038 ## iter 30 value 182.999733 ## iter 40 value 177.308628 ## iter 50 value 176.476012 ## iter 60 value 176.376001 ## iter 70 value 176.336990 ## iter 80 value 176.307487 ## iter 90 value 176.302582 ## iter 100 value 176.302255 ## final value 176.302255 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 590.512125 ## iter 10 value 342.490827 ## iter 20 value 206.863951 ## iter 30 value 183.738441 ## iter 40 value 174.928404 ## iter 50 value 173.402673 ## iter 60 value 173.291928 ## iter 70 value 173.252680 ## iter 80 value 173.249534 ## iter 90 value 173.249379 ## final value 173.249361 ## converged ## # weights: 360 (238 variable) ## initial value 601.858703 ## iter 10 value 363.130359 ## iter 20 value 197.689005 ## iter 30 value 183.924637 ## iter 40 value 179.454616 ## iter 50 value 178.086474 ## iter 60 value 178.053113 ## iter 70 value 178.018159 ## iter 80 value 178.015907 ## iter 90 value 178.015706 ## final value 178.015688 ## converged ## # weights: 360 (238 variable) ## initial value 604.503722 ## iter 10 value 329.597512 ## iter 20 value 186.772730 ## iter 30 value 170.017433 ## iter 40 value 162.972157 ## iter 50 value 160.986087 ## iter 60 value 160.885800 ## iter 70 value 160.818141 ## iter 80 value 160.804562 ## iter 90 value 160.803023 ## iter 100 value 160.800471 ## final value 160.800471 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.243017 ## iter 10 value 353.986279 ## iter 20 value 208.657378 ## iter 30 value 195.190745 ## iter 40 value 190.471891 ## iter 50 value 189.455313 ## iter 60 value 189.303295 ## iter 70 value 189.241311 ## iter 80 value 189.204297 ## iter 90 value 189.201868 ## iter 100 value 189.201640 ## final value 189.201640 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.788023 ## iter 10 value 381.198237 ## iter 20 value 225.948672 ## iter 30 value 204.339953 ## iter 40 value 198.748531 ## iter 50 value 196.824776 ## iter 60 value 196.757512 ## iter 70 value 196.703218 ## iter 80 value 196.689492 ## iter 90 value 196.687856 ## iter 100 value 196.687659 ## final value 196.687659 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 585.192095 ## iter 10 value 339.344772 ## iter 20 value 189.547719 ## iter 30 value 174.837183 ## iter 40 value 170.019236 ## iter 50 value 168.684432 ## iter 60 value 168.568611 ## iter 70 value 168.529707 ## iter 80 value 168.509039 ## iter 90 value 168.500924 ## iter 100 value 168.494528 ## final value 168.494528 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 614.188978 ## iter 10 value 375.877232 ## iter 20 value 224.641313 ## iter 30 value 210.602360 ## iter 40 value 208.982744 ## iter 50 value 208.494718 ## iter 60 value 208.357157 ## iter 70 value 208.320273 ## iter 80 value 208.317531 ## final value 208.317527 ## converged ## # weights: 360 (238 variable) ## initial value 612.672124 ## iter 10 value 358.187172 ## iter 20 value 221.730095 ## iter 30 value 200.998698 ## iter 40 value 193.720016 ## iter 50 value 192.981998 ## iter 60 value 192.892473 ## iter 70 value 192.831046 ## iter 80 value 192.812694 ## iter 90 value 192.810515 ## iter 100 value 192.810277 ## final value 192.810277 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.455512 ## iter 10 value 377.966514 ## iter 20 value 229.916119 ## iter 30 value 214.305434 ## iter 40 value 207.094573 ## iter 50 value 205.161553 ## iter 60 value 205.048076 ## iter 70 value 204.980402 ## iter 80 value 204.976577 ## iter 90 value 204.976234 ## final value 204.976227 ## converged ## # weights: 360 (238 variable) ## initial value 580.454110 ## iter 10 value 355.386542 ## iter 20 value 202.375241 ## iter 30 value 189.834310 ## iter 40 value 186.247284 ## iter 50 value 184.609729 ## iter 60 value 184.555396 ## iter 70 value 184.511647 ## iter 80 value 184.508380 ## iter 90 value 184.508106 ## final value 184.508093 ## converged ## # weights: 360 (238 variable) ## initial value 598.620982 ## iter 10 value 368.738350 ## iter 20 value 197.802011 ## iter 30 value 179.343686 ## iter 40 value 171.405486 ## iter 50 value 169.170316 ## iter 60 value 168.876084 ## iter 70 value 168.810220 ## iter 80 value 168.777814 ## iter 90 value 168.776235 ## final value 168.776121 ## converged ## # weights: 360 (238 variable) ## initial value 590.371942 ## iter 10 value 362.586549 ## iter 20 value 207.426393 ## iter 30 value 196.187783 ## iter 40 value 192.739199 ## iter 50 value 191.240064 ## iter 60 value 191.161923 ## iter 70 value 191.153194 ## iter 80 value 191.133354 ## iter 90 value 191.130397 ## iter 100 value 191.130154 ## final value 191.130154 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 595.123550 ## iter 10 value 332.633392 ## iter 20 value 218.744981 ## iter 30 value 200.490018 ## iter 40 value 197.975312 ## iter 50 value 197.539840 ## iter 60 value 197.446143 ## iter 70 value 197.426911 ## iter 80 value 197.339250 ## iter 90 value 197.283992 ## iter 100 value 197.282914 ## final value 197.282914 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 580.279760 ## iter 10 value 338.338528 ## iter 20 value 207.936807 ## iter 30 value 193.499344 ## iter 40 value 189.518527 ## iter 50 value 187.810954 ## iter 60 value 187.623055 ## iter 70 value 187.524849 ## iter 80 value 187.499137 ## iter 90 value 187.496367 ## iter 100 value 187.496100 ## final value 187.496100 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 616.872887 ## iter 10 value 374.291123 ## iter 20 value 219.045861 ## iter 30 value 199.574522 ## iter 40 value 190.644755 ## iter 50 value 188.268003 ## iter 60 value 187.570114 ## iter 70 value 187.493749 ## iter 80 value 187.470189 ## iter 90 value 187.465190 ## iter 100 value 187.464455 ## final value 187.464455 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 609.979315 ## iter 10 value 387.857275 ## iter 20 value 213.018071 ## iter 30 value 198.844545 ## iter 40 value 194.034380 ## iter 50 value 191.651193 ## iter 60 value 191.284105 ## iter 70 value 191.171685 ## iter 80 value 191.148376 ## iter 90 value 191.144493 ## iter 100 value 191.143340 ## final value 191.143340 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.599995 ## iter 10 value 384.081884 ## iter 20 value 207.601997 ## iter 30 value 191.998210 ## iter 40 value 188.634201 ## iter 50 value 186.609298 ## iter 60 value 186.519730 ## iter 70 value 186.478405 ## iter 80 value 186.454863 ## iter 90 value 186.451927 ## iter 100 value 186.451684 ## final value 186.451684 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 606.890017 ## iter 10 value 358.325096 ## iter 20 value 207.420524 ## iter 30 value 195.538317 ## iter 40 value 189.753849 ## iter 50 value 188.730600 ## iter 60 value 188.659723 ## iter 70 value 188.630873 ## iter 80 value 188.603414 ## iter 90 value 188.602130 ## final value 188.602029 ## converged ## # weights: 360 (238 variable) ## initial value 635.709035 ## iter 10 value 389.182168 ## iter 20 value 238.622320 ## iter 30 value 220.394127 ## iter 40 value 215.371697 ## iter 50 value 214.094787 ## iter 60 value 214.036745 ## iter 70 value 214.001966 ## iter 80 value 213.987460 ## iter 90 value 213.986731 ## iter 100 value 213.986609 ## final value 213.986609 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 638.514781 ## iter 10 value 374.011878 ## iter 20 value 214.562236 ## iter 30 value 196.525768 ## iter 40 value 191.074091 ## iter 50 value 189.797831 ## iter 60 value 189.664593 ## iter 70 value 189.627671 ## iter 80 value 189.592372 ## iter 90 value 189.587436 ## iter 100 value 189.586989 ## final value 189.586989 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 561.035808 ## iter 10 value 305.556779 ## iter 20 value 199.697045 ## iter 30 value 188.050127 ## iter 40 value 185.045182 ## iter 50 value 183.818432 ## iter 60 value 183.762342 ## iter 70 value 183.711080 ## iter 80 value 183.701254 ## iter 90 value 183.700595 ## final value 183.700553 ## converged ## # weights: 360 (238 variable) ## initial value 587.373609 ## iter 10 value 374.483323 ## iter 20 value 221.842968 ## iter 30 value 202.663131 ## iter 40 value 188.141447 ## iter 50 value 185.208697 ## iter 60 value 185.013498 ## iter 70 value 184.982671 ## iter 80 value 184.975279 ## iter 90 value 184.974591 ## iter 100 value 184.974535 ## final value 184.974535 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 583.620091 ## iter 10 value 351.781621 ## iter 20 value 194.519553 ## iter 30 value 179.186267 ## iter 40 value 175.677500 ## iter 50 value 174.669203 ## iter 60 value 174.626008 ## iter 70 value 174.595738 ## iter 80 value 174.586512 ## iter 90 value 174.585701 ## final value 174.585634 ## converged ## # weights: 360 (238 variable) ## initial value 591.913515 ## iter 10 value 347.731099 ## iter 20 value 191.990499 ## iter 30 value 173.146152 ## iter 40 value 167.305264 ## iter 50 value 166.246430 ## iter 60 value 166.163689 ## iter 70 value 166.116729 ## iter 80 value 166.087135 ## iter 90 value 166.081874 ## iter 100 value 166.080777 ## final value 166.080777 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.468628 ## iter 10 value 368.116977 ## iter 20 value 209.959203 ## iter 30 value 196.029194 ## iter 40 value 193.209223 ## iter 50 value 192.220138 ## iter 60 value 192.188466 ## iter 70 value 192.153549 ## iter 80 value 192.144139 ## iter 90 value 192.141811 ## iter 100 value 192.139130 ## final value 192.139130 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.995406 ## iter 10 value 355.028065 ## iter 20 value 189.043835 ## iter 30 value 173.287784 ## iter 40 value 170.327035 ## iter 50 value 168.831338 ## iter 60 value 168.778811 ## iter 70 value 168.771687 ## iter 80 value 168.758633 ## iter 90 value 168.756778 ## iter 100 value 168.756669 ## final value 168.756669 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 648.356369 ## iter 10 value 400.059390 ## iter 20 value 232.874376 ## iter 30 value 214.332126 ## iter 40 value 205.272934 ## iter 50 value 203.661491 ## iter 60 value 203.560989 ## iter 70 value 203.500455 ## iter 80 value 203.484564 ## iter 90 value 203.483764 ## iter 100 value 203.483644 ## final value 203.483644 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.309702 ## iter 10 value 385.024219 ## iter 20 value 225.883210 ## iter 30 value 209.025115 ## iter 40 value 200.302165 ## iter 50 value 198.200737 ## iter 60 value 198.117214 ## iter 70 value 198.079661 ## iter 80 value 198.057492 ## iter 90 value 198.049498 ## iter 100 value 198.048712 ## final value 198.048712 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 564.292974 ## iter 10 value 373.651047 ## iter 20 value 195.636244 ## iter 30 value 182.903979 ## iter 40 value 177.464539 ## iter 50 value 176.064555 ## iter 60 value 176.010784 ## iter 70 value 175.988358 ## iter 80 value 175.985831 ## iter 90 value 175.985668 ## iter 90 value 175.985666 ## iter 90 value 175.985666 ## final value 175.985666 ## converged ## # weights: 360 (238 variable) ## initial value 626.173300 ## iter 10 value 358.012124 ## iter 20 value 221.526341 ## iter 30 value 203.665145 ## iter 40 value 195.609220 ## iter 50 value 193.599888 ## iter 60 value 193.507404 ## iter 70 value 193.458804 ## iter 80 value 193.450457 ## iter 90 value 193.449215 ## iter 100 value 193.449035 ## final value 193.449035 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.520147 ## iter 10 value 357.906152 ## iter 20 value 196.192841 ## iter 30 value 178.010723 ## iter 40 value 172.092164 ## iter 50 value 170.047943 ## iter 60 value 169.791221 ## iter 70 value 169.751552 ## iter 80 value 169.743595 ## iter 90 value 169.740539 ## iter 100 value 169.737426 ## final value 169.737426 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 628.726365 ## iter 10 value 382.313747 ## iter 20 value 235.076516 ## iter 30 value 219.871041 ## iter 40 value 216.995258 ## iter 50 value 213.226975 ## iter 60 value 213.168640 ## iter 70 value 213.145908 ## iter 80 value 213.142166 ## iter 90 value 213.141840 ## final value 213.141832 ## converged ## # weights: 360 (238 variable) ## initial value 609.179306 ## iter 10 value 349.436138 ## iter 20 value 197.800239 ## iter 30 value 184.166338 ## iter 40 value 181.640877 ## iter 50 value 180.794093 ## iter 60 value 180.746832 ## iter 70 value 180.710321 ## iter 80 value 180.695773 ## iter 90 value 180.695023 ## iter 100 value 180.694941 ## final value 180.694941 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.850848 ## iter 10 value 341.257979 ## iter 20 value 189.673524 ## iter 30 value 172.275395 ## iter 40 value 168.267439 ## iter 50 value 167.947554 ## iter 60 value 167.835982 ## iter 70 value 167.822360 ## iter 80 value 167.813403 ## iter 90 value 167.809052 ## iter 100 value 167.804775 ## final value 167.804775 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 617.615879 ## iter 10 value 389.873184 ## iter 20 value 221.249642 ## iter 30 value 209.771396 ## iter 40 value 206.460914 ## iter 50 value 205.484912 ## iter 60 value 205.436330 ## iter 70 value 205.427425 ## iter 80 value 205.422720 ## iter 90 value 205.422476 ## final value 205.422460 ## converged ## # weights: 360 (238 variable) ## initial value 630.575769 ## iter 10 value 367.983126 ## iter 20 value 227.263574 ## iter 30 value 210.080741 ## iter 40 value 203.566052 ## iter 50 value 201.371830 ## iter 60 value 201.150342 ## iter 70 value 201.067081 ## iter 80 value 201.035807 ## iter 90 value 201.014050 ## iter 100 value 201.011212 ## final value 201.011212 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 575.385223 ## iter 10 value 368.780199 ## iter 20 value 205.664357 ## iter 30 value 188.970934 ## iter 40 value 183.937835 ## iter 50 value 183.150851 ## iter 60 value 183.035526 ## iter 70 value 183.008713 ## iter 80 value 183.007903 ## final value 183.007824 ## converged ## # weights: 360 (238 variable) ## initial value 589.348914 ## iter 10 value 348.744035 ## iter 20 value 201.453954 ## iter 30 value 186.082617 ## iter 40 value 183.123658 ## iter 50 value 182.313134 ## iter 60 value 182.171673 ## iter 70 value 182.117748 ## iter 80 value 182.088570 ## iter 90 value 182.081556 ## iter 100 value 182.075109 ## final value 182.075109 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 604.341676 ## iter 10 value 365.397943 ## iter 20 value 200.751660 ## iter 30 value 186.374044 ## iter 40 value 183.696885 ## iter 50 value 182.077378 ## iter 60 value 181.903519 ## iter 70 value 181.903001 ## iter 80 value 181.901507 ## iter 90 value 181.900491 ## iter 100 value 181.900379 ## final value 181.900379 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 612.964025 ## iter 10 value 356.766160 ## iter 20 value 198.061664 ## iter 30 value 185.016070 ## iter 40 value 179.640021 ## iter 50 value 178.491234 ## iter 60 value 178.413009 ## iter 70 value 178.353418 ## iter 80 value 178.350173 ## iter 90 value 178.349928 ## final value 178.349922 ## converged ## # weights: 360 (238 variable) ## initial value 571.477129 ## iter 10 value 329.701364 ## iter 20 value 189.358031 ## iter 30 value 177.198203 ## iter 40 value 173.732640 ## iter 50 value 172.994526 ## iter 60 value 172.932318 ## iter 70 value 172.900964 ## iter 80 value 172.883630 ## iter 90 value 172.882565 ## iter 100 value 172.882461 ## final value 172.882461 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 576.708501 ## iter 10 value 307.354060 ## iter 20 value 191.680685 ## iter 30 value 180.817105 ## iter 40 value 178.470816 ## iter 50 value 177.771362 ## iter 60 value 177.742750 ## iter 70 value 177.735488 ## iter 80 value 177.728783 ## iter 90 value 177.728232 ## final value 177.728196 ## converged ## # weights: 360 (238 variable) ## initial value 620.692433 ## iter 10 value 408.679680 ## iter 20 value 242.720562 ## iter 30 value 229.246443 ## iter 40 value 223.300294 ## iter 50 value 222.291035 ## iter 60 value 222.163397 ## iter 70 value 222.085496 ## iter 80 value 222.080961 ## iter 90 value 222.080656 ## final value 222.080648 ## converged ## # weights: 360 (238 variable) ## initial value 600.986954 ## iter 10 value 393.982076 ## iter 20 value 224.732299 ## iter 30 value 210.073300 ## iter 40 value 202.251185 ## iter 50 value 200.414900 ## iter 60 value 200.342759 ## iter 70 value 200.330313 ## iter 80 value 200.327628 ## iter 90 value 200.327390 ## iter 100 value 200.327108 ## final value 200.327108 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.308589 ## iter 10 value 377.582296 ## iter 20 value 206.776838 ## iter 30 value 192.302755 ## iter 40 value 184.202284 ## iter 50 value 183.066613 ## iter 60 value 183.007151 ## iter 70 value 182.951261 ## iter 80 value 182.944501 ## iter 90 value 182.943977 ## final value 182.943941 ## converged ## # weights: 360 (238 variable) ## initial value 583.933085 ## iter 10 value 343.340511 ## iter 20 value 203.252274 ## iter 30 value 189.436458 ## iter 40 value 183.527232 ## iter 50 value 180.735667 ## iter 60 value 180.546571 ## iter 70 value 180.514083 ## iter 80 value 180.484812 ## iter 90 value 180.475421 ## iter 100 value 180.471412 ## final value 180.471412 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 615.195197 ## iter 10 value 374.478058 ## iter 20 value 210.300852 ## iter 30 value 193.565226 ## iter 40 value 186.972125 ## iter 50 value 184.021073 ## iter 60 value 183.711106 ## iter 70 value 183.659008 ## iter 80 value 183.651925 ## iter 90 value 183.651616 ## final value 183.651597 ## converged ## # weights: 360 (238 variable) ## initial value 628.281207 ## iter 10 value 372.784399 ## iter 20 value 220.077068 ## iter 30 value 205.542188 ## iter 40 value 203.231664 ## iter 50 value 202.141153 ## iter 60 value 202.005749 ## iter 70 value 201.995581 ## iter 80 value 201.984822 ## iter 90 value 201.980202 ## iter 100 value 201.979865 ## final value 201.979865 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 624.989984 ## iter 10 value 381.531999 ## iter 20 value 211.955995 ## iter 30 value 190.817306 ## iter 40 value 184.658692 ## iter 50 value 182.919582 ## iter 60 value 182.722901 ## iter 70 value 182.659033 ## iter 80 value 182.618532 ## iter 90 value 182.612114 ## iter 100 value 182.607013 ## final value 182.607013 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.238269 ## iter 10 value 331.138369 ## iter 20 value 221.906284 ## iter 30 value 207.546828 ## iter 40 value 201.155527 ## iter 50 value 199.150742 ## iter 60 value 198.992718 ## iter 70 value 198.885464 ## iter 80 value 198.853018 ## iter 90 value 198.851721 ## final value 198.851659 ## converged ## # weights: 360 (238 variable) ## initial value 600.578600 ## iter 10 value 383.627699 ## iter 20 value 217.232974 ## iter 30 value 200.816564 ## iter 40 value 194.539861 ## iter 50 value 193.679567 ## iter 60 value 193.596117 ## iter 70 value 193.552841 ## iter 80 value 193.540014 ## iter 90 value 193.532974 ## iter 100 value 193.529672 ## final value 193.529672 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.555925 ## iter 10 value 361.264650 ## iter 20 value 204.291987 ## iter 30 value 187.887908 ## iter 40 value 182.325706 ## iter 50 value 180.366831 ## iter 60 value 180.268414 ## iter 70 value 180.192932 ## iter 80 value 180.189091 ## iter 90 value 180.188782 ## final value 180.188773 ## converged ## # weights: 360 (238 variable) ## initial value 598.857953 ## iter 10 value 383.097825 ## iter 20 value 219.091204 ## iter 30 value 207.149201 ## iter 40 value 203.202964 ## iter 50 value 201.488419 ## iter 60 value 201.435383 ## iter 70 value 201.381704 ## iter 80 value 201.375915 ## iter 90 value 201.375590 ## final value 201.375583 ## converged ## # weights: 360 (238 variable) ## initial value 609.898897 ## iter 10 value 351.614623 ## iter 20 value 206.604408 ## iter 30 value 192.868470 ## iter 40 value 185.504524 ## iter 50 value 183.781486 ## iter 60 value 183.669301 ## iter 70 value 183.596301 ## iter 80 value 183.588698 ## iter 90 value 183.588175 ## final value 183.588124 ## converged ## # weights: 360 (238 variable) ## initial value 609.856270 ## iter 10 value 358.022747 ## iter 20 value 205.705194 ## iter 30 value 188.114081 ## iter 40 value 181.902474 ## iter 50 value 180.861174 ## iter 60 value 180.729837 ## iter 70 value 180.633876 ## iter 80 value 180.621832 ## iter 90 value 180.607538 ## iter 100 value 180.605043 ## final value 180.605043 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 594.885481 ## iter 10 value 348.330712 ## iter 20 value 195.075860 ## iter 30 value 180.619642 ## iter 40 value 178.073090 ## iter 50 value 177.238524 ## iter 60 value 176.839183 ## iter 70 value 176.831932 ## iter 80 value 176.825982 ## iter 90 value 176.818372 ## iter 100 value 176.817306 ## final value 176.817306 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 605.757787 ## iter 10 value 380.869877 ## iter 20 value 223.562332 ## iter 30 value 209.185760 ## iter 40 value 205.511003 ## iter 50 value 204.642423 ## iter 60 value 204.399226 ## iter 70 value 204.395612 ## iter 80 value 204.393169 ## iter 90 value 204.388969 ## iter 100 value 204.388807 ## final value 204.388807 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 611.407072 ## iter 10 value 406.580154 ## iter 20 value 216.467991 ## iter 30 value 204.588909 ## iter 40 value 199.814896 ## iter 50 value 197.527078 ## iter 60 value 197.395818 ## iter 70 value 197.346849 ## iter 80 value 197.344736 ## final value 197.344541 ## converged ## # weights: 360 (238 variable) ## initial value 590.930696 ## iter 10 value 374.365869 ## iter 20 value 212.379621 ## iter 30 value 200.756131 ## iter 40 value 198.685991 ## iter 50 value 198.106896 ## iter 60 value 197.929650 ## iter 70 value 197.915147 ## iter 80 value 197.892331 ## iter 90 value 197.891152 ## final value 197.891083 ## converged ## # weights: 360 (238 variable) ## initial value 564.396902 ## iter 10 value 330.560572 ## iter 20 value 208.472073 ## iter 30 value 198.286478 ## iter 40 value 195.072535 ## iter 50 value 193.475059 ## iter 60 value 193.435571 ## iter 70 value 193.400403 ## iter 80 value 193.393384 ## iter 90 value 193.393143 ## iter 90 value 193.393142 ## iter 90 value 193.393142 ## final value 193.393142 ## converged ## # weights: 360 (238 variable) ## initial value 609.542617 ## iter 10 value 363.557572 ## iter 20 value 179.990057 ## iter 30 value 165.977164 ## iter 40 value 162.055722 ## iter 50 value 161.556899 ## iter 60 value 161.490990 ## iter 70 value 161.450630 ## iter 80 value 161.431161 ## iter 90 value 161.429945 ## iter 100 value 161.429825 ## final value 161.429825 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 607.447783 ## iter 10 value 379.563584 ## iter 20 value 220.914709 ## iter 30 value 201.477773 ## iter 40 value 194.112073 ## iter 50 value 192.464093 ## iter 60 value 192.262388 ## iter 70 value 192.232833 ## iter 80 value 192.199755 ## iter 90 value 192.186564 ## iter 100 value 192.185555 ## final value 192.185555 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 613.640441 ## iter 10 value 375.328375 ## iter 20 value 226.111904 ## iter 30 value 209.639196 ## iter 40 value 205.016973 ## iter 50 value 200.792057 ## iter 60 value 200.647984 ## iter 70 value 200.639371 ## iter 80 value 200.637701 ## iter 90 value 200.637626 ## iter 90 value 200.637624 ## iter 90 value 200.637624 ## final value 200.637624 ## converged ## # weights: 360 (238 variable) ## initial value 581.400125 ## iter 10 value 317.594958 ## iter 20 value 188.299758 ## iter 30 value 174.316580 ## iter 40 value 167.913216 ## iter 50 value 166.731824 ## iter 60 value 166.557473 ## iter 70 value 166.491010 ## iter 80 value 166.472309 ## iter 90 value 166.461777 ## iter 100 value 166.460591 ## final value 166.460591 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 575.204721 ## iter 10 value 314.225054 ## iter 20 value 184.760915 ## iter 30 value 170.626118 ## iter 40 value 168.232029 ## iter 50 value 167.118795 ## iter 60 value 166.973616 ## iter 70 value 166.972925 ## iter 80 value 166.969216 ## iter 90 value 166.967379 ## final value 166.967315 ## converged ## # weights: 360 (238 variable) ## initial value 590.458623 ## iter 10 value 329.510174 ## iter 20 value 197.980758 ## iter 30 value 185.966007 ## iter 40 value 181.403577 ## iter 50 value 178.843554 ## iter 60 value 178.453868 ## iter 70 value 178.411173 ## iter 80 value 178.404232 ## iter 90 value 178.403838 ## final value 178.403801 ## converged ## # weights: 360 (238 variable) ## initial value 627.844399 ## iter 10 value 415.532527 ## iter 20 value 244.480878 ## iter 30 value 229.600326 ## iter 40 value 224.455249 ## iter 50 value 221.328713 ## iter 60 value 221.123657 ## iter 70 value 221.051163 ## iter 80 value 221.040759 ## iter 90 value 221.040154 ## final value 221.040117 ## converged ## # weights: 360 (238 variable) ## initial value 600.746907 ## iter 10 value 343.519215 ## iter 20 value 209.074630 ## iter 30 value 194.200065 ## iter 40 value 189.518875 ## iter 50 value 188.879623 ## iter 60 value 188.841470 ## iter 70 value 188.803411 ## iter 80 value 188.799454 ## iter 90 value 188.799199 ## final value 188.799186 ## converged ## # weights: 360 (238 variable) ## initial value 617.932060 ## iter 10 value 331.192801 ## iter 20 value 205.125990 ## iter 30 value 185.967472 ## iter 40 value 177.753329 ## iter 50 value 175.518361 ## iter 60 value 175.366635 ## iter 70 value 175.299171 ## iter 80 value 175.275917 ## iter 90 value 175.273198 ## iter 100 value 175.272832 ## final value 175.272832 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 600.614085 ## iter 10 value 362.412005 ## iter 20 value 195.201970 ## iter 30 value 177.807511 ## iter 40 value 173.334619 ## iter 50 value 172.720452 ## iter 60 value 172.573964 ## iter 70 value 172.541604 ## iter 80 value 172.509699 ## iter 90 value 172.508040 ## iter 100 value 172.504100 ## final value 172.504100 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 601.067372 ## iter 10 value 346.403496 ## iter 20 value 200.285424 ## iter 30 value 180.016198 ## iter 40 value 171.367973 ## iter 50 value 170.027521 ## iter 60 value 169.818581 ## iter 70 value 169.711718 ## iter 80 value 169.687231 ## iter 90 value 169.677336 ## iter 100 value 169.672765 ## final value 169.672765 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 646.271752 ## iter 10 value 384.331527 ## iter 20 value 235.938064 ## iter 30 value 219.823356 ## iter 40 value 217.660803 ## iter 50 value 216.157755 ## iter 60 value 215.987881 ## iter 70 value 215.895783 ## iter 80 value 215.884119 ## iter 90 value 215.882544 ## final value 215.882347 ## converged ## # weights: 360 (238 variable) ## initial value 606.392895 ## iter 10 value 345.156702 ## iter 20 value 195.654327 ## iter 30 value 180.345620 ## iter 40 value 177.749338 ## iter 50 value 176.765071 ## iter 60 value 176.680250 ## iter 70 value 176.627646 ## iter 80 value 176.607674 ## iter 90 value 176.602397 ## iter 100 value 176.596889 ## final value 176.596889 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 597.778676 ## iter 10 value 376.354840 ## iter 20 value 233.758967 ## iter 30 value 218.618624 ## iter 40 value 214.429289 ## iter 50 value 213.282433 ## iter 60 value 213.238257 ## iter 70 value 213.209331 ## iter 80 value 213.201941 ## iter 90 value 213.201524 ## final value 213.201516 ## converged ## # weights: 360 (238 variable) ## initial value 579.916669 ## iter 10 value 367.897380 ## iter 20 value 209.937899 ## iter 30 value 197.669980 ## iter 40 value 194.682999 ## iter 50 value 193.561778 ## iter 60 value 193.512320 ## iter 70 value 193.461850 ## iter 80 value 193.457516 ## iter 90 value 193.457294 ## iter 100 value 193.457240 ## final value 193.457240 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 593.051457 ## iter 10 value 398.133080 ## iter 20 value 235.958918 ## iter 30 value 216.250406 ## iter 40 value 208.238058 ## iter 50 value 207.074908 ## iter 60 value 206.994009 ## iter 70 value 206.914901 ## iter 80 value 206.902955 ## iter 90 value 206.902271 ## final value 206.902201 ## converged ## # weights: 360 (238 variable) ## initial value 597.803725 ## iter 10 value 367.353777 ## iter 20 value 213.051608 ## iter 30 value 195.433337 ## iter 40 value 190.225223 ## iter 50 value 189.247037 ## iter 60 value 189.081571 ## iter 70 value 189.024345 ## iter 80 value 189.012660 ## iter 90 value 189.011570 ## iter 100 value 189.011457 ## final value 189.011457 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 599.134913 ## iter 10 value 341.526240 ## iter 20 value 230.846181 ## iter 30 value 213.353497 ## iter 40 value 207.412420 ## iter 50 value 204.483856 ## iter 60 value 204.325481 ## iter 70 value 204.297611 ## iter 80 value 204.293351 ## iter 90 value 204.290134 ## final value 204.290016 ## converged ## # weights: 360 (238 variable) ## initial value 620.613992 ## iter 10 value 332.980706 ## iter 20 value 210.185511 ## iter 30 value 191.318556 ## iter 40 value 182.765986 ## iter 50 value 180.048857 ## iter 60 value 179.517408 ## iter 70 value 179.338576 ## iter 80 value 179.291067 ## iter 90 value 179.280858 ## iter 100 value 179.276730 ## final value 179.276730 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 582.157398 ## iter 10 value 347.390717 ## iter 20 value 200.808651 ## iter 30 value 183.782257 ## iter 40 value 173.899829 ## iter 50 value 172.011739 ## iter 60 value 171.636384 ## iter 70 value 171.565510 ## iter 80 value 171.520174 ## iter 90 value 171.508775 ## iter 100 value 171.500049 ## final value 171.500049 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 570.295022 ## iter 10 value 324.445802 ## iter 20 value 199.822653 ## iter 30 value 188.481529 ## iter 40 value 185.700829 ## iter 50 value 184.866416 ## iter 60 value 184.829305 ## iter 70 value 184.786697 ## iter 80 value 184.781969 ## iter 90 value 184.781744 ## final value 184.781737 ## converged ## # weights: 360 (238 variable) ## initial value 600.949491 ## iter 10 value 330.100918 ## iter 20 value 208.589173 ## iter 30 value 190.086454 ## iter 40 value 182.543786 ## iter 50 value 180.506922 ## iter 60 value 180.389510 ## iter 70 value 180.324917 ## iter 80 value 180.310685 ## iter 90 value 180.309078 ## iter 100 value 180.308802 ## final value 180.308802 ## stopped after 100 iterations ## # weights: 360 (238 variable) ## initial value 618.180456 ## iter 10 value 369.503815 ## iter 20 value 239.749182 ## iter 30 value 219.530142 ## iter 40 value 210.026036 ## iter 50 value 209.121049 ## iter 60 value 209.049737 ## iter 70 value 209.013005 ## iter 80 value 209.010508 ## iter 90 value 209.010308 ## iter 90 value 209.010306 ## iter 90 value 209.010306 ## final value 209.010306 ## converged ## # weights: 360 (238 variable) ## initial value 634.466175 ## iter 10 value 388.299115 ## iter 20 value 220.794091 ## iter 30 value 204.554607 ## iter 40 value 198.639513 ## iter 50 value 195.760867 ## iter 60 value 195.524780 ## iter 70 value 195.472253 ## iter 80 value 195.453683 ## iter 90 value 195.452094 ## iter 100 value 195.451897 ## final value 195.451897 ## stopped after 100 iterations tbl &lt;- tidy(m3m_bet)[1:8,] %&gt;% mutate(star = if_else(p.value &lt; .001, &#39;***&#39;, if_else(p.value &lt; .01, &#39;**&#39;, if_else(p.value &lt; 0.05, &#39;*&#39;, &#39;&#39;)))) vals &lt;- function(i) { c(sprintf(&quot;%5.3f&quot;, tbl[i,2]), sprintf(&quot;(%5.3f)&quot;, tbl[i,3])) } df &lt;- tibble( Variable = c(&quot;Intercept&quot;, &quot;&quot;, &quot;Asian&quot;, &quot;&quot;, &quot;Black&quot;, &quot;&quot;, &quot;Latinx&quot;, &quot;&quot;), Better = c(sapply(seq(1, 7, 2), vals)), ` ` = c(sapply(tbl[seq(1, 7, 2), 6], c, &quot;&quot;)), Worse = c(sapply(seq(2, 8, 2), vals)), ` ` = c(sapply(tbl[seq(2, 8, 2), 6], c, &quot;&quot;)) ) kable(df, align = &#39;lrlrl&#39;, format = &#39;pandoc&#39;) Variable Better Worse Intercept -13.006 1.653 (9.170) (11.893) Asian -0.925 0.710 (1.548) (0.887) Black -0.077 1.141 (1.228) (0.816) Latinx 0.557 1.285 (1.949) (1.029) I based the tertiles on the unique neighborhoods in the data. The tertiles have different numbers of residents based on the varying number of residents in each neighborhood.↩︎ The census tract with the dramatic change was where a new subdivision was built where previously a single family lived on a family-owned farm.↩︎ "]]
